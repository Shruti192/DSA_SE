b'\nRead problems statements in Mandarin Chinese, Russian, and Bengali as well.\nYour friend works as a valet where NN cars show up in a shift. The ii-th car will arrive TiTi seconds after the current moment, and the car can wait for at most YiYi seconds. That is, your friend can only start parking the car from time TiTi to Ti+YiTi+Yi (inclusive).\nAdditionally, it takes XiXi time to park the ii-th car, which means he cannot park any other cars for XiXi seconds starting from the time he starts parking the ii-th car. It is known that no driver would like to wait for more time than it takes to park his car, so that Yi<XiYi<Xi for all ii. The driver of the ii-th car will pay AiAi coins as a tip to your friend if his car is parked. Note that he can start parking the next car immediately after he finishes parking the previous car.\nYour friend has asked you what will be the maximize possible earnings if he optimally chooses which cars to park and at what times.\nInput:\n\nThe first line contains one single integer NN (1\xe2\x89\xa4N\xe2\x89\xa43\xe2\x8b\x85105)(1\xe2\x89\xa4N\xe2\x89\xa43\xe2\x8b\x85105) \xe2\x88\x92\xe2\x88\x92 the number of cars.\nThe second line contains NN integers T1,T2,\xe2\x80\xa6,TnT1,T2,\xe2\x80\xa6,Tn \xe2\x88\x92\xe2\x88\x92 the time (in seconds) at which ii-th car arrives.\nThe third line contains NN integers X1,X2,\xe2\x80\xa6,XnX1,X2,\xe2\x80\xa6,Xn \xe2\x88\x92\xe2\x88\x92 the time (in seconds) required to park the ii-th car.\nThe fourth line contains NN integers Y1,Y2,\xe2\x80\xa6,YnY1,Y2,\xe2\x80\xa6,Yn \xe2\x88\x92\xe2\x88\x92 the maximum time (in seconds) for which the ii-th car can wait.\nThe fifth line contains NN integers A1,A2,\xe2\x80\xa6,AnA1,A2,\xe2\x80\xa6,An \xe2\x88\x92\xe2\x88\x92 the tip which the ii-th car driver gives after the car is parked.\n\nOutput:\nPrint a single integer \xe2\x88\x92\xe2\x88\x92 the answer to the problem.\nConstraints\n\n1\xe2\x89\xa4N\xe2\x89\xa43\xe2\x8b\x851051\xe2\x89\xa4N\xe2\x89\xa43\xe2\x8b\x85105\n1\xe2\x89\xa4Ti\xe2\x89\xa44\xe2\x8b\x851031\xe2\x89\xa4Ti\xe2\x89\xa44\xe2\x8b\x85103\n0\xe2\x89\xa4Yi<Xi\xe2\x89\xa44\xe2\x8b\x851030\xe2\x89\xa4Yi<Xi\xe2\x89\xa44\xe2\x8b\x85103\n1\xe2\x89\xa4Ai\xe2\x89\xa41091\xe2\x89\xa4Ai\xe2\x89\xa4109\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n3\n5 8 11\n3 10 4\n1 0 1\n11 13 5\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n24\n\n\nExplanation\nIt is optimal to start parking the first car at 55 seconds. We finish parking at 88 seconds, and immediately start parking the second car.\n\n\n\nAuthor:\n6\xe2\x98\x85yash_daga\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/VALET\n\n\nTags:\n\n               \n                 Priority Queue, Multiset, Dynamic Programming, Sorting\n                 \n                     \n                     Data Structures, Queues, Sets, Algorithms\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2397\n\n\nDate Added:\n13-04-2021\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'