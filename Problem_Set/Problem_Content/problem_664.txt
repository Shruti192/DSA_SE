b"\nThe chef has recently learned a new recipe to make pizza. Basically chef has NN ingredients and each ingredient ii has a cost cici.\nA topping for the pizza is prepared by taking at least MM ingredients and the cost of making a topping is defined as the difference between the maximum and minimum cost of the ingredient involved in making this topping. Each ingredient must be present in exactly one topping, and also it is not allowed to leave any ingredient.  \nLet the number of toppings prepared by the chef be XX (1\xe2\x89\xa4X)(1\xe2\x89\xa4X) following the above constraint and the cost of toppings be denoted by t1,t2,t3,....,txt1,t2,t3,....,tx. The overall cost of the pizza is defined as the maximum of the cost of all such toppings i.e max(t1,t2,t3,....,tx)max(t1,t2,t3,....,tx). Help the chef to find the minimum cost in which the pizza can be prepared i.e. you need to minimize max(t1,t2,t3,....,tx)max(t1,t2,t3,....,tx).\nNote:\nYou need to minimize the overall cost of the pizza, you don't need to maximize or minimize the cost of any topping or the number of toppings.\nInput :\nThe first line of the input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.\nThe first line contains two integers NN and MM, denoting the number of ingredients and the minimum size of the group of ingredients for preparing a topping.\nThe second line contains N space separated c1,c2,c3,...,cnc1,c2,c3,...,cn integers denoting the cost of each ingredient.\nOutput:\nFor each test case, print a single integer denoting the minimum cost to prepare the pizza.\nConstraints:\n\n1\xe2\x89\xa4T\xe2\x89\xa410001\xe2\x89\xa4T\xe2\x89\xa41000\n1\xe2\x89\xa4M\xe2\x89\xa4N\xe2\x89\xa42000001\xe2\x89\xa4M\xe2\x89\xa4N\xe2\x89\xa4200000\n1\xe2\x89\xa4Ci\xe2\x89\xa41091\xe2\x89\xa4Ci\xe2\x89\xa4109\nSum of N over all the test cases does not exceed 2\xe2\x88\x971052\xe2\x88\x97105\n\nSample Input:\n2\n6 6\n10 8 12 1 3 7\n5 2\n2 8 9 12 14\n\nSample Output:\n11\n6\n\nExplanation:\nIn the first test case we have to take the whole array, so difference between the maximum and minimum is 12 - 1 = 11.\nIn the second test case, we can partition our array into [2,8] and [9,12,14] so the overall cost is max((8-2),(14-9)) = 6.\n\n\n\nAuthor:\n5\xe2\x98\x85naveen19991124\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/RECIPEE\n\n\nTags:\n\n               \n                 binary-search, dynamic-programming, naveen19991124\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\nN/A\n\n\nDate Added:\n12-03-2021\n\n\nTime Limit:\n2 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"