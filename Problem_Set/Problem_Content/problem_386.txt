b'\nRead problems statements in mandarin chinese, russian and vietnamese as well.\nYesterday Chef had cooked N very tasty dishes. A dish is prepared of several ingredients. You are given this information by N arrays, each array contains elements equal to the number of ingredients used in that dish. Also, an element of the array denotes the tastiness of the ingredient in the corresponding dish.\nChef placed his N dishes in a line, one after the other. You can make a simple observation that the last ingredient of a dish will be a neighbor of the first ingredient of the next dish. Of course, this is not valid for the N-th dish, as it\'s the last dish.\n\nOverall quality of these dishes will be calculated as follows. Consider dish i and i + 1, if the last ingredient of dish i be of tastiness x, and the first ingredient of dish i + 1 of tastiness of y, then the quality of dish will be increased by |x - y| * i, where (|t| denotes the absolute value of t).\nChef wants to maximize the quality of the dish. For each dish, he is allowed to take its ingredients and cyclically rotate/shift them by as many rotations as he wishes. Find the maximum possible quality of the dishes that he can obtain.\nInput\nThe first line of the input contains an integer T denoting the number of test cases.\nThe first line of each test case contains a single integer N denoting the number of dishes. \nNext N lines follows. i-th line contains integer M denoting the number of ingredients in i-th dish and M space-separated integers A1, A2, ..., AM denoting the tastiness of ingredients of i-th dish.". \nOutput\nFor each test case, output in a single line an integer corresponding to the maximum possible quality of the dishes.\nConstraints\n\nTotal number of ingredients over all the test cases in a single test file won\'t exceed 106\nM \xe2\x89\xa5 1\n1 \xe2\x89\xa4 Ai \xe2\x89\xa4 106\n\nSubtasks\n\nSubtask #1 (20 points): Total number of dishes = 2.\nSubtask #2 (30 points): 1 \xe2\x89\xa4 Ai \xe2\x89\xa4 500\nSubtask #3 (50 points): original constraints\n\nExample\nInput:\n3\n3\n3 1 2 3\n2 3 2\n2 4 5\n2\n2 1 2\n2 4 5\n3\n2 1 2\n3 3 2 5\n2 4 5\n\nOutput:\n8\n4\n10\n\nExplanation\nExample case 1. \n01) 123|32|45 = 0 * 1 + 2 * 2 = 4\n02) 312|32|45 = 1 * 1 + 2 * 2 = 5\n03) 231|32|45 = 2 * 1 + 2 * 2 = 6\n04) 123|23|45 = 1 * 1 + 1 * 2 = 3\n05) 312|23|45 = 0 * 1 + 1 * 2 = 2\n06) 231|23|45 = 1 * 1 + 1 * 2 = 3\n07) 123|32|54 = 0 * 1 + 3 * 2 = 6\n08) 312|32|54 = 1 * 1 + 3 * 2 = 7 \n09) 231|32|54 = 2 * 1 + 3 * 2 = 8\n10) 123|23|54 = 1 * 1 + 2 * 2 = 5\n11) 312|23|54 = 0 * 1 + 2 * 2 = 4\n12) 231|23|54 = 1 * 1 + 2 * 2 = 5\n\n\n\nAuthor:\nberezin\n\n\nTester:\n7\xe2\x98\x85alex_2oo8\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/MARRAYS\n\n\nTags:\n\n               \n                 Segment Trees, Dynamic Programming, Binary Search\n                 \n                     \n                     Advanced Data Structures, Advanced Tree Structures, Algorithms, Searching\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2263\n\n\nDate Added:\n23-01-2014\n\n\nTime Limit:\n2 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'