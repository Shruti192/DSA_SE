b"\n\nAccording to many researches, people can stand on a bus for several hours, but waiting for a bus for more than 30 minutes at a bus station can make us exhausted. The Chef is a perfect example for this fact. He always tries to reduce the longest period of time of waiting for a bus. Therefore, optimizing the traveling plan for him is far from an easy task.\n\n\nLet's consider the bus system with N bus stations (numbered from 1 to N) and M buses (numbered from 1 to M). Each bus is represented by 4 integer numbers U, V, S, E which means it will start at the bus station U at the time S and arrive at the bus station V at the time E with no intermediate bus stations. If passenger arrives at the bus station U at the time X \xe2\x89\xa4 S, he has to wait for S \xe2\x88\x92 X units of time to catch this bus. Note, that if he arrives at the bus station U exactly at time S he can catch this bus with no waiting time.\n\n\nThe Chef starts at the time 0 in the bus station 1, and he wants to arrive at the bus station N in a way that the longest period that he spends for waiting for a bus is as small as possible. Besides, he must be at the bus station N before or at the time T for a specially important meeting. Note, that he may wait for a meeting if he arrives at the bus station N early but that period is not our concern here, since he doesn't wait for any bus at that time.\n\nInput\n\nThe first line of the input contains three space-separated integers N, T and M, denoting the number of bus stations, the deadline for coming to bus station N and the number of buses, respectively. Each of the following M lines contains four space-separated integers U, V, S, E, the parameters of the current bus as described in the problem statement.\n\nOutput\n\nIf Chef cannot arrive at the bus station N before or at the time T, output -1. Otherwise, output the maximum period of time he has to wait for a bus in the optimal traveling plan.\n\nConstraints\n\n2 \xe2\x89\xa4 N \xe2\x89\xa4 50000\n1 \xe2\x89\xa4 T \xe2\x89\xa4 109\n1 \xe2\x89\xa4 M \xe2\x89\xa4 100000 (105)\n1 \xe2\x89\xa4 U \xe2\x89\xa4 N\n1 \xe2\x89\xa4 V \xe2\x89\xa4 N\nU \xe2\x89\xa0 V\n0 \xe2\x89\xa4 S < E \xe2\x89\xa4 109\n\nExample\nInput:\n5 10 5\n1 2 1 2\n1 5 3 4\n2 4 4 5\n2 5 5 6\n4 5 6 7\n\nOutput:\n2\n\nExplanation\n\nThere are three different traveling plans:\nbus 1 \xe2\x86\x92 bus 3 \xe2\x86\x92 bus 5. His waiting time for each bus is 1, 2, 1, respectively.\nbus 2. His waiting time is 3.\nbus 1 \xe2\x86\x92 bus 4. His waiting time for each bus is 1, 3, respectively.\n\n\n\nFor each traveling plan Chef arrives at the bus station N = 5 before the time T = 10. But only the first traveling plan is optimal, since the longest period of time his has to wait is 2.\n\n\n\n\nAuthor:\ntuan_adm\n\n\nTester:\n6\xe2\x98\x85anton_lunyov\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/TABUS\n\n\nTags:\n\n               \n                 BFS, Sorting, Binary Search\n                 \n                     \n                     Algorithms, Graph Algos, Traversals, Searching\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2547\n\n\nDate Added:\n26-01-2013\n\n\nTime Limit:\n1.5 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"