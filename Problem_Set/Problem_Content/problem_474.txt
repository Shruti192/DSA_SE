b"\nThere is a grid containing NN rows and NN columns. The cell at the ithith row from the top and jthjth column from the left is a passable space if Si,jSi,j is '.' and a blocked cell if Si,jSi,j is '#'. \nChef is at the top-left cell and wants to reach the bottom-right cell. Chef can move one cell down, or right to a passable cell. He can't leave the grid. If Chef is at the cell (i,j)(i,j), he can collect Ai,jAi,j coins. \nNow, Chef has a special ability using which he can make all the blocked cells in a path of length KK into passable cells. Chef uses this ability before moving from the top-left cell. It is possible that some of the cells in the chosen KK length path are already passable. More formally, Chef can choose a sequence of KK cells such that for each ii (1\xe2\x89\xa4i<K)(1\xe2\x89\xa4i<K), the ithith and (i+1)th(i+1)th cells of the sequence are adjacent and make all these KK cells passable.\nFind the maximum amount of coins Chef can collect in the path from the top-left cell to the bottom-right cell. Print \xe2\x88\x921\xe2\x88\x921 if it is impossible to reach the bottom-right cell.\nNote: Two cells are considered to be adjacent if they share a common side. The cell (i,j)(i,j) has four adjacent cells i.e. the cells (i\xe2\x88\x921,j)(i\xe2\x88\x921,j), (i+1,j)(i+1,j), (i,j\xe2\x88\x921)(i,j\xe2\x88\x921) and (i,j+1)(i,j+1). It is guaranteed that the top-left cell of the grid is a passable cell.\nInput Format\nThe first line of the input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.\n\nThe first line of each test case contains two space-separated integers N,KN,K.\nNN  lines follow. The ithith of these lines contains a string SiSi of length NN. The jthjth character of SiSi is '.' if the cell (i,j)(i,j) is passable, or '#' if it is a blocked cell. \nNext NN lines follow. The ithith of these lines contains NN space-separated integers  Ai,jAi,j, denoting the number of coins in the cell (i,j)(i,j).\n\nOutput Format\nFor each test case, print a single line containing one integer - the maximum amount of coin Chef can collect in the path or \xe2\x88\x921\xe2\x88\x921 if it is impossible to reach the bottom-right cell.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa44\xe2\x8b\x851031\xe2\x89\xa4T\xe2\x89\xa44\xe2\x8b\x85103\n2\xe2\x89\xa4N\xe2\x89\xa41502\xe2\x89\xa4N\xe2\x89\xa4150\n0\xe2\x89\xa4K\xe2\x89\xa42\xe2\x8b\x85N\xe2\x88\x9220\xe2\x89\xa4K\xe2\x89\xa42\xe2\x8b\x85N\xe2\x88\x922\n1\xe2\x89\xa4Ai,j\xe2\x89\xa41051\xe2\x89\xa4Ai,j\xe2\x89\xa4105\nSi,jSi,j is either '.'  or '#'.\nIt is guaranteed that the top-left cell of the grid is a passable cell.\nSum N2N2 over all testcases does not exceed 3\xe2\x8b\x851053\xe2\x8b\x85105.\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n3\n2 1\n.#\n#.\n1 2\n3 4\n3 3\n.#.\n#.#\n..#\n1 1 1\n1 1 1\n1 1 1\n5 4 \n.....\n#####\n.....\n#####\n.....\n2 3 4 1 5\n1 7 15 12 2\n2 5 10 8 3\n9 9 9 9 9\n1 2 3 4 5\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n8\n-1\n62\n\n\nExplanation\nTest case 11: Chef breaks the blocked cell (2,1)(2,1) and choose the path -\n(1,1)\xe2\x86\x92(2,1)\xe2\x86\x92(2,2)(1,1)\xe2\x86\x92(2,1)\xe2\x86\x92(2,2). Total coins collected in the path is 1+3+4=81+3+4=8.\nTest case 22: There is no way to choose a path of length 33 such that after breaking the blocked cells in the path, it is possible to reach the bottom-right cell.\nTest case 33: Chef chooses the path of consisting of cells (2,3),(2,3), (2,4)(2,4), (3,4)(3,4), (4,4)(4,4) and break the blocked cells in this path. Then Chef chooses the path - (1,1)\xe2\x86\x92(1,2)\xe2\x86\x92(1,3)\xe2\x86\x92(2,3)\xe2\x86\x92(2,4)\xe2\x86\x92(3,4)\xe2\x86\x92(4,4)\xe2\x86\x92(5,4)(1,1)\xe2\x86\x92(1,2)\xe2\x86\x92(1,3)\xe2\x86\x92(2,3)\xe2\x86\x92(2,4)\xe2\x86\x92(3,4)\xe2\x86\x92(4,4)\xe2\x86\x92(5,4) \xe2\x86\x92(5,5)\xe2\x86\x92(5,5). Total coins collected in the path is 2+3+42+3+4 +15+12+8+15+12+8 +9+4+5=62+9+4+5=62.\n\n\n\nAuthor:\n5\xe2\x98\x85soumyadeep_21\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/GRIDPA\n\n\nTags:\n\n               \n                 Dynamic Programming\n                 \n                     \n                     Algorithms\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2750\n\n\nDate Added:\n25-08-2021\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"