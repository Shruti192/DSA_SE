b'\nA fair is organized in the village. There are N shops in the village fair. All the shops can be classified as a BadBad shop or a GoodGood shop. Each shop has certain number of coins (AiAi) assigned to it. If someone visits a Good shop, they will get AiAi coins and if someone visits a Bad shop they will have to deposit AiAi coins.  \nA Good shop will have positive AiAi (including 0) and a Bad shop will have negative AiAi.  \nAlice is playing a game. The rule of the game is simple. Alice has to move across ContiguousContiguous shops in the market lane, if she visits a Bad shop, she have to deposit the number of coins assigned to that shop and if she visits a Good shop, she gets the coins assigned to that shop, the only Restriction being that she can only visit contiguous shops. Formally, Alice can choose any i and j  such that 1\xe2\x89\xa4i\xe2\x89\xa4j\xe2\x89\xa4N1\xe2\x89\xa4i\xe2\x89\xa4j\xe2\x89\xa4N and visits all the shops between i and j (both inclusive). \nInitially Alice has 0 coins. Alice can also opt NotNot to visit any shop and ends up having 0 coins only. Alice wants to know the maximum coins she can collect. She alone cannot calculate this and asked for your help!. Are you able to tell the maximum number of coins Alice can collect if she plays optimally ?  \nInput:\n\nFirst line of input will contain TT, number of testcases. Then the testcases follow. \nFirst line of testcase contains a single integer NN, total number of shops in the village.   \nSecond line of testcase contains NN space separated integers, AiAi the number of coins associated with the itithh shop.\n\nOutput:\nFor each testcase, output a single line integer the maximum number of coins Alice can collect.  \nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa4101\xe2\x89\xa4T\xe2\x89\xa410\n1\xe2\x89\xa4N\xe2\x89\xa41051\xe2\x89\xa4N\xe2\x89\xa4105 \n\xe2\x88\x92100\xe2\x89\xa4Ai\xe2\x89\xa4100\xe2\x88\x92100\xe2\x89\xa4Ai\xe2\x89\xa4100\n\nSample Input:\n3\n9\n4 -2 -3 4 -1 -2 1 5 -3\n3\n-2 -3 -17\n5\n-1 -5 7 0 1  \nSample Output:\n7\n0\n8    \nEXPLANATION:\nCase\xc2\xa0#1Case\xc2\xa0#1 : here optimum continuous shops to visit are 4,-1,-2,1,5 i.e.  i=4 to j=8. Choosing any other continuous shops will give you sum less than 7.  \nCase\xc2\xa0#2Case\xc2\xa0#2 : As all shops are Bad, so Alice will not visit any shop and ends up having 0 coins only.   \nCase\xc2\xa0#3Case\xc2\xa0#3 : Here Alice will visits shops 7,0,1 i.e. from i=3 to j=5.  \n\n\n\nAuthor:\n4\xe2\x98\x85prasoonjain006\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/COINGME\n\n\nTags:\n\n               \n                 dynamic-programming, easy-medium, heat2021, kadane-algorithm, prasoonjain006\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\nN/A\n\n\nDate Added:\n12-01-2021\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'