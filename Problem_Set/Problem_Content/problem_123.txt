b'\nRead problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese as well.\nThe MEX of a set of integers is defined as the smallest non-negative integer that does not belong to this set. For example, MEX({0,2,3})=1MEX({0,2,3})=1 and MEX({1,3})=0MEX({1,3})=0.\nChef has a tree with NN nodes (numbered 11 through NN). The tree is rooted at node 11. Chef wants to assign a non-negative integer to each node in such a way that each integer between 00 and N\xe2\x88\x921N\xe2\x88\x921 (inclusive) is assigned to exactly one node.\nFor each node uu, consider the integers assigned to the nodes in the subtree of uu (including uu); let auau denote the MEX of these integers. Chef wants a1+a2+\xe2\x80\xa6+aNa1+a2+\xe2\x80\xa6+aN to be as large as possible. Find the maximum possible value of this sum.\nInput\n\nThe first line of the input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.\nThe first line of each test case contains a single integer NN.\nThe second line contains N\xe2\x88\x921N\xe2\x88\x921 space-separated integers p1,p2,\xe2\x80\xa6,pN\xe2\x88\x921p1,p2,\xe2\x80\xa6,pN\xe2\x88\x921. For each valid ii, the node pipi is the parent of the node i+1i+1.\n\nOutput\nFor each test case, print a single line containing one integer \xe2\x80\x95 the maximum sum of subtree MEX-s which can be obtained if you assign the weights optimally.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa451\xe2\x89\xa4T\xe2\x89\xa45\n2\xe2\x89\xa4N\xe2\x89\xa41052\xe2\x89\xa4N\xe2\x89\xa4105\n1\xe2\x89\xa4pi<i1\xe2\x89\xa4pi<i for each valid ii\n\nSubtasks\nSubtask #1 (100 points): original constraints\n\n                        Sample Input 1\n                        \n\n\n\n\n\n2\n3\n1 1\n5\n1 1 2 2\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n4\n9\n\n\n\n\n\nAuthor:\n6\xe2\x98\x85mohammed200218\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/SUBMEXS\n\n\nTags:\n\n               \n                 Trees, Greedy, DFS, BFS\n                 \n                     \n                     Data Structures, Graphs, Algorithms, Graph Algos, Traversals\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2158\n\n\nDate Added:\n13-10-2020\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'