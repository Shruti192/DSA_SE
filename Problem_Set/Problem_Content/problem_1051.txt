b"\nYou may have helped Chef and prevented Doof from destroying the even numbers. But, it has only angered Dr Doof even further. However, for his next plan, he needs some time. Therefore, Doof has built NN walls to prevent Chef from interrupting him. You have to help Chef by telling him the number of walls he needs to destroy in order to reach Dr Doof.\nFormally, the whole area can be represented as the first quadrant with the origin at the bottom-left corner. Dr. Doof is located at the origin (0,0)(0,0). There are NN walls, the i-th wall is a straight line segment joining the points (ai,0)(ai,0) and (0,ai)(0,ai). For every initial position of Chef (xj,yj)(xj,yj), find the number of walls he needs to break before reaching Doof. Obviously, chef can't start from a point on the wall. Therefore, if (xj,yj)(xj,yj) lies on any of the given walls, print \xe2\x88\x921\xe2\x88\x921 in a new line.\nInput\n\nFirst line contains TT, denoting the number of testcases.\nThe first line of every test case contains a single integer NN denoting the number of walls Dr Doof has built.\nThe next line contains NN space separated distinct integers each denoting aiai.\nThe next line contains a single integer QQ denoting the number of times Chef asks for your help.\nThe next QQ lines contains two space separated integers xjxj and yjyj, each denoting the co-ordinates of the starting point of Chef.\n\nOutput\nFor each query, print the number of walls Chef needs to break in order to reach Dr Doof in a separate line. If Chef tries to start from a point on any of the walls, print \xe2\x88\x921\xe2\x88\x921.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa42\xe2\x88\x971021\xe2\x89\xa4T\xe2\x89\xa42\xe2\x88\x97102\n1\xe2\x89\xa4N,Q\xe2\x89\xa42\xe2\x88\x971051\xe2\x89\xa4N,Q\xe2\x89\xa42\xe2\x88\x97105\n1\xe2\x89\xa4ai\xe2\x89\xa41091\xe2\x89\xa4ai\xe2\x89\xa4109\n0\xe2\x89\xa4xj,yj\xe2\x89\xa41090\xe2\x89\xa4xj,yj\xe2\x89\xa4109\na1<a2<a3<....<aNa1<a2<a3<....<aN\nSum of NN and QQ over all testcases for a particular test file does not exceed 2\xe2\x88\x971052\xe2\x88\x97105\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n1\n2\n1 3\n5\n0 0\n2 0\n0 4\n1 1\n1 2\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n0\n1\n2\n1\n-1\n\n\nExplanation\nThe sample input can be represented by the graph given below:\n\nIf Chef starts from (0,0)(0,0), he can reach Dr Doof without destroying any wall.\nIf Chef starts from (2,0)(2,0), he has to destroy the 1st1st wall.\nIf Chef starts from (0,4)(0,4), he has to destroy both the walls.\nIf Chef starts from (1,1)(1,1), he has to destroy the 1st1st wall.\nAs (1,2)(1,2) lies on the second wall, the answer is \xe2\x88\x921\xe2\x88\x921 for the last query.\n\n\n\nAuthor:\n6\xe2\x98\x85sarthakmanna\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/CLPNT\n\n\nTags:\n\n               \n                 Cartesian Coordinate System\n                 \n                     \n                     Mathematics\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n1549\n\n\nDate Added:\n18-06-2020\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"