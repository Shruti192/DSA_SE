b"\nRead problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese as well.\nDr.D has broken into O.W.C.A. (The Organization Without A Cool Acronym) in order to find Agent P's reports. He has already found the great vault of O.W.C.A. where Major Monogram keeps the O.W.C.A. files. Unfortunately, the vault is protected by Major Monogram's secret password.\nDr.D knows that Major Monogram has always been fond of NN integers A1,A2,\xe2\x80\xa6,ANA1,A2,\xe2\x80\xa6,AN and the password he chose is the product of KK of these integers modulo some prime PP (since the product itself might become huge and thus hard for him to remember). The integers in the product do not have to correspond to distinct elements of AA, Major Monogram simply chose KK indices i1,i2,\xe2\x80\xa6,iKi1,i2,\xe2\x80\xa6,iK and computed Ai1\xe2\x8b\x85Ai2\xe2\x8b\x85\xe2\x80\xa6\xe2\x8b\x85AiKAi1\xe2\x8b\x85Ai2\xe2\x8b\x85\xe2\x80\xa6\xe2\x8b\x85AiK modulo PP.\nWith a lot of effort, Dr.D found out PP, KK and AA, but he does not know how Major Monogram chose KK integers from the sequence AA. In order to get into the vault, Dr.D has created the Bruteforceinator, which will try all sequences of KK valid indices i1,i2,\xe2\x80\xa6,iKi1,i2,\xe2\x80\xa6,iK (NKNK sequences in total) and for each of them, compute the product Ai1\xe2\x8b\x85Ai2\xe2\x8b\x85\xe2\x80\xa6\xe2\x8b\x85AiKAi1\xe2\x8b\x85Ai2\xe2\x8b\x85\xe2\x80\xa6\xe2\x8b\x85AiK and try its remainder modulo PP, instead of just trying all possible passwords from 00 to P\xe2\x88\x921P\xe2\x88\x921. The Bruteforceinator keeps trying even after it has tried a correct password and only unlocks the vault after it tries all NKNK options.\nWhile the Bruteforceinator is doing its job, Dr.D is wondering how many times it will try each possible password. For each ii beween 00 and P\xe2\x88\x921P\xe2\x88\x921 (inclusive), find the number of times the Bruteforceinator will try ii as the password. Since these numbers may get large, compute them modulo 998,244,353998,244,353.\nInput\n\nThe first line of the input contains three space-separated integers NN, PP and KK.\nThe second line contains NN space-separated integers A1,A2,\xe2\x80\xa6,ANA1,A2,\xe2\x80\xa6,AN.\n\nOutput\nPrint a single line containing PP space-separated integers. For each ii (1\xe2\x89\xa4i\xe2\x89\xa4P1\xe2\x89\xa4i\xe2\x89\xa4P), the ii-th of these integers should be the number of times the Bruteforceinator will try i\xe2\x88\x921i\xe2\x88\x921 as the password, modulo 998,244,353998,244,353.\nConstraints\n\n1\xe2\x89\xa4N,P\xe2\x89\xa4259,4311\xe2\x89\xa4N,P\xe2\x89\xa4259,431\nPP is a prime number\n0\xe2\x89\xa4Ai\xe2\x89\xa4P\xe2\x88\x9210\xe2\x89\xa4Ai\xe2\x89\xa4P\xe2\x88\x921 for each valid ii\n0\xe2\x89\xa4K\xe2\x89\xa4109+90\xe2\x89\xa4K\xe2\x89\xa4109+9\n\nSubtasks\nSubtask #1 (16 points): 1\xe2\x89\xa4N\xe2\x89\xa44001\xe2\x89\xa4N\xe2\x89\xa4400\nSubtask #2 (84 points): original constraints\n\n                        Sample Input 1\n                        \n\n\n\n\n\n6 11 3\n9 8 4 3 5 3\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n0 27 9 31 28 32 19 15 18 22 15\n\n\n\n\n\nAuthor:\n7\xe2\x98\x85kmaaszraa\n\n\nTags:\n\n               \n                 binary-exponentation, combinatorics, fast-fourier-transform, jan20, kmaaszraa, kmaaszraa, math, primitive-root, vijju123\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\nN/A\n\n\nDate Added:\n8-12-2019\n\n\nTime Limit:\n4 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"