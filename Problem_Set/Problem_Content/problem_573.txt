b"\n Read problems statements in English, Mandarin Chinese and Russian as well.\nYou have a tree consisting of N vertices numbered 1 to N.\nInitially each edge has a value equal to zero. You have to first perform M1 operations and then answer M2 queries. Note you have to first perform all the operations and then answer all queries after all operations have been done.\nOperations are defined by:\nA B C D: On the path between nodes numbered A and B increase the value of each edge by 1, except for those edges which occur on the path between C and D. Note that there is an unique path between every pair of nodes ie. we don't consider values on edges for finding the path. All four values given in input will be distinct.\n\nQueries are of the following type:\nE F: Print the sum of values of all the edges on the path between two distinct nodes E and F. Again the path will be unique.\n\nInput\nInput description.\nFirst line contains N, M1 and M2. Each of the next N-1 lines contain two integers u v denoting an undirected edge between node numbered u and v. Each of the next M1 lines contain four integers Ai Bi Ci Di, denoting the operations. Each of the next M2 lines contain two integers Ei Fi denoting the queries.\nOutput\nFor each query, print the required answer in one line.\nConstraints\n1 \xe2\x89\xa4 N \xe2\x89\xa4 105\n1 \xe2\x89\xa4 M1, M2 \xe2\x89\xa4 5*105\n1 \xe2\x89\xa4 Ai, Bi, Ci, Di, Ei, Fi \xe2\x89\xa4 N\n\xc2\xa0\nExample\nInput:\n5 2 2\n1 2\n2 4\n2 5\n1 3\n1 4 2 3\n3 4 2 5\n4 5\n4 3\n\nOutput:\n2\n4\n\nExplanation\nOn first operation, value of edge (2-4) is increased by one. On second operation, value of edges (1-3), (1-2), (2-4) are increased by one.\nWarning:Use fast input/output. Large input files.\n            \n            \n            \n            \n            \n        \n\n        \n\n\nAuthor:\n4\xe2\x98\x85darkshadows\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/UPDTREE\n\n\nTags:\n\n               \n                 HLD, Lowest Common Ancestor, DFS\n                 \n                     \n                     Advanced Algorithms, Advanced Graph Algos, Algorithms, Graph Algos, Traversals\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2806\n\n\nDate Added:\n15-09-2014\n\n\nTime Limit:\n3.5 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"