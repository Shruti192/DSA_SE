b"\nRead problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese as well.\nTo heal people with virus infections, Ada designed small robots (nanobots) that travel through the bloodstream, scanning all tissues of the body.\nThe nanobots have detected a region of infected cells described by a matrix with NN rows (numbered 11 through NN from top to bottom) and NN columns (numbered 11 through NN from left to right). For each valid rr and cc, the cell in row rr and column cc has a membrane with thickness Tr,cTr,c.\nTo prevent the spread of the virus, the nanobots surrounded the infected region and decided to destroy all the infected cells. The nanobots can form a powerful laser with force FF and shoot this laser horizontally from the left or from the right of any row, or vertically from the top or from the bottom of any column. Whenever the laser is fired, it breaks through the maximum number of cells in its way such that the total thickness of these cells' membranes is less than or equal to FF and destroys them; the cells that lie behind them are unaffected. Formally, if the laser destroys CC cells, then they are the first CC cells which lie in the laser's way (from the direction in which it is fired), haven't been destroyed before, and the sum of thicknesses of their membranes is at most FF.\nThe laser may be fired multiple times from any directions in any rows or columns. It may also be fired repeatedly in the same direction and the same row or column. However, each shot uses a lot of the nanobots' energy, so Ada wants to destroy all cells using as few shots as possible.\nLet HH be the minimum number of shots needed to destroy all cells when using only horizontal shots, and VV the minimum number of shots needed to destroy all cells when using only vertical shots. Ada programmed the nanobots to perform K=min(V,H)K=min(V,H) shots. Help Ada write a program that uses a strictly smaller number of shots.\nInput\n\nThe first line of the input contains two space-separated integers NN and FF.\nNN lines follow. For each valid ii, the ii-th of these lines contains NN space-separated integers Ti,1,Ti,2,\xe2\x80\xa6,Ti,NTi,1,Ti,2,\xe2\x80\xa6,Ti,N.\nThe last line contains a single integer KK.\n\nOutput\nFirst, print a line containing a single integer SS (K>SK>S) \xe2\x80\x95 the number of shots you want to make.\nThen, print SS lines describing the shots. Each of these lines should contain a character XX, followed by a space and an integer YY.\nXX can be 'L', 'R', 'U' or 'D', denoting a laser fired from the left, right, up or down respectively. If XX is 'L' or 'R', then YY denotes the row in which the laser is fired; otherwise, YY denotes the column in which the laser is fired.\nConstraints\n\nN=F=512N=F=512\n1\xe2\x89\xa4Ti,j\xe2\x89\xa4F1\xe2\x89\xa4Ti,j\xe2\x89\xa4F for each valid i,ji,j\nthere is a solution that uses less than KK shots\n\nExample Input\n4 10\n2 6 4 3\n1 2 3 4\n3 2 3 5\n6 9 1 1\n8\n\nExample Output\n7\nL 1\nU 3\nD 4\nU 2\nD 1\nL 4\nR 1\n\nExplanation\nThe shots and the state of the grid in between the shots are shown below. The positions of the laser in the shots are denoted by '*' and destroyed cells are denoted by 'X'.\n L 1       U 3       D 4\n\n               *\n*X X 4 3   X X X 3   X X X 3\n 1 2 3 4   1 2 X 4   1 2 X X\n 3 2 3 5   3 2 X 5   3 2 X X\n 6 9 1 1   6 9 1 1   6 9 1 X\n                           *\n\n U 2       D 1       L 4\n   *\n X X X 3   X X X 3   X X X 3\n 1 X X X   X X X X   X X X X\n 3 X X X   X X X X   X X X X\n 6 9 1 X   X 9 1 X  *X X X X\n           *\n\nTest Generation\n\nLet Z={1,F/4,F/2,3F/4,F}Z={1,F/4,F/2,3F/4,F}.\nFor each pair of elements (L,R)(L,R) of ZZ such that L<RL<R, except (3F/4,F)(3F/4,F), there is one test file that uses these parameters LL and RR to generate the matrix TT.\nFor each valid ii and jj, Ti,jTi,j is chosen uniformly randomly between LL and RR (inclusive).\n\nScoring\nIf S\xe2\x89\xa5KS\xe2\x89\xa5K, you will receive the Wrong Answer verdict; otherwise, the score of a test file is K\xe2\x88\x92SK\xe2\x88\x92S. The score of a submission is the sum of scores of all test files. Your goal is to maximise the score of your submission.\nThere are nine test files. During the contest, the displayed score will account for exactly 3 test files, i.e. your score reflects your submission's performance on approximately 33% (3/9) of the test files. However, if your program gets a non-AC verdict on any test file, your submission's verdict will be non-AC. In other words, an AC verdict denotes that your program runs successfully on all the test files. After the end of the contest, your score will be changed to include the sum of your program's scores over the other 6 test files.\n\n\n\nAuthor:\n7\xe2\x98\x85alei\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/NBOTS\n\n\nTags:\n\n               \n                 alei, alei, challenge-problem, dynamic-programming, greedy, may20\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n3708\n\n\nDate Added:\n7-04-2020\n\n\nTime Limit:\n10 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"