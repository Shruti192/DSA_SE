b"\nYou are given N horizontal segments each of length R. You are given the x-coordinates of their left end-points: the i-th segment has the left end point at xi. You can see that the right end point will be at xi + R.\nYou want to move the segments such that they lie entirely in the range [0, L]. After the movements, no two segments should overlap, however, they are allowed to touch each other.\nFind out the minimum number of segments that you need to move to achieve this. In other words, you want to maximize the number of segments that are left untouched. It's guaranteed that the sum of the lengths of the segments is such that they all can fit in [0, L].\nInput\n\nThe first line of the input contains a single integer T denoting the number of test cases. The description of T test cases follows.\nThe first line of each test case contains three space-separated integers N, L, R.\nThe second line of each test case contains N space-separated integers. The i-th integer denotes the coordinate of the left end point of i-th segment, i.e. xi.\n\nOutput\nFor each test case, output a single integer corresponding to the minimum number of segments that you need to move.\nConstraints\n\n1 \xe2\x89\xa4 T \xe2\x89\xa4 2500\n1 \xe2\x89\xa4 N \xe2\x89\xa4 500\n1 \xe2\x89\xa4 L, R \xe2\x89\xa4 109\n-109 \xe2\x89\xa4 xi \xe2\x89\xa4 109\nSum of N over all test cases in a single test file won't exceed 2500.\nL \xe2\x89\xa5 R * N, i.e. all the segments can fit inside the range.\n\nExample\nInput\n3\n4 4 1\n0 1 2 3\n4 4 1\n-1 2 3 5\n4 4 1\n2 2 2 2\n\nOutput\n0\n2\n3\n\nExplanation\nExample 1. All the segments lie in the range [0, L]. None of the segments overlap with each other. Hence, we don't need to move any segment at all.\nExample 2. You can move the first segment to [0, 1]. You can also move the fourth segment to [1, 2]. After this movement, you can see that the all the segments lie in the range [0, L] and none of the segments overlap with each other. Overall, we moved 2 segments. There is no way to achieve this by moving less than 2 segments.\n\n\n\nAuthor:\nadmin2\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/NONOVSEG\n\n\nTags:\n\n               \n                 Dynamic Programming, Sorting\n                 \n                     \n                     Algorithms\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\nN/A\n\n\nDate Added:\n12-12-2017\n\n\nTime Limit:\n4 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"