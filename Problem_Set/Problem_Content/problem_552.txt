b'\nChef is given a rooted tree with NN nodes numbered 11 to NN where 11 is the root node.\nEach node is assigned a lowercase english alphabet between a to z (both included). \nGiven two nodes AA and BB:\n\nLet LCA(A,B)LCA(A,B) denote the lowest common ancestor of nodes AA and BB.\nLet DIS(A,B)DIS(A,B) denote the string containing all the characters associated with the nodes in the same order as the shortest path from node AA to node BB (excluding the character associated to node BB). Note that DIS(A,A)DIS(A,A) is an empty string.\n\nChef needs to answer QQ queries. Each query is of the type:\n\nUU VV: Given two integers UU and VV (1\xe2\x89\xa4U,V\xe2\x89\xa4N)(1\xe2\x89\xa4U,V\xe2\x89\xa4N), determine if there exists a concatenation of a non-empty subsequence of DIS(U,LCA(U,V))DIS(U,LCA(U,V)) and a non-empty subsequence of DIS(V,LCA(U,V))DIS(V,LCA(U,V)) such that it is a palindrome.\n\nInput Format\n\nThe first line of each test case contains TT, the number of test cases.\nThe second line of each test case contains NN, the number of nodes in the tree.\nThe third line of each test case contains a string SS consisting of NN characters. Here, SiSi corresponds to the character associated with node ii.\nThe next (N\xe2\x88\x921)(N\xe2\x88\x921) lines each contain two space-separated integers xx and yy, denoting that an edge exists between nodes xx and yy.\nThe next line contains QQ, the number of queries.\nThe next QQ lines each contain two space-separated integers UU and VV, denoting the query.\n\nOutput Format\nFor each test case, output QQ lines. Print YES in the ithith line if there exist a concatenation of a non-empty subsequence of DIS(U,LCA(U,V))DIS(U,LCA(U,V)) and a non-empty subsequence of DIS(V,LCA(U,V))DIS(V,LCA(U,V)) such that it is a palindrome for the ithith query. Otherwise, print NO.\nYou may print each character of the string in uppercase or lowercase (for example, the strings YES, yEs, yes, and yeS will all be treated as identical).\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa42\xe2\x8b\x851051\xe2\x89\xa4T\xe2\x89\xa42\xe2\x8b\x85105\n2\xe2\x89\xa4N\xe2\x89\xa42\xe2\x8b\x851052\xe2\x89\xa4N\xe2\x89\xa42\xe2\x8b\x85105\n1\xe2\x89\xa4Q\xe2\x89\xa42\xe2\x8b\x851051\xe2\x89\xa4Q\xe2\x89\xa42\xe2\x8b\x85105\n1\xe2\x89\xa4x,y\xe2\x89\xa4N1\xe2\x89\xa4x,y\xe2\x89\xa4N and x\xe2\x89\xa0yx\xe2\x89\xa0y.\n1\xe2\x89\xa4U,V\xe2\x89\xa4N1\xe2\x89\xa4U,V\xe2\x89\xa4N and U\xe2\x89\xa0VU\xe2\x89\xa0V\nSum of NN over all test cases does not exceed 2\xe2\x8b\x851052\xe2\x8b\x85105.\nSum of QQ over all test cases does not exceed 2\xe2\x8b\x851052\xe2\x8b\x85105.\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n1\n7\nydbxcbd\n1 2\n2 3\n1 4\n2 5\n6 4\n7 6\n2\n3 5\n3 6\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\nNO\nYES\n\n\nExplanation\nThe tree looks like:\n\nQuery 11: LCA(3,5)=2LCA(3,5)=2. DIS(3,LCA(3,5))=DIS(3,2)=DIS(3,LCA(3,5))=DIS(3,2)= b. Similarly, DIS(5,LCA(3,5))=DIS(5,2)=DIS(5,LCA(3,5))=DIS(5,2)= c. It is not possible to concatenate non-empty subsequences from DIS(3,2)DIS(3,2) and DIS(5,2)DIS(5,2) such that we get a palindrome.\nQuery 22: LCA(3,6)=1LCA(3,6)=1. DIS(3,LCA(3,6))=DIS(3,1)=DIS(3,LCA(3,6))=DIS(3,1)= bd. Similarly, DIS(6,LCA(3,6))=DIS(6,1)=DIS(6,LCA(3,6))=DIS(6,1)= bx. We can pick subsequence b from both DIS(3,1)DIS(3,1) and DIS(6,1)DIS(6,1). After concatenation, we get bb which is a palindrome.\n\n\n\nAuthor:\n5\xe2\x98\x85yash5507\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/ANOTHER_PP\n\n\nTags:\n\n               \n                 Trees, Dynamic Programming, Binary lifting\n                 \n                     \n                     Data Structures, Graphs, Algorithms, Graph Algos, Lowest Common Ancestor\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2555\n\n\nDate Added:\n3-05-2022\n\n\nTime Limit:\n2 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'