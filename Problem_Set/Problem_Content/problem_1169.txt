b'\n Read problems statements in Mandarin Chinese  and Russian.\nDevu likes to play with a lock of N dials. Each dial rotates from numbers 0 to 9 clockwise (i.e. 0 to 1, 2 to 3 and 8 to 9). You can not rotate from 9 to 0.\n\n\nInitially all the dials of the lock are set to 0. From the current lock, Devu can move any dial to at most 10 different positions (i.e. 0 to 9), so there are total 10N different locks possible.\n\n\nLet us say for a lock we define cost of converting the initial lock (all zeros) to this lock. For this, we have to rotate each dial to corresponding position in the lock. Cost of moving a single dial to value x takes x seconds.\neg. cost of moving to 123 is 1 + 2 + 3 = 6 and cost of moving to 99 is 9 + 9 is 18.\n\n\nNow Devu has to hurry up to meet his girlfriend, So he has at most M seconds to spend, he wonders how many possible locks he can create such that when a lock is represented as a decimal number, it should be divisible by P. As answer could be large, print answer modulo 998244353.\n\nInput\nOnly line of input will contain three integers N, P, MM respectively. Use of MM is defined in the output section.\n\nOutput\nPrint a single line containing MM + 1 integers, ith (0 based indexing) of them should represent the \nanswer for the problem with given N, P and M = i.\n\nConstraints\n\nSubtask #1: (10 points)  1 \xe2\x89\xa4 N \xe2\x89\xa4 1000, 1 \xe2\x89\xa4 P \xe2\x89\xa4 50, 1 \xe2\x89\xa4 MM \xe2\x89\xa4 50 TL : 5 secs \nSubtask #2: (20 points)  1 \xe2\x89\xa4 N \xe2\x89\xa4 10^9, 1 \xe2\x89\xa4 P \xe2\x89\xa4 50, 1 \xe2\x89\xa4 MM \xe2\x89\xa4 50 TL : 5 secs\nSubtask #3: (30 points)  1 \xe2\x89\xa4 N \xe2\x89\xa4 10^9, 1 \xe2\x89\xa4 P \xe2\x89\xa4 50, 1 \xe2\x89\xa4 MM \xe2\x89\xa4 500 TL : 10 secs \nSubtask #4: (40 points)  1 \xe2\x89\xa4 N \xe2\x89\xa4 10^9, 1 \xe2\x89\xa4 P \xe2\x89\xa4 16, 1 \xe2\x89\xa4 MM \xe2\x89\xa4 15000 TL : 15 secs \n\nExample\nInput:\n2 3 3\n\nOutput:\n1 1 1 5\n\nInput:\n2 4 4\n\nOutput:\n1 1 2 3 5\n\nExplanation\nExample #1. \nFor M = 0, we can have only one lock, ie. all zeros 00, it is divisible by 3. \nFor M = 1, we can have only one lock, ie. all zeros 00, it is divisible by 3. \nFor M = 2, we can have only one lock, ie. all zeros 00, it is divisible by 3. \nFor M = 3, we can have 5 locks whose decimal representation is divisible by 3. They are 00, 03, 21, 30 and 12. \n\nExample #2. \nFor M = 0, we can have only one lock, ie. all zeros 00, it is divisible by 4. \nFor M = 1, we can have only one lock, ie. all zeros 00, it is divisible by 4. \nFor M = 2, we can have 2 locks whose decimal representation is divisible by 4. They are 00 and 20. \nFor M = 3, we can have 3 locks whose decimal representation is divisible by 4. They are 00, 12 and 20. \nFor M = 4, we can have 5 locks whose decimal representation is divisible by 4. They are 00, 04, 12, 20 and 40. \n\n\n\n\nAuthor:\nadmin2\n\n\nTester:\n4\xe2\x98\x85pushkarmishra\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/DEVLOCK\n\n\nTags:\n\n               \n                 Digit DP, Generating Functions, Matrix Exponentiation, FFT\n                 \n                     \n                     Advanced Algorithms, Advanced DP, Mathematics, Sequences and Progression, Matrices, Transformations, Matrix Multiplication\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2929\n\n\nDate Added:\n19-01-2015\n\n\nTime Limit:\n5 - 15 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'