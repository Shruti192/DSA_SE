b"\nFelicity is a huge fest, and you'll see many food stalls that have been set up for you to try out some interesting dishes!\nYou are in a group of NN starving students, hence you all went to check out the N+1N+1 food stalls lined up for Felicity. These stalls are lined up from left to right, with stall number 11 as the leftmost, and stall number N+1N+1 as the rightmost. Stall ii has aiai varieties, and no 22 stalls serve the same variety. Felicity has a huge budget, therefore every stall has an unlimited quantity of each variety, hence multiple people can order the same variety.\nInitially, all of the students are on the left of the 1st1st stall, so you all decide to send each student to a different stall to check the number of varieties there, i.e. no 22 people will be sent to the same stall.\nEach student has reached their respective stall, but students are lazy, hence they would only order something from the stall they are at, or go to a stall on their left which has more varieties than the stall they were sent to.\nWhat are the total number of unique group orders that can be made by the group of students? Two group orders are considered different if there exists a student who took a different variety in both of the orders. \nInput Format\nThe first line of input will contain a single integer NN, the number of students.\nThe second line will contain N+1N+1 positive integers a1,a2,\xe2\x80\xa6,an+1a1,a2,\xe2\x80\xa6,an+1, the number of varieties present at each stall.\nOutput Format\nOutput the number of different ways to order food for your friend group modulo 109+7109+7.\nConstraints\n\n1\xe2\x89\xa4N\xe2\x89\xa41051\xe2\x89\xa4N\xe2\x89\xa4105\n1\xe2\x89\xa4ai\xe2\x89\xa41091\xe2\x89\xa4ai\xe2\x89\xa4109\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n2\n4 3 5\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n83\n\n\nExplanation\nThe number of varieties you'll have has access to at each stall is [4,7,5][4,7,5]. \nAt the first stall, you have a total of 44 varieties just from the first stall. \nAt the second stall, you can pick items from the first stall too since it has more varieties than the second stall, giving a total of 4+3=74+3=7 varieties. \nThe last stall has access to 55 varieties from the third stall and no other varieties since there are no stalls before it with greater number of varieties.\nIf the 22 students decide to go to the first and second stalls, there will be a total of 4\xc3\x977=284\xc3\x977=28 unique orders.\nSimilarly, if they decide to go to the second and third stalls, they will have 3535 unique orders, and if they decide to go to the first and third stalls, they'll have 2020 unique orders, for a total of 8383 total unique orders.\nHack case note\nFind the buggy solution to this problem on GitHub or Drive.\nThis problem is part of DeCode contest, wherein you are given a problem (as given above) and its buggy solution (link in contest announcement). You have to submit a program that outputs a hack case to the buggy solution. Your program's output should satisfy the input constraints of the above problem.\n\n\n\nAuthor:\n6\xe2\x98\x85awesome_amul\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/SPLDCHC\n\n\nTags:\n\n               \n                 awesome_amul, binary-exponentation, dynamic-programming, hard, segment-tree\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\nN/A\n\n\nDate Added:\n4-03-2022\n\n\nTime Limit:\n3 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"