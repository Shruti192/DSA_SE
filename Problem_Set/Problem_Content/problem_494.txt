b"\n Read problems statements in Mandarin Chinese, Russian and Vietnamese as well.\nLittle Alice likes to play with her collection of N integers. She knows her collection very well, and often likes to come up with different observations about the numbers.\nFor example, Alice had recently learned that two numbers can be jealous of each other in case they have a non-trivial common divisor (i.e. greater than one divisor). For example, the numbers 8 and 12 are jealous of each other, because they have common divisor 4. But the numbers 8 and 9 aren't jealous of each other, because they don't have any common divisors other than 1.\nAlice wants to organize a tea-party, and to invite some of the numbers from her collection. She wants to invite as much numbers as possible, in such a way that no two number among the invited are jealous of each other. Please help her to find the maximal amount of numbers she can invite.\nInput\nThe first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.\nThe first line of each test case contains a single integer N denoting the amount of numbers in Alice's collection.\nThe second line contains N space-separated integers A1, A2, ..., AN denoting the numbers from the collection. \nOutput\nFor each test case, output a single line containing the maximal amount of numbers that can be invited to the tea-party.\nConstraints\n\n1 \xe2\x89\xa4 T \xe2\x89\xa4 104\n1 \xe2\x89\xa4 N \xe2\x89\xa4 103\n1 \xe2\x89\xa4 Sum of N over all the test cases in a single file \xe2\x89\xa4 104\n1 \xe2\x89\xa4 Ai \xe2\x89\xa4 103\n\nExample\nInput:\n2\n5\n1 2 3 4 5\n2\n7 7\n\nOutput:\n4\n1\n\nExplanation\nExample case 1. Alice can invite 1, 2, 3 and 5. This is the maximal set of numbers she can invite.\nExample case 2. One number will be jealous to the other one, so Alice can invite only one of those. Please note that the numbers are not necessarily different.\n\n\n\nAuthor:\nsergey_adm\n\n\nTester:\n\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/NUMSET\n\n\nTags:\n\n               \n                 dynamic-programming, easy-medium, prime-factorization, sergey_adm, snckel16\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\nN/A\n\n\nDate Added:\n13-06-2016\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"