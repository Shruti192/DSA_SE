b"\nIt's the year 2050!2050!, and the war has begun between aliens and humans. The aliens have \nplaced mines in the battlefield, where the battlefield can be described as grid of\nsize n\xe2\x88\x97mn\xe2\x88\x97m, where nn denotes the number of rows numbered from 11 to nn from top to bottom and mm denotes the number of columns numbered from 11 to mm from left to right.\nHowever, the human army knows the positions of the mines denoted by (xx,yy) in the field\nand you being the commander have been assigned a task.\nThe task is described as follows:\nGiven the number of mines xx (1\xe2\x89\xa4x\xe2\x89\xa4n\xe2\x88\x97m)(1\xe2\x89\xa4x\xe2\x89\xa4n\xe2\x88\x97m) and their respective positions in the grid consisting\nof binary values 00 or 11, where a value of 11 in cell ( ii , jj ) ( 1\xe2\x89\xa4i\xe2\x89\xa4n,1\xe2\x89\xa4j\xe2\x89\xa4m1\xe2\x89\xa4i\xe2\x89\xa4n,1\xe2\x89\xa4j\xe2\x89\xa4m ) denotes the presence of mine at \nposition (ii,jj) and a value of 00 in cell (ii,jj) denotes that the cell is free.\nSince the mines are quite heavy, the operation of relocating a mine is described as moving a \nmine to either of its neighbouring side cells or leaving the mine in its current position only, \nbut you can only perform this operation once for every ithith mine 1\xe2\x89\xa4i\xe2\x89\xa4x1\xe2\x89\xa4i\xe2\x89\xa4x, in other words you \ncan move a mine from it's current position denoted by ( xi,yixi,yi ) to either of the 55 positions - ( xi\xe2\x88\x921,yixi\xe2\x88\x921,yi ), \n( xi+1,yixi+1,yi ) , ( xi,yi\xe2\x88\x921xi,yi\xe2\x88\x921 ), ( xi,yi+1xi,yi+1 ), ( xi,yixi,yi ), such that the new position of the mine \nremains inside the field. A cell can contain multiple mines after relocation.\nSo, you need to relocate the mines in such a way that maximum number of cells \nget free in the battlefield, incurring minimum damage.\nNOTE: \nThe operation of relocating a mine from it's current position to either of the 55 positions such \n that the new position of the mine remains inside the field can only be performed once for every \n mine.\nInput:\n\nFirst line will contain TT, number of testcases. Then the testcases follow. \nEach testcase contains of a single line of input, two integers n,mn,m. \nThen next nn lines contain mm integers, either 0 or 1. \n\nOutput:\nFor each testcase, output in a single line, maximum number of cells \nget free in the battlefield.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa4201\xe2\x89\xa4T\xe2\x89\xa420\n1\xe2\x89\xa4n,m\xe2\x89\xa4401\xe2\x89\xa4n,m\xe2\x89\xa440\nn\xe2\x88\x97m\xe2\x89\xa440n\xe2\x88\x97m\xe2\x89\xa440\n\nSample Input:\n2\n2 2 \n0 1 \n1 1 \n2 3 \n0 1 0 \n1 1 1 \n\nSample Output:\n3 \n5 \n\n\n\n\nAuthor:\n5\xe2\x98\x85hellb0y_suru\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/CAC3\n\n\nTags:\n\n               \n                 bitmasking, dynamic-programming, hellb0y_suru\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\nN/A\n\n\nDate Added:\n13-03-2021\n\n\nTime Limit:\n2 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"