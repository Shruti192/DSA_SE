b'\nAfter a thrilling but exhausting journey of monster hunting, the White Wolf has decided to return to Kaer Morhen. He needs to reach his destination by crossing a N\xc3\x97MN\xc3\x97M grid that contains at most one monster in each cell. His current location is at cell (1,1)(1,1) and his destination lies in the cell (N,M)(N,M). In every step, he is allowed to move 11 cell to the right or 11 cell downwards only.  Also, he cannot move outside the grid.\nThe White Wolf has an initial health points of PP points. Each time he fights with a monster, his health points decrease by XX. If at any point in time, the total health points become less than or equal to 00, the White Wolf will immediately die and will never reach his destination.\nBut that\'s not the end of the story. There are some special herbs placed in some cells throughout the grid (at most one in each cell). His health points will increase by YY points if he uses a herb. It is guaranteed that there is no cell such that a monster and a herb will be at the same cell. It is also guaranteed that there are no herbs or monsters at the starting and destination cells.\nYour task is to determine the maximum possible health points the White Wolf can have when he reaches Kaer Morhen. Otherwise, determine that it\'s impossible to reach his destination.\nInput:\n\nFirst line will contain TT, the number of test cases. Then the  TT test cases follow. \nFirst line of each test case contains two space-separated integers NN and MM.\nSecond line of each test case contains three space-separated integers P,XP,X and YY.\nThen follows NN lines of input, each containing a string a length MM, representing the grid. Each character on the grid is either a 00 representing an empty cell, a 11 representing a monster, or a 22 representing a herb.\n\nOutput:\nFor each test case, output in a single line "\xe2\x88\x921\xe2\x88\x921" if it is not possible to reach the destination. Otherwise, print in a single line the required answer.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa41001\xe2\x89\xa4T\xe2\x89\xa4100\n1\xe2\x89\xa4N,M\xe2\x89\xa41001\xe2\x89\xa4N,M\xe2\x89\xa4100\n1\xe2\x89\xa4P,X,Y\xe2\x89\xa41091\xe2\x89\xa4P,X,Y\xe2\x89\xa4109\nAll characters in the grid are 0,10,1 or 22 only.\nThe top-left and the bottom-right cells contain the character 00, i.e., they are empty.\n\nSample Input:\n2\n4 2\n78 16 94\n01\n10\n01\n20\n3 1\n60 64 27\n0\n1\n0  \nSample Output:\n156\n-1  \n\n\n\nAuthor:\n5\xe2\x98\x85sibasish_14\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/QLK01\n\n\nTags:\n\n               \n                 dynamic-programming, easy, greedy, sibasish_14, sibasish_14, yapc2020\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\nN/A\n\n\nDate Added:\n7-05-2020\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'