b'\nThe city of Quensland has NN city and they are connected by N\xe2\x88\x921N\xe2\x88\x921 roads having no cycles. There always exists a unique path between any two cities.Each road is bidirectional having length of 1 and connects two different cities. A new pizza service has arrived in Quensland where requests are served as queries , please note that the toppings of the pizza differentiate the pizzas with their colors.\nIf a query is given as pp dd cc  , it is described as serving pizzas having toppings of color  changed to cc to all the\ncities within the distance d from city pp, including pp itself.\nMike the owner of the pizza service resides in city 1, thereby, rooting the whole tree at City1City1. Now , he wants to know the count of all distinct colors of the toppings after all the requests are served at the end of day for each city .\n0 is also considered as a color.\nNOTE:NOTE: Given dd may exceed the total distance when you start travelling from a city , in that case consider all the cities that can be covered by travelling distance d from the given tree.\nInput:\n\nThe first line contains an integer NN denoting the number of cities.\nThe next N\xe2\x88\x921N\xe2\x88\x921 lines contain two space separated integers aiai and bibi denoting that there is a road -connecting city aiai and bibi.\nThe next line contains an integer QQ denoting the number of queries.\nThe next QQ lines contain three space separated integers pipi,didi and cici denoting that the pizza service pipi along with the pizza service within distance didi should have pizza toppings of color changed to cici.\n\nOutput:\nPrint the answer in NN space separated integers , the ithith integer denoting the number of distinct colors of all toppings present in the subtree rooted at the ithith city after all QQ operations are performed.\nConstraints\n\n1\xe2\x89\xa4N,Q\xe2\x89\xa41000001\xe2\x89\xa4N,Q\xe2\x89\xa4100000\n1\xe2\x89\xa4ai,bi,pi\xe2\x89\xa4N1\xe2\x89\xa4ai,bi,pi\xe2\x89\xa4N\nai\xe2\x89\xa0biai\xe2\x89\xa0bi\n0\xe2\x89\xa4di\xe2\x89\xa4200\xe2\x89\xa4di\xe2\x89\xa420\n1\xe2\x89\xa4ci\xe2\x89\xa41000001\xe2\x89\xa4ci\xe2\x89\xa4100000\n\nSUBTASKS:\n\n10 points:\n1\xe2\x89\xa4N,Q\xe2\x89\xa410001\xe2\x89\xa4N,Q\xe2\x89\xa41000\n90 points:\nOriginal constraints\n\nNOTENOTE - There are no self loops or multiple edges in the tree and initially all the pizza services have pizzas of topping coloured as 0.\nSample Input:\n7\n1 2\n1 3\n1 4\n4 5\n5 6\n5 7\n2\n6 1 1\n1 2 2\nSample Output:\n3 1 1 3 3 1 1\nEXPLANATION:\nInititally all houses are uncolored , sol let the color array be [0,0,0,0,0,0,0]\nAfter query 1 - \nThe color array will be [0,0,0,0,1,1,0]\nAfter query 2 - \nThe color array wil be [2,2,2,2,2,1,0]\nNow for each ith node , the number of distinct colors in all the nodes having ith node as the root - \n[3,1,1,3,3,1,1]\n\n\n\nAuthor:\n5\xe2\x98\x85naveen19991124\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/WEIRDTOP\n\n\nTags:\n\n               \n                 dynamic-programming, naveen19991124, str2020, trees\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\nN/A\n\n\nDate Added:\n9-10-2020\n\n\nTime Limit:\n2 secs\n\n\nSource Limit:\n100000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'