b"\nNayra doesn't like stories of people receiving random arrays as birthday presents, but this time she received an array as a present for her own birthday! After struggling for a day trying to figure out what to do with this array, she asked Aryan for help. He gave her this problem.\nYou are given an array A=[A1,A2,\xe2\x80\xa6,AN]A=[A1,A2,\xe2\x80\xa6,AN] containing NN distinct integers. Count the number of ways to form (unordered) sets of disjoint increasing subsequences of AA.\nFormally, count the number of sets S={S1,S2,\xe2\x80\xa6,Sk}S={S1,S2,\xe2\x80\xa6,Sk} such that:\n\nEach SiSi is an increasing subsequence of AA.\nIf i\xe2\x89\xa0ji\xe2\x89\xa0j, SiSi and SjSj are disjoint, i.e, i\xe2\x89\xa0j\xe2\x9f\xb9Si\xe2\x88\xa9Sj=\xe2\x88\x85i\xe2\x89\xa0j\xe2\x9f\xb9Si\xe2\x88\xa9Sj=\xe2\x88\x85\n\nNote that it is not necessary that the sequences S1,S2,\xe2\x80\xa6,SkS1,S2,\xe2\x80\xa6,Sk form a partition of AA - in other words, some elements of AA may not be in any chosen subsequence.\nTwo sets are considered equal if they contain the same subsequences. For example, the sets {[1,2],[3]}{[1,2],[3]} and {[3],[1,2]}{[3],[1,2]} are considered to be the same and should only be counted once.\nNote that the final answer can be rather large, so compute its remainder after dividing it by 109+7109+7.\nPlease refer to the sample for a few examples.\nInput Format\n\nThe first line of input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.\nThe first line of each test case contains a single integer NN - the size of AA.\nThe second line contains NN distinct space-separated integers A1,A2,\xe2\x80\xa6,ANA1,A2,\xe2\x80\xa6,AN - the elements of AA.\n\nOutput Format\nFor each test, print one line containing a single integer, the answer to the problem modulo (109+7)(109+7).\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa420001\xe2\x89\xa4T\xe2\x89\xa42000\n1\xe2\x89\xa4N\xe2\x89\xa4201\xe2\x89\xa4N\xe2\x89\xa420\n1\xe2\x89\xa4Ai\xe2\x89\xa4N1\xe2\x89\xa4Ai\xe2\x89\xa4N\nThe elements of AA are distinct.\nEach input file contains at most 33 tests with N>10N>10.\n\nSubtasks\nSubtask 1 (15 points):\n\nN\xe2\x89\xa414N\xe2\x89\xa414\n\nSubtask 2 (15 points):\n\nN\xe2\x89\xa416N\xe2\x89\xa416\n\nSubtask 3 (40 points):\n\nN\xe2\x89\xa418N\xe2\x89\xa418\n\nSubtask 4 (30 points):\n\nN\xe2\x89\xa420N\xe2\x89\xa420\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n2\n2\n1 2\n7\n1 2 7 3 6 4 5\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n5\n1537\n\n\nExplanation\nTest case 1: All possible sets are {},{[1]},{[2]},{[1],[2]},{[1,2]}{},{[1]},{[2]},{[1],[2]},{[1,2]}. Note that the empty set is also counted; and it is not necessary to use every element of AA in some increasing subsequence.\nTest case 2: Some of the valid possible ways are:\n\nS={[1,2,7],[3,6],[4]}S={[1,2,7],[3,6],[4]}.\nS={[1,2,6],[7],[3],[4]}S={[1,2,6],[7],[3],[4]}\nS={[1,2,6],[7],[3,5],[4]}S={[1,2,6],[7],[3,5],[4]}\nS={[1,2,6],[7],[3,4]}S={[1,2,6],[7],[3,4]}\nS={[1,4],[2,3],[6],[7]}S={[1,4],[2,3],[6],[7]}\n\nOnce again, note that we count unordered sets. So, the following sets are considered the same:  \n\n{[1,4],[2,3],[6],[7]}{[1,4],[2,3],[6],[7]} or\n{[6],[1,4],[2,3],[7]}{[6],[1,4],[2,3],[7]} or\n{[1,4],[6],[2,3],[7]}{[1,4],[6],[2,3],[7]} or\n{[7],[2,3],[6],[1,4]}{[7],[2,3],[6],[1,4]}\n\n\n\n\nAuthor:\n7\xe2\x98\x85aryanc403\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/YACP\n\n\nTags:\n\n               \n                 DP Bitmask, Dynamic Programming\n                 \n                     \n                     Advanced Algorithms, Advanced DP, Algorithms\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n3152\n\n\nDate Added:\n14-11-2021\n\n\nTime Limit:\n2 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"