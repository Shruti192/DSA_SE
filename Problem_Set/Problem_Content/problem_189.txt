b'\nThere are two merchants in the market. Initially, the first merchant has NN items for sale at distinct prices A1,A2,\xe2\x80\xa6,ANA1,A2,\xe2\x80\xa6,AN and the second merchant has MM items for sale at distinct prices B1,B2,\xe2\x80\xa6,BMB1,B2,\xe2\x80\xa6,BM.\nIf you buy an item from a merchant, the prices of all remaining items for both merchants change in the following manner:\n\nThe cost of all the remaining items of the chosen merchant will increase by 11. \nThe cost of all the remaining items of the other merchant will decrease by 11. \n\nNote that prices may become negative during this process.\nFor e.g. if A=[3,4,5],B=[1,3,4]A=[3,4,5],B=[1,3,4] and you buy the second item from the second merchant then the prices of remaining items will be as follows A=[2,3,4],B=[2,\xe2\x88\x92,5]A=[2,3,4],B=[2,\xe2\x88\x92,5]\nYou can only buy an item if its cost is at most CC. Can you buy all items from both merchants in the market in some order?\nInput Format\n\nThe first line of the input contains a single integer TT - the number of test cases. The description of TT test cases follows.\nThe first line of each test case contains three integers NN, MM and CC - the number of items of the first merchant, the number of items of the second merchant and the maximum cost of an item you can buy respectively.\nThe second line contains NN space-separated integers A1<A2<\xe2\x8b\xaf<ANA1<A2<\xe2\x8b\xaf<AN - the prices of items of first merchant.\nThe third line contains MM space-separated integers B1<B2<\xe2\x8b\xaf<BMB1<B2<\xe2\x8b\xaf<BM - the prices of items of second merchant.\n\nOutput Format\nFor each test case, output Yes if it is possible to buy all items from both merchants in the market in some order. Otherwise, output No.\nYou may print each character of Yes and No in uppercase or lowercase (for example, the strings yEs, yes, Yes and YES will all be treated as identical).\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa41051\xe2\x89\xa4T\xe2\x89\xa4105\n1\xe2\x89\xa4N,M\xe2\x89\xa45\xe2\x8b\x851051\xe2\x89\xa4N,M\xe2\x89\xa45\xe2\x8b\x85105\n1\xe2\x89\xa4Ai,Bi,C\xe2\x89\xa41091\xe2\x89\xa4Ai,Bi,C\xe2\x89\xa4109\nAi<Ai+1Ai<Ai+1 for all 1\xe2\x89\xa4i<N1\xe2\x89\xa4i<N\nBi<Bi+1Bi<Bi+1 for all 1\xe2\x89\xa4i<M1\xe2\x89\xa4i<M\nthe sum of NN over all test cases does not exceed 5\xe2\x8b\x851055\xe2\x8b\x85105\nthe sum of MM over all test cases does not exceed 5\xe2\x8b\x851055\xe2\x8b\x85105\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n6\n1 2 1\n1\n1 2\n2 1 2\n1 2\n1\n3 2 5\n1 2 4\n4 9\n3 3 7\n2 4 8\n1 4 8\n5 10 27\n3 6 17 28 30\n1 3 4 5 7 9 21 27 29 30\n9 4 21\n1 5 6 8 14 16 19 22 25\n2 9 23 27\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\nYES\nYES\nNO\nYES\nYES\nNO\n\n\nExplanation\nTest case 1: One possible sequence of operations is shown below. The item we purchase in a given turn is highlighted in red.\n\nA=[1],B=[1,2]A=[1],B=[1,2]\nA=[\xe2\x88\x92],B=[0,1]A=[\xe2\x88\x92],B=[0,1]\nA=[\xe2\x88\x92],B=[1,\xe2\x88\x92]A=[\xe2\x88\x92],B=[1,\xe2\x88\x92]\n\nTest case 2:  One possible sequence of operations is shown below. The item we purchase in a given turn is highlighted in red.\n\nA=[1,2],B=[1]A=[1,2],B=[1]\nA=[2,\xe2\x88\x92],B=[0]A=[2,\xe2\x88\x92],B=[0]\nA=[\xe2\x88\x92,\xe2\x88\x92],B=[\xe2\x88\x921]A=[\xe2\x88\x92,\xe2\x88\x92],B=[\xe2\x88\x921]\n\nNote that prices may become negativenegative during this process and in such a case the item can still be bought.\nTest case 3: It can be shown that there is no way to buy the second item sold by Merchant 22 regardless of the order in which we buy the items.\nTest case 4: One possible sequence of operations is shown below. The item we purchase in a given turn is highlighted in red.\n\nA=[2,4,8],B=[1,4,8]A=[2,4,8],B=[1,4,8]\nA=[\xe2\x88\x92,5,9],B=[0,3,7]A=[\xe2\x88\x92,5,9],B=[0,3,7]\nA=[\xe2\x88\x92,4,8],B=[1,4,\xe2\x88\x92]A=[\xe2\x88\x92,4,8],B=[1,4,\xe2\x88\x92]\nA=[\xe2\x88\x92,3,7],B=[2,\xe2\x88\x92,\xe2\x88\x92]A=[\xe2\x88\x92,3,7],B=[2,\xe2\x88\x92,\xe2\x88\x92]\nA=[\xe2\x88\x92,4,\xe2\x88\x92],B=[1,\xe2\x88\x92,\xe2\x88\x92]A=[\xe2\x88\x92,4,\xe2\x88\x92],B=[1,\xe2\x88\x92,\xe2\x88\x92]\nA=[\xe2\x88\x92,\xe2\x88\x92,\xe2\x88\x92],B=[0,\xe2\x88\x92,\xe2\x88\x92]A=[\xe2\x88\x92,\xe2\x88\x92,\xe2\x88\x92],B=[0,\xe2\x88\x92,\xe2\x88\x92]\n\n\n\n\nAuthor:\n6\xe2\x98\x85explodingfrz\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/TWOMERCHANTS\n\n\nTags:\n\n               \n                 easy-medium, explodingfrz, greedy, start32\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2808\n\n\nDate Added:\n26-03-2022\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'