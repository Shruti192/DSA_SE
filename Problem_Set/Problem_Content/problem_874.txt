b'\nLets define a beauty of subarray , as the sum of all the elements in it.\nGiven an array AA and QQ different queries of the form indind KK, such that you have to divide the array (aindaind aind+1aind+1 \xe2\x80\xa6. an\xe2\x88\x921an\xe2\x88\x921) into KK contiguous subarrays such that the bitwise XOR of all the beauty of KK subarrays is maximum considering each subarray is consisting of no more than LL elements in it. \nInput Format\n\nFirst line will contain TT, number of testcases. Then the testcases follow. \nThe first line of each testcase consists of three space separated integers NN QQ and LL.\nThe second line consists of NN space separated not necessarily distinct integers a0a0 a1a1\xe2\x80\xa6..an\xe2\x88\x921an\xe2\x88\x921.\nThen QQ lines follow for each testcase, consisting of query of type indind kk.\n\nOutput Format\nFor each query, output in a single line answer i.e., maximum value of bitwise XOR of all the beauty of subarrays consisting of no more than LL elements in each of them or print \xe2\x88\x921\xe2\x88\x921 if it is not possible.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa4101\xe2\x89\xa4T\xe2\x89\xa410\n1\xe2\x89\xa4N\xe2\x89\xa41021\xe2\x89\xa4N\xe2\x89\xa4102\n1\xe2\x89\xa4Q\xe2\x89\xa41051\xe2\x89\xa4Q\xe2\x89\xa4105\n1\xe2\x89\xa4L\xe2\x89\xa4min(N,20)1\xe2\x89\xa4L\xe2\x89\xa4min(N,20)\n1\xe2\x89\xa4summation(Ai)\xe2\x89\xa41031\xe2\x89\xa4summation(Ai)\xe2\x89\xa4103\n0\xe2\x89\xa4ind\xe2\x89\xa4N\xe2\x88\x9210\xe2\x89\xa4ind\xe2\x89\xa4N\xe2\x88\x921\n1\xe2\x89\xa4K\xe2\x89\xa4101\xe2\x89\xa4K\xe2\x89\xa410\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n1\n7 10 4\n17 21 20 35 42 47 59\n0 5\n0 3\n3 2\n6 1\n6 2\n5 1\n4 2\n1 2\n1 1\n6 1\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n167\n201\n183\n59\n-1\n106\n98\n216\n-1\n59\n\n\nExplanation\nSelf Explanatory :)\n\n\n\nAuthor:\n5\xe2\x98\x85valiant_vidit\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/EZIEE\n\n\nTags:\n\n               \n                 Data Structures, Arrays, Dynamic Programming\n                 \n                     \n                     Algorithms\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\nN/A\n\n\nDate Added:\n17-03-2022\n\n\nTime Limit:\n4 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'