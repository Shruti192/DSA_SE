b'\nRead problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese as well.\nYou are given a tree with NN vertices (numbered 11 through NN) and a sequence of integers A1,A2,\xe2\x80\xa6,ANA1,A2,\xe2\x80\xa6,AN. You may choose an arbitrary permutation p1,p2,\xe2\x80\xa6,pNp1,p2,\xe2\x80\xa6,pN of the integers 11 through NN. For each valid ii, you should assign the value ApiApi to vertex ii.\nThen, you should choose a vertex of the tree and K\xe2\x88\x921K\xe2\x88\x921 times, perform one of the following operations:\n\nMove forward \xe2\x80\x94 move to a vertex which is adjacent to your current vertex. However, you must not move to the vertex in which you were immediately before the previus operation (if it exists).\nTurn around \xe2\x80\x94 stay in your current vertex. You may only do this if it is impossible to move forward. Since you do not move in this operation, you may move forward again afterwards.\n\nIn this process, you obtain a sequence of vertices v1,v2,\xe2\x80\xa6,vKv1,v2,\xe2\x80\xa6,vK \xe2\x80\x94 the initial vertex and the vertices in which you were after each operation. Your score is \xe2\x88\x91Ki=1Apvi\xe2\x88\x91i=1KApvi. What is the maximum possible value of this score?\nInput\n\nThe first line of the input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.\nThe first line of each test case contains two space-separated integers NN and KK.\nThe second line contains NN space-separated integers A1,A2,\xe2\x80\xa6,ANA1,A2,\xe2\x80\xa6,AN.\nEach of the following N\xe2\x88\x921N\xe2\x88\x921 lines contains two space-separated integers uu and vv denoting that vertices uu and vv are connected by an edge.\n\nOutput\nFor each test case, print a single line containing one integer \xe2\x80\x94 the maximum possible score.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa41,0001\xe2\x89\xa4T\xe2\x89\xa41,000\n2\xe2\x89\xa4N\xe2\x89\xa4300,0002\xe2\x89\xa4N\xe2\x89\xa4300,000\n1\xe2\x89\xa4K\xe2\x89\xa41091\xe2\x89\xa4K\xe2\x89\xa4109\n1\xe2\x89\xa4Ai\xe2\x89\xa41091\xe2\x89\xa4Ai\xe2\x89\xa4109 for each valid ii\nthe sum of NN over all test cases does not exceed 5\xe2\x8b\x851055\xe2\x8b\x85105\n\nSubtasks\nSubtask #1 (50 points):\n\nN\xe2\x89\xa41,000N\xe2\x89\xa41,000\nK\xe2\x89\xa42,000K\xe2\x89\xa42,000\nthe sum of NN over all test cases does not exceed 2,0002,000\nthe sum of KK over all test cases does not exceed 2,0002,000\n\nSubtask #2 (50 points): original constraints\n\n                        Sample Input 1\n                        \n\n\n\n\n\n3\n3 3\n1 1 1\n1 2\n2 3\n2 2\n1 2\n1 2\n3 3\n1 2 3\n1 2\n2 3\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n3\n3\n8\n\n\nExplanation\nExample case 3: We start at vertex 22, move forward to vertex 33, then turn around without moving anywhere and end the process. The score is 2+3+3=82+3+3=8.\n\n\n\nAuthor:\n4\xe2\x98\x85ahmad_salah\n\n\nTags:\n\n               \n                 ahmad_salah, dynamic-programming, easy, greedy, ltime86, rajarshi_basu, trees\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2802\n\n\nDate Added:\n15-04-2020\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'