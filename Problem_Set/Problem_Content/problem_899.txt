b"\n \xc2\xa0 You are given a rooted tree having nodes N . Every node have value equal to zero initially ,\n\n Let's call it version 1. You will be given Q queries of two type:-\n\n11 ver1ver1 ver2ver2 vv cc \nYou have to make version ver2ver2 from version ver1ver1 by adding value cc in subtree\n of vertex vv at alternate levels , starting from level of vertex vv.\n22 ver1ver1 vv\n\nYou have to tell value of vertex vv in version ver1ver1\n\n\nIt is guaranteed that in query , version ver1ver1 already exist and version ver2ver2 \ndoes not exist .\n\nInput Format\n\nFirst line contains Number of nodes N.\nSecond line contains N-1 integers denoting the parent of nodes from 2 to N.\nThird line contains number of queries Q\nNext Q line contains queries of two types as explained in the question.\n\nOutput Format\n\nFor each query of type 2 answer the value of node vv in version ver1ver1 in a single line.\n\nConstraints\n\n1 \xe2\x89\xa4 NN \xe2\x89\xa4 200000\n1 \xe2\x89\xa4 QQ \xe2\x89\xa4 200000\n1  \xe2\x89\xa4 ver1ver1 \xe2\x89\xa4Q\n1 \xe2\x89\xa4 ver2ver2 \xe2\x89\xa4 Q+1\n1 \xe2\x89\xa4 cc \xe2\x89\xa4 300000\n1 \xe2\x89\xa4 vv \xe2\x89\xa4 N\n\nSubtasks\n\n100 points : Orignal Constraints\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n5\n1 1 2 4\n6\n1 1 2 4 1\n1 2 3 1 2\n2 1 5\n2 3 4\n1 2 4 2 4\n2 4 5\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n0\n3\n4\n\n\nExplanation\n                 1\n                / \\\n               2   3\n              /\n             4\n            /\n           5\n\nvalue in version 1 - > [0,0,0,0,0] \nvalue in version 2 - > [0,0,0,1,0]\nvalue in version 3 - > [2,0,0,3,0]\nvalue in version 4 - > [0,4,0,1,4]\n\n\n\nAuthor:\n4\xe2\x98\x85pratik291219\n\n\nTester:\n6\xe2\x98\x85gupta_nitin\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/RDTREE\n\n\nTags:\n\n               \n                 dynamic-programming, pratik291219, trees\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\nN/A\n\n\nDate Added:\n10-02-2022\n\n\nTime Limit:\n1 - 2 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"