b'\nRead problem statements in Bengali, Mandarin Chinese, Russian, and Vietnamese as well.\nYou are given NN distinct points in a 22-D plane, numbered 11 through NN. The X-coordinate of the points are X1,X2,\xe2\x80\xa6,XNX1,X2,\xe2\x80\xa6,XN respectively and the Y-coordinates are Y1,Y2,\xe2\x80\xa6,YNY1,Y2,\xe2\x80\xa6,YN respectively. Your goal is to make the location of all the NN points equal to that of each other. To achieve this, you can do some operations.\nIn one operation, you choose an index i(1\xe2\x89\xa4i\xe2\x89\xa4N)i(1\xe2\x89\xa4i\xe2\x89\xa4N) and a real number KK and change the location of the ithith point in one of the following ways:\n\nSet (Xi,Yi)=(Xi+K,Yi)(Xi,Yi)=(Xi+K,Yi)\nSet (Xi,Yi)=(Xi,Yi+K)(Xi,Yi)=(Xi,Yi+K)\nSet (Xi,Yi)=(Xi+K,Yi+K)(Xi,Yi)=(Xi+K,Yi+K)\nSet (Xi,Yi)=(Xi+K,Yi\xe2\x88\x92K)(Xi,Yi)=(Xi+K,Yi\xe2\x88\x92K)\n\nFind the minimum number of operations to achieve the goal.\nInput Format\n\nThe first line of the input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.\nEach test case contains three lines of input.\nThe first line contains a single integer NN.\nThe second line contains NN space-separated integers X1,X2,\xe2\x80\xa6,XNX1,X2,\xe2\x80\xa6,XN.\nThe third line contains NN space-separated integers Y1,Y2,\xe2\x80\xa6,YNY1,Y2,\xe2\x80\xa6,YN.\n\nOutput Format\nFor each test case, print a single line containing one integer - the minimum number of operations to achieve the goal.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa43001\xe2\x89\xa4T\xe2\x89\xa4300\n2\xe2\x89\xa4N\xe2\x89\xa41002\xe2\x89\xa4N\xe2\x89\xa4100\n\xe2\x88\x92109\xe2\x89\xa4Xi,Yi\xe2\x89\xa4109\xe2\x88\x92109\xe2\x89\xa4Xi,Yi\xe2\x89\xa4109\n(Xi,Yi)\xe2\x89\xa0(Xj,Yj)(Xi,Yi)\xe2\x89\xa0(Xj,Yj) if (i\xe2\x89\xa0j)(i\xe2\x89\xa0j)\nSum of NN over all test cases does not exceed 600600.\n\nSubtasks\nSubtask #1 (100 points): original constraints\n\n                        Sample Input 1\n                        \n\n\n\n\n\n2\n3\n0 1 -4\n0 1 5\n3\n0 1 3\n1 1 -1\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n3\n2\n\n\nExplanation\nTest case 11 :  \n\nIn the first operation, you choose i=2i=2, and K=\xe2\x88\x921K=\xe2\x88\x921 and apply the third type of operation. So the location of 2nd2nd point becomes (1\xe2\x88\x921,1\xe2\x88\x921)=(0,0)(1\xe2\x88\x921,1\xe2\x88\x921)=(0,0).\nIn the second operation, you choose i=3i=3, and K=4K=4 and apply the first type of operation. So the location of 3rd3rd point becomes (\xe2\x88\x924+4,5)=(0,5)(\xe2\x88\x924+4,5)=(0,5).\nIn the third operation, you choose i=3i=3, and K=\xe2\x88\x925K=\xe2\x88\x925 and apply the second type of operation. So the location of 3rd3rd point becomes (0,5\xe2\x88\x925)=(0,0)(0,5\xe2\x88\x925)=(0,0).\n\nHence after the above operations, the location of the given three points becomes equal to each other.\nTest case 22 : \n\nIn the first operation, you choose i=1i=1 and K=1K=1 and apply the first type of operation. So the location of 1st point becomes (0+1,1)=(1,1)(0+1,1)=(1,1).\nIn the second operation, you choose i=3i=3, and K=\xe2\x88\x922K=\xe2\x88\x922 and apply the fourth type of operation. So the location of 3rd point becomes (3\xe2\x88\x922,\xe2\x88\x921\xe2\x88\x92(\xe2\x88\x922))=(1,1)(3\xe2\x88\x922,\xe2\x88\x921\xe2\x88\x92(\xe2\x88\x922))=(1,1).\n\nHence after the above operations, the location of the given three points becomes equal to each other.\n\n\n\nAuthor:\n5\xe2\x98\x85soumyadeep_21\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/POINTMEE\n\n\nTags:\n\n               \n                 Optimization Problems, Cartesian Coordinate System, ad-hoc, Observation\n                 \n                     \n                     Special, Mathematics, Algorithms, Constructive\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2066\n\n\nDate Added:\n30-08-2021\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'