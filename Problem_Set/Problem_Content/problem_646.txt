b"\n Read problems statements in Mandarin Chinese here\nProblem Statement\nChef has become a rich man and now owns the entire road network in the country, which consists of N cities (numbered from 1 to N) and M bidirectional roads. Each road connects two different cities i and j and has a cost C(i,j) - this is the cost paid by the drivers which use this road (and, thus, it is Chef's profit). The road network has the following properties:\nit is possible to reach any city from any other city using the existing roads\nany subset S of 10 or more cities contains at least two different cities A and B such that all the paths between A and B have at least one city X (X\xe2\x89\xa0A and X\xe2\x89\xa0B) in common (note that X does not necessarily belong to S) - note that this implies that if the city X were to be removed from the network, then no path would exist anymore between the cities A and B\n\nHowever, the anti-monopoly committee decided that Chef is making too much money and that some restrictions should be imposed. Chef will be allowed to keep a part P of the road network that he chooses, provided that:\nthere exists exactly one path from any city in P to any other city in P using only the roads from P (this means that the sets of cities and roads from P form a tree)\nevery city from P has at most 3 roads from P adjacent to it\n\n\nNote that P may consist of any subset of the N cities and any subset of roads connecting these cities, as long as the two restrictions are satisfied. However, Chef doesn't want to simply pick any part P of the road network which satisfies the restrictions. He would like to choose a part P for which the total cost of the roads which belong to P is maximum. Moreover, he would also like to know how many such parts P of maximum total cost exist. Two parts P1 and P2 are considered different if their subsets of cities are different or if their subsets of roads are different.\nInput\nThe first line contains the integer number T denoting the number of test cases. The description of the T test cases follows. The first line of each test case contains the integer numbers N and M. Each of the next M lines contains three space-separated integers: i, j and C(i,j), meaning that there is a road between the cities i and j having cost C(i,j).\nOutput\nFor each test case print a line containing two numbers: CMAX and CNT32. CMAX is the maximum cost of any part P which satisfies the restrictions imposed by the anti-monopoly committee. Let CNT be the total number of different parts P which have maximum cost and satisfy the restrictions. CNT32 is equal to CNT modulo 232 (i.e. we are only interested in the remainder of CNT when divided by 232).\nConstraints\n\n1 \xe2\x89\xa4 T \xe2\x89\xa4 6\n1 \xe2\x89\xa4 N \xe2\x89\xa4 100\nN-1 \xe2\x89\xa4 M \xe2\x89\xa4 min(N\xc3\x97(N-1)/2, 450)\n1 \xe2\x89\xa4 i, j \xe2\x89\xa4 N (i\xe2\x89\xa0j)\n-10000 \xe2\x89\xa4 C(i,j) \xe2\x89\xa4 10000\nThere exists at most one road connecting each pair of different cities.\n\nExample\nInput:\n6\n6 7\n1 3 1\n3 5 2\n5 1 3\n5 2 1\n2 4 2\n4 6 3\n6 5 1\n4 4\n1 2 0\n2 3 0\n3 4 0\n2 4 0\n4 4\n1 2 -1\n2 3 -2\n3 4 -3\n2 4 -4\n8 7\n1 2 1\n2 3 1\n3 4 1\n4 5 -2\n5 6 1\n6 7 1\n7 8 1\n8 7\n1 2 1\n2 3 1\n3 4 1\n4 5 -3\n5 6 1\n6 7 1\n7 8 1\n8 7\n1 2 1\n1 3 2\n1 4 3\n1 5 4\n1 6 5\n1 7 6\n1 8 7\n\nOutput:\n11 2\n0 17\n0 5\n4 1\n3 3\n18 1\n\n\nExplanation\nExample case 1. The maximum cost of a part P which satisfies the restrictions is 11. There are two such maximum cost parts, both of them containing all the cities and the following roads:\n(1,5), (2,5), (2,4), (3,5), (4,6)\n(1,5), (2,4), (3,5), (4,6), (5,6)\n\nExample case 2. All the roads have cost 0, thus the maximum cost of any part P satisfying the restrictions is 0. The 17 different parts are as follows:\n1 part containing 0 cities\n4 parts containing 1 city (1 part for each of the 4 cities)\n4 parts containing 2 cities and the road between them: {1,2}, {2, 3}, {2,4} and {3,4}\n5 parts containing 3 cities:\ncities 1, 2, 3 and the roads (1,2) and (2,3)\ncities 1, 2, 4 and the roads (1,2) and (2,4)\ncities 2, 3, 4 and the roads (2,3) and (3,4)\ncities 2, 3, 4 and the roads (2,3) and (2,4)\ncities 2, 3, 4 and the roads (2,4) and (3,4)\n\n3 parts containing all the 4 cities and the following roads:\n(1,2), (2,3), (3,4)\n(1,2), (2,3), (2,4)\n(1,2), (2,4), (3,4)\n\n\nExample case 3. The maximum cost part P which satisfies the restrictions does not contain any of the roads. Thus, there are 5 possible ways of choosing P, consisting of the following sets of cities: {1}, {2}, {3}, {4}, {}.\n\nExample case 4. Chef decides to keep the entire road network, because it satisfies the restrictions and has the maximum total cost among all of its parts.\n\nExample case 5. Chef has 3 choices for the maximum cost part (whose cost is 3):\nit can choose the entire road network\nit can choose the cities 1, 2, 3, 4 and the roads (1,2), (2,3), (3,4)\nit can choose the cities 5, 6, 7, 8 and the roads (5,6), (6,7), (7,8)\n\n\nExample case 6. Chef chooses the cities 1, 6, 7, 8 and the roads (1,6), (1,7), (1,8).\n\n\n\n\nAuthor:\n7\xe2\x98\x85mugurelionut\n\n\nTester:\n3\xe2\x98\x85shangjingbo\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/DEG3MAXT\n\n\nTags:\n\n               \n                 Biconnected Components, DP Approach, Dijkstra's Algorithm\n                 \n                     \n                     Advanced Algorithms, Advanced Graph Algos, Connected Components, Algorithms, Dynamic Programming, Graph Algos, Shortest Paths\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n3013\n\n\nDate Added:\n24-07-2013\n\n\nTime Limit:\n7.5 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"