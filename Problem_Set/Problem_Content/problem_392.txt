b'\nRead problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese as well.\nAfter failing to clear his school mathematics examination, infinitepro decided to prepare very hard for his upcoming re-exam, starting with the topic he is weakest at \xe2\x80\x95 computational geometry.\nBeing an artist, infinitepro has CC pencils (numbered 11 through CC); each of them draws with one of CC distinct colours. He draws NN lines (numbered 11 through NN) in a 2D Cartesian coordinate system; for each valid ii, the ii-th line is drawn with the cici-th pencil and it is described by the equation y=ai\xe2\x8b\x85x+biy=ai\xe2\x8b\x85x+bi.\nNow, infinitepro calls a triangle truly-geometric if each of its sides is part of some line he drew and all three sides have the same colour. He wants to count these triangles, but there are too many of them! After a lot of consideration, he decided to erase a subset of the NN lines he drew. He wants to do it with his eraser, which has length KK.\nWhenever erasing a line with a colour ii, the length of the eraser decreases by ViVi. In other words, when the eraser has length kk and we use it to erase a line with a colour ii, the length of the eraser decreases to k\xe2\x88\x92Vik\xe2\x88\x92Vi; if k<Vik<Vi, it is impossible to erase such a line.\nSince infinitepro has to study for the re-exam, he wants to minimise the number of truly-geometric triangles. Can you help him find the minimum possible number of truly-geometric triangles which can be obtained by erasing a subset of the NN lines in an optimal way? He promised a grand treat for you if he passes the examination!\nInput\n\nThe first line of the input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.\nThe first line of the input contains three space-separated integers NN, CC and KK.\nNN lines follow. For each ii (1\xe2\x89\xa4i\xe2\x89\xa4N1\xe2\x89\xa4i\xe2\x89\xa4N), the ii-th of these lines contains three space-separated integers aiai, bibi and cici.\nThe last line contains CC space-separated integers V1,V2,\xe2\x80\xa6,VCV1,V2,\xe2\x80\xa6,VC.\n\nOutput\nFor each test case, print a single line containing one integer \xe2\x80\x95 the smallest possible number of truly-geometric triangles after erasing lines.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa4101\xe2\x89\xa4T\xe2\x89\xa410\n1\xe2\x89\xa4C\xe2\x89\xa4N\xe2\x89\xa43,0001\xe2\x89\xa4C\xe2\x89\xa4N\xe2\x89\xa43,000\n0\xe2\x89\xa4K\xe2\x89\xa43,0000\xe2\x89\xa4K\xe2\x89\xa43,000\n0\xe2\x89\xa4ai,bi\xe2\x89\xa41090\xe2\x89\xa4ai,bi\xe2\x89\xa4109 for each valid ii\n1\xe2\x89\xa4ci\xe2\x89\xa4C1\xe2\x89\xa4ci\xe2\x89\xa4C for each valid ii\n0\xe2\x89\xa4Vi\xe2\x89\xa4K0\xe2\x89\xa4Vi\xe2\x89\xa4K for each valid ii\nno two lines coincide, regardless of their colours\nno three lines are concurrent\n\nSubtasks\nSubtask #1 (10 points):\n\nN\xe2\x89\xa410N\xe2\x89\xa410\nK\xe2\x89\xa4100K\xe2\x89\xa4100\n\nSubtask 2 (15 points):\n\nV1=V2=\xe2\x80\xa6=VCV1=V2=\xe2\x80\xa6=VC\nno two lines are parallel\n\nSubtask #3 (25 points): no two lines are parallel\nSubtask #4 (50 points): original constraints\n\n                        Sample Input 1\n                        \n\n\n\n\n\n2\n7 2 13\n1 10 1\n1 14 2\n6 4 1\n2 2 1\n0 12 2\n2 11 2\n0 6 1\n8 10\n6 1 20\n1 5 1\n2 11 1\n4 0 1\n6 8 1\n0 11 1\n3 3 1\n9\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n2\n4\n\n\nExplanation\nExample case 1: We can remove exactly one line. Initially, we have 55 truly geometric triangles (see the image below; red is colour 11 and green is colour 22).\n\nRemoving any line with colour 22 brings the total number of truly-geometric triangles down to 4+0=44+0=4.\nRemoving any line with colour 11 brings the total number of truly-geometric triangles down to 1+1=21+1=2.\n\nThus, the smallest number of truly-geometric triangles we can obtain is 22.\n\nExample case 2: We can remove at most 22 lines and removing any 22 lines gives us a total of 44 truly-geometric triangles.\n\n\n\nAuthor:\n3\xe2\x98\x85infinitepro\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/ACCBIP\n\n\nTags:\n\n               \n                 Geometry, Dynamic Programming, Implementation\n                 \n                     \n                     Mathematics, Algorithms\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2423\n\n\nDate Added:\n19-04-2020\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'