b'\nYou have a rooted tree consisting of nn vertices. There are some weights on each edge of the tree denoted by WiWi. The tree root is a vertex with number 11. \nIn this problem, you need to answer QQ queries. Each query is described by three values uu, vv, and xx. It is guaranteed that subtrees of node uu and node vv are disjoint. You are allowed to add at most one edge of weight xx between any node in the subtree of uu and any node in the subtree of vv. Find the maximummaximum weighted path between uu and vv given that each node can occur only once in a path.\nA subtree of some vertex is a subgraph containing that vertex and all its descendants.\nInput:\n\nFirst line will contain TT, number of testcases. Then the testcases follow. \nFirst line of each testcase will contain NN and QQ, number of nodes and queries respectively.\nNext NN \xe2\x88\x92\xe2\x88\x92 11 lines contain three integers uu, vv and WiWi representing an edge between nodes uu and vv of weight WiWi.\nThe next QQ lines contain three integers uu, vv and xx as explained in the problem statement.\n\nOutput:\nFor each query, output in a single line the maximummaximum weighted path.\nConstraints:\n\n1\xe2\x89\xa4T\xe2\x89\xa451\xe2\x89\xa4T\xe2\x89\xa45\n1\xe2\x89\xa4n,q\xe2\x89\xa42\xe2\x88\x971051\xe2\x89\xa4n,q\xe2\x89\xa42\xe2\x88\x97105\n1\xe2\x89\xa4u,v\xe2\x89\xa4n1\xe2\x89\xa4u,v\xe2\x89\xa4n\n1\xe2\x89\xa4abs(Wi),x\xe2\x89\xa41091\xe2\x89\xa4abs(Wi),x\xe2\x89\xa4109\n\nSubtasks\n\n20 points : 1\xe2\x89\xa4n,q\xe2\x89\xa410001\xe2\x89\xa4n,q\xe2\x89\xa41000\n80 points : 1\xe2\x89\xa4n,q\xe2\x89\xa42\xe2\x88\x971051\xe2\x89\xa4n,q\xe2\x89\xa42\xe2\x88\x97105\n\nSample Input:\n1\n7 3\n1 2 1\n1 3 -2\n2 4 3\n2 5 -4\n5 7 5\n3 6 6\n2 3 1\n5 4 2\n5 6 0\n\nSample Output:\n10\n7\n5\n\nExplanation:\n\nQuery 1 : Its  optimal to add a edge between nodes 4 and 6 making a path 2 -> 4 -> 6 -> 3  with a weight of 3 + 1 + 6 = 10.\n\n\n\nAuthor:\n5\xe2\x98\x85aman_robotics\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/TREEDGE\n\n\nTags:\n\n               \n                 akashbhalotia, aman_robotics, binary-lifting, dynamic-programming, ico, icop1904, lowest-common-ancestor, medium\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\nN/A\n\n\nDate Added:\n13-01-2019\n\n\nTime Limit:\n2 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH\n\n\n\n\n\nSubmit\n\n'