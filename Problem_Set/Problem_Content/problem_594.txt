b'\nRam brought home N identical crackers, and arranged them in a row. He then numbered all the crackers with positive integer numbers such that product of any two numbers is less than or equal to K. He also ensured that the numbers read from left most cracker to right most cracker are in non-decreasing order.\nRavana took away all the crackers when Ram was not at home. To keep things simple, Cool dude Laxman brought N new identical crackers. Now he want to number them following the conditions Ram followed, but he realized that there are multiple ways to do it.\nGiven N and K, write a program to output the number of ways to number the crackers. If there are infinite ways to do it, output "-1" instead.\nInput\nThe first line of the input contains an integer T denoting the number of test cases.\nOnly line of each testcase contains two integer numbers N and K.\nOutput\nFor each test case output one line. If the number of ways is infinite print "-1". If the number of ways is finite, print the required answer modulo 1000000007.\nConstraints\n\n1 \xe2\x89\xa4 T, N, K \xe2\x89\xa4 100000\n\nExample\nInput:\n2\n2 1\n2 2\nOutput:\n1\n2\nExplanation\nTest case #1:\nWe need to number 2 crackers. And the product of any two numbers should not exceed 1. The only possible numbering is "1 1"\n\nTest case #2:\nIn this case the product of any two numbers should not exceed 2. Two possible ways are "1 1" and "1 2".\nNote that "2 1" is invalid because Ram ensured that the numbering from left to right is non-decreasing.\n\n\n\n\nAuthor:\nadmin\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/ACM14KG5\n\n\nTags:\n\n               \n                 acmkg14r, admin, dynamic-programming, easy-medium\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\nN/A\n\n\nDate Added:\n28-10-2014\n\n\nTime Limit:\n6 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nJAVA, C, CPP14, PYP3\n\n\n\n\n\nSubmit\n\n'