b"\nRead problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese as well.\nIn the original Chef and Gordon Ramsay problem, Chef wanted to close all but three of this restaurants, and used his arch-rival Gordon's Secret Restaurant Placement Formula to decide which three to leave open to ensure their success.\nChef is now seeking to expand his chain of restaurants to a new town and, would you know it, the dastardly Gordon has already set up his own chain of restaurants there! Once again, Chef conducts a little Industrial Espionage Market Research and discovers that Gordon's Secret Restaurant Placement Formula is different for this new town: the optimal way to arrange restaurants is still in triples, but this time, the restaurants in any optimal triple have to be equidistant from each other. Just like before, Chef is wondering about the number of ways to build an optimally successful triple of restaurants in this new town.\nMore formally, the new town has NN sites (numbered 11 through NN) connected by N\xe2\x88\x921N\xe2\x88\x921 bidirectional roads (the length of each road is 11 mile) in such a way that any site vv can be reached from any other site uu using these roads. For any pair of sites uu and vv, let dist(u,v)dist(u,v) be the length, in miles, of the shortest sequence of roads that connects uu and vv.\nSome sites have been deemed suitable for building a restaurant; other sites are unsuitable. Help Chef find the number of ways to choose an ordered triple of sites (p,q,r)(p,q,r) on which he could build his restaurants such that this arrangement of restaurants would be optimally successful, i.e.:\n\npp, qq and rr are pairwise distinct.\npp, qq and rr are all suitable sites.\npp, qq and rr are equidistant from one another, i.e. dist(p,q)=dist(q,r)=dist(r,p)dist(p,q)=dist(q,r)=dist(r,p).\n\nInput\n\nThe first line of the input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.\nThe first line of each test case contains a single integer NN.\nEach of the next N\xe2\x88\x921N\xe2\x88\x921 lines contains two space-separated integers uu and vv denoting that sites uu and vv are connected by a road.\nThe last line contains NN space-separated integers s1,s2,\xe2\x80\xa6,sNs1,s2,\xe2\x80\xa6,sN, where si=1si=1 denotes that site ii is suitable, while si=0si=0 denotes that it is not suitable.\n\nOutput\nFor each test case, print a single line containing one integer \xe2\x80\x95 the number of triples of sites which result in optimally successful arrangements of restaurants.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa41,0001\xe2\x89\xa4T\xe2\x89\xa41,000\n1\xe2\x89\xa4N\xe2\x89\xa4200,0001\xe2\x89\xa4N\xe2\x89\xa4200,000\n1\xe2\x89\xa4u,v\xe2\x89\xa4N1\xe2\x89\xa4u,v\xe2\x89\xa4N\nsi\xe2\x88\x88{0,1}si\xe2\x88\x88{0,1} for each valid ii\nthe sum of NN over all test cases does not exceed 200,000200,000\n\nSubtasks\nSubtask #1 (5 points): \n\nT\xe2\x89\xa4100T\xe2\x89\xa4100\nN\xe2\x89\xa4100N\xe2\x89\xa4100\n\nSubtask #2 (10 points): \n\nT\xe2\x89\xa4100T\xe2\x89\xa4100\nN\xe2\x89\xa41,000N\xe2\x89\xa41,000\n\nSubtask #3 (85 points): original constraints\n\n                        Sample Input 1\n                        \n\n\n\n\n\n4\n4 \n3 2\n4 3\n1 3\n1 1 0 0\n5\n3 1\n2 3\n4 3\n5 3\n1 1 0 1 1\n5\n1 3\n4 3\n2 1\n1 5\n0 1 0 1 1\n9\n2 6\n1 2\n7 2\n5 8\n3 9\n8 4\n5 9\n2 5\n1 0 1 1 1 0 1 0 0\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n0\n24\n0\n18\n\n\nExplanation\nThroughout, we only care about the suitable sites, since no other site can be part of an optimally successful triple.\nExample case 1: There are only two suitable sites (the sites 11 and 22), so there is no way to form any triple of distinct suitable sites.\nExample case 2: The suitable sites are 11, 22, 44 and 55, and the distance between any two of them is always 22 miles, so any triple consisting of sites drawn from these four suitable sites results in an optimally successful arrangement.\nExample case 3: There are only three suitable sites (those labelled 22, 44 and 55), but while dist(2,4)=dist(4,5)=3dist(2,4)=dist(4,5)=3 miles, unfortunately dist(5,2)=2dist(5,2)=2 miles, so the three suitable sites are not equidistant from each other.\nExample case 4: The suitable sites are 11, 33, 44, 55 and 77.\n\nSince dist(1,5)=dist(5,7)=dist(7,1)=2dist(1,5)=dist(5,7)=dist(7,1)=2 miles, the triple (1,5,7)(1,5,7) results in an optimally successful arrangement, as do (1,7,5)(1,7,5), (5,1,7)(5,1,7), (5,7,1)(5,7,1), (7,1,5)(7,1,5) and (7,5,1)(7,5,1).\nAlso, since dist(1,3)=dist(3,4)=dist(4,1)=4dist(1,3)=dist(3,4)=dist(4,1)=4 miles, (1,3,4)(1,3,4) is another triple that results in an optimally successful arrangement, as are (1,4,3)(1,4,3), (3,1,4)(3,1,4), (3,4,1)(3,4,1), (4,1,3)(4,1,3) and (4,3,1)(4,3,1).\nFinally, we see that dist(3,4)=dist(4,7)=dist(7,3)=4dist(3,4)=dist(4,7)=dist(7,3)=4 miles, so (3,4,7)(3,4,7) is another triple that results in an optimally successful arrangement, as are (3,7,4)(3,7,4), (4,3,7)(4,3,7), (4,7,3)(4,7,3), (7,3,4)(7,3,4) and (7,4,3)(7,4,3). That's 1818 triples in total.\n\n\n\n\nAuthor:\n6\xe2\x98\x85ssjgz\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/CHGORAM2\n\n\nTags:\n\n               \n                 Trees, DP on Trees, DSU on Trees, Observation\n                 \n                     \n                     Data Structures, Graphs, Advanced Algorithms, Advanced DP, Advanced Graph Algos, Algorithms\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2624\n\n\nDate Added:\n19-01-2020\n\n\nTime Limit:\n3 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"