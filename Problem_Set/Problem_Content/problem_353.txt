b'\n Read problems statements in Mandarin Chinese, Russian and Vietnamese as well.\nChef is a big fan of soccer! He loves soccer so much, that he even invented soccer for his pet dogs! Here are the rules of the game:\n\nThere are N dogs numerated from 1 to N stay in a line, so dogs i and i + 1 are adjacent. \nThere is a ball which dogs will pass around. Initially, dog s has the ball.\nA dog with ball can pass it to another dog. If the current pass-strength of dog is x, then it can pass the ball to either  dog i - x or dog i + x (provided such dog/s exist).\n\n\n\nTo make it even more exciting, Chef created an array A of M positive integers denoting pass strengths. In i-th pass, current pass-strength of the dog making the pass will be given by Ai.\nChef asks dogs to execute these M passes one by one. As stated before, dog s will make the first pass, then some other dog and so on till M passes.\n\n\nDogs quickly found out that there can be lot of possible sequences of passes which will end up with a dog having the ball. Now each dog asks your help in finding number of different pass sequences which result in this dog ending up ball. Two pass sequences are considered different if after some number of passes they lead the ball to different dogs. As the answer could be quite large, output it modulo 109 + 7 (1000000007).\n\nInput\n\nThe first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.\nThe first line of each test case contains three space separated integers N, M, s denoting the number of dogs, number of pass strengths and number of dog having a ball at the beginning. \nThe second line contains M space-separated integers A1, A2, ..., AM denoting the pass strengths.\n\nOutput\n\nFor each test case, output a single line containing N space-separated integers, where i-th integer should be equal to number of different valid pass sequences leading the ball to i-th dog modulo 109 + 7. \n\nConstraints\n\n1 \xe2\x89\xa4 T \xe2\x89\xa4 10\n1 \xe2\x89\xa4 N, M \xe2\x89\xa4 10^3\n1 \xe2\x89\xa4 s \xe2\x89\xa4 N\n1 \xe2\x89\xa4 Ai \xe2\x89\xa4 10^3\n\nSubtasks\n\nSubtask #1 (30 points) : N, M \xe2\x89\xa4 10\nSubtask #2 (70 points) : Original constraints\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n3\n3 2 2\n1 2 \n3 3 3\n1 1 1\n3 1 1\n3\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n1 0 1\n0 2 0\n0 0 0\n\n\nExplanation\nExample case 1.\nPossible sequence for dog 1 is 2->3->1.\nPossible sequence for dog 3 is 2->1->3.\n\nExample case 2.\nPossible sequences for dog 2 are 3->2->1->2 and 3->2->3->2.\n\nExample case 3.\nThere are no valid sequences for such input.\n\n\n\n\nAuthor:\nberezin\n\n\nTester:\n7\xe2\x98\x85kevinsogo\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/CHEFSOC2\n\n\nTags:\n\n               \n                 Modular Arithmetic, Top-down, Bottom-up\n                 \n                     \n                     Mathematics, Algorithms, Dynamic Programming, DP Approach\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n1836\n\n\nDate Added:\n12-04-2016\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'