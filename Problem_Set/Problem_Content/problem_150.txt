b'\nThere are MM levels for a building numbered from 11 to MM from top to bottom, each level having NN parking spots numbered from 11 to NN from left to right. Some spots might have a car while other may be empty, the information of which is given in form of two dimensional character array CC (Ci,jCi,j denote parking spot at jj-th position on ii-th level).\nThere is a thief who wants to unlock all the cars. Now, he is skilled such that for the first time, he can directly reach in any parking spot in no time. Basically he can reach the first car to be stolen in 0 time.\nNow, he can move within the parking lot only in following manner, each taking 1 unit of time:\n\nMove down a level. That is, if current position is (i,j)(i,j), then he reaches (i+1,j)(i+1,j)\nIf current position is (i,j)(i,j) and if\nii is odd, then he can move from (i,j)(i,j) to (i,j+1)(i,j+1)\nii is even, then he can move from (i,j)(i,j) to (i,j\xe2\x88\x921)(i,j\xe2\x88\x921)\n\nNote that he wants to unlock the cars in minimum time and the car is unlocked as soon as the thief reaches that parking spot.If the parking lot is empty, then the time taken is considered to be 0.  \nFind the minimum time when all the cars would be unlocked. Note that once all cars are unlocked, the thief can escape instantly, so this time does not count.\nInput :\n\nThe first line of input contains a single integer TT (number of test cases).\nFirst liine of each test case contains MM and NN(number of levels and spots per each level)  \nNext MM line contains NN space separated characters Ci,1,Ci,2\xe2\x80\xa6Ci,NCi,1,Ci,2\xe2\x80\xa6Ci,N  where (1\xe2\x89\xa4i\xe2\x89\xa4M)(1\xe2\x89\xa4i\xe2\x89\xa4M) and Ci,jCi,j is either \xe2\x80\xb2P\xe2\x80\xb2\xe2\x80\xb2P\xe2\x80\xb2 or \xe2\x80\xb2N\xe2\x80\xb2\xe2\x80\xb2N\xe2\x80\xb2 (without quotes).\nIf the spot contains \xe2\x80\xb2P\xe2\x80\xb2\xe2\x80\xb2P\xe2\x80\xb2, then a car is parked there. else, it\xe2\x80\x99s not parked.\n\nOutput :\nFor each test case print a single integer, the minimum time in which thief can unlock all cars.\nConstraints :\n\n1\xe2\x89\xa4T\xe2\x89\xa4100.1\xe2\x89\xa4T\xe2\x89\xa4100. \n1\xe2\x89\xa4M,N\xe2\x89\xa43001\xe2\x89\xa4M,N\xe2\x89\xa4300 \n\nSubtasks :\n\nSubtask 1 (20 points): 1\xe2\x89\xa4M\xe2\x89\xa42.1\xe2\x89\xa4M\xe2\x89\xa42. \nSubtask 2 (80 points): Original Constraints\n\nSample Input :\n2\n4 5\nN P N N P\nN N P N N\nN P N N N\nP N N N N\n3 3\nN P P\nP P P \nP P N\n\nSample Output :\n10\n6\n\nExplanation:\nIn the first case, He will select the spot (1,2)(1,2) and the path he takes will be (1,2)\xe2\x86\x92(1,3)\xe2\x86\x92(1,4)\xe2\x86\x92(1,5)\xe2\x86\x92(2,5)\xe2\x86\x92(2,4)\xe2\x86\x92(2,3)\xe2\x86\x92(2,2)\xe2\x86\x92(3,2)\xe2\x86\x92(4,2)\xe2\x86\x92(4,1)(1,2)\xe2\x86\x92(1,3)\xe2\x86\x92(1,4)\xe2\x86\x92(1,5)\xe2\x86\x92(2,5)\xe2\x86\x92(2,4)\xe2\x86\x92(2,3)\xe2\x86\x92(2,2)\xe2\x86\x92(3,2)\xe2\x86\x92(4,2)\xe2\x86\x92(4,1)\nSo, he takes 10 steps to unlock all the cars.\nIn the second case, He will select the spot (1,2)(1,2) and the path he takes will be (1,2)\xe2\x86\x92(1,3)\xe2\x86\x92(2,3)\xe2\x86\x92(2,2)\xe2\x86\x92(2,1)\xe2\x86\x92(3,1)\xe2\x86\x92(3,2)(1,2)\xe2\x86\x92(1,3)\xe2\x86\x92(2,3)\xe2\x86\x92(2,2)\xe2\x86\x92(2,1)\xe2\x86\x92(3,1)\xe2\x86\x92(3,2).\nSo, he takes 6 steps.\n\n\n\nAuthor:\n4\xe2\x98\x85imreally_john\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/CARLOT\n\n\nTags:\n\n               \n                 chptrs01, greedy, imreally_john, matrices\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\nN/A\n\n\nDate Added:\n24-03-2020\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'