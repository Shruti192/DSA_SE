b"\nRead problems statements in Hindi, Mandarin Chinese, Russian, Vietnamese, and Bengali as well.\nTwo of your friends (let's denote them by PP and QQ) are playing a game and you are acting as their dealer. The rules of the game are as follows:\n\nThere are NN bracket sequences, denoted by S1,S2,\xe2\x80\xa6,SNS1,S2,\xe2\x80\xa6,SN.\nInitially, both players do not have any sequences. They play up to NN turns. For each valid ii, in the ii-th turn, you have to choose one player and give the bracket sequence SiSi to this player.\nAfter each turn, if it is possible to arrange all the sequences of one player in some order and concatenate them in such a way that the resulting bracket sequence is non-empty and balanced, that player immediately wins and the game ends. Note that it is impossible for both players to form non-empty balanced sequences at the same time.\n\nYou like PP more and hence want PP to win. Find the smallest number of turns you need in order to make PP win or determine that it is impossible to achieve this.\nNotes:\n\nA bracket sequence is an arbitrary string containing only characters '(' and ')'.\nA balanced bracket sequence is one of the following:\nAn empty string.\nA concatenation of two non-empty balanced bracket sequences.\nA string formed by adding '(' to the beginning and ')' to the end of a balanced bracket sequence.\n\nInput\n\nThe first line of the input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.\nThe first line of each test case contains a single integer NN.\nNN lines follow. For each valid ii, the ii-th of these lines contains a single string SiSi.\n\nOutput\nFor each test case, print a single line containing one integer \xe2\x80\x95 the smallest number of turns needed to make PP win or \xe2\x88\x921\xe2\x88\x921 if it is impossible.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa4151\xe2\x89\xa4T\xe2\x89\xa415\n1\xe2\x89\xa4N\xe2\x89\xa42001\xe2\x89\xa4N\xe2\x89\xa4200\n1\xe2\x89\xa4|Si|\xe2\x89\xa42001\xe2\x89\xa4|Si|\xe2\x89\xa4200 for each valid ii\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n1\n4\n())\n((\n()))\n()((\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n3\n\n\nExplanation\nExample case 1: You can give S1S1 to QQ and S2S2 and S3S3 to PP.\n\n\n\nAuthor:\n6\xe2\x98\x85smartnj\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/BRBAL\n\n\nTags:\n\n               \n                 Dynamic Programming, Binary Search\n                 \n                     \n                     Algorithms, Searching\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2919\n\n\nDate Added:\n5-09-2020\n\n\nTime Limit:\n2 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"