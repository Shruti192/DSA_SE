b"\nAlice and Bob are given an array of length of NN. They decide to play a game with it.\nInitially, Alice randomly shuffles the array, and then Bob takes NN turns. In each turn, Bob chooses an index which he has not already chosen and then Alice reveals the number on that index to Bob. If this number is either the first number to be chosen or strictly larger than previously chosen numbers by Bob then he takes it and adds to his array else he throws it.\nYou only know the initial unshuffled array and want to know the expected length of Bob's array at the end of the game.\nThe final expected length can be represented as a fraction of the form PQPQ. You are required to print P\xe2\x8b\x85Q\xe2\x88\x921mod998244353P\xe2\x8b\x85Q\xe2\x88\x921mod998244353.\nInput Format\n\nFirst line will contain TT, number of testcases. Then the testcases follow.\nEach testcase contains two lines of input.\nThe first line contains NN the length of the array.\nThe second line contains NN space-separated integers A1,A2,...,ANA1,A2,...,AN representing the initial array.\n\nOutput Format\nFor each testcase, output in a single line the expected length of Bob's array at the end of the game modulo 998244353998244353.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa42\xe2\x8b\x851041\xe2\x89\xa4T\xe2\x89\xa42\xe2\x8b\x85104\n1\xe2\x89\xa4N\xe2\x89\xa45\xe2\x8b\x851051\xe2\x89\xa4N\xe2\x89\xa45\xe2\x8b\x85105\n1\xe2\x89\xa4Ai\xe2\x89\xa45\xe2\x8b\x851051\xe2\x89\xa4Ai\xe2\x89\xa45\xe2\x8b\x85105\nSum of NN does not exceeds 5\xe2\x8b\x851055\xe2\x8b\x85105 over all testcases.\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n4\n2\n1 2\n3\n1 2 3\n3\n1 1 1\n3\n2 3 2\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n499122178\n831870296\n1\n665496237\n\n\nExplanation\nTest case 11: The possible final arrays will be [2,1][2,1] or [1,2][1,2]. If Bob chooses indexes in the order [2,1][2,1] then he will end up with 22 elements in the first case and 11 element in the second case, if he chooses indexes in the order [1,2][1,2] then he will end up with 11 element in the first case and 22 elements in the case. Hence his probability ending up with 22 elements is 1212 and with 11 element is also 1212. Hence the final answer will be calculated as 2\xe2\x8b\x8512+1\xe2\x8b\x85122\xe2\x8b\x8512+1\xe2\x8b\x8512 which is equal to 3232.\nTest case 22: The probability of Bob ending up with all three elements is 1616, the probability that he ends up with any two elements is 1212 and the probability that he ends with only a single element is 1313. Hence the final answer is calculated as 3\xe2\x8b\x8516+2\xe2\x8b\x8512+1\xe2\x8b\x85133\xe2\x8b\x8516+2\xe2\x8b\x8512+1\xe2\x8b\x8513 which is equal to 116116.\nTest case 33: No matter what index Bob chooses initially he will only end up with 11 element in his final array. Hence the final expected value is equal to 11.\nTest case 44: The probability of Bob ending up with all three elements is 00, the probability that he ends up with any two elements is 2323 and the probability that he ends with only a single element is 1313. Hence the final answer is calculated as 2\xe2\x8b\x8523+1\xe2\x8b\x85132\xe2\x8b\x8523+1\xe2\x8b\x8513 which is equal to 5353.\n\n\n\nAuthor:\n5\xe2\x98\x85tejas10p\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/LENGAME\n\n\nTags:\n\n               \n                 Modular Exponentiation, Modulo Multiplicative Inverse, Expected Value, Bottom-up\n                 \n                     \n                     Mathematics, Modular Arithmetic, Probability, Algorithms, Dynamic Programming, DP Approach\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2960\n\n\nDate Added:\n10-10-2021\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"