b"\nLakshika was bringing some laddus to her home for diwali celebration. But on her way, some of the laddus fell on the road. \nThere is a cat on the road. Consider that the house of Lakshika is at a distance of n from the cat's initial position. Consider that all laddus lie between the cat and Lakshika\xe2\x80\x99s home in one straight line. More than one laddu can be present at one point.\nThe i-th laddu is located at a distance xi from the initial position of the cat. \nIn one second, the following happens. First, lakshika can exactly move any one laddu by 1 position towards her house. If Lakshika is able to move the laddu to her home, she hides the laddu (i.e. Lakshika will not move this laddu any more to any point and it will not be eaten by the cat). Then (after Lakshika has finished her move) the cat moves by 1 position towards Lakshika\xe2\x80\x99s house. If at the new cat's position, some laddus are present, the cat eats them all. \nThe actions are performed until any laddu hasn't been hidden in the house or isn't eaten.\nIn other words, the first move is made by Lakshika. If any laddu has been hidden in the house, it's saved. Then the cat makes a move. The cat eats the laddu's located at the point the cat has reached (if the cat has reached the house, the cat can\xe2\x80\x99t eat any laddu now).\nEach second, Lakshika can select any laddu that she wishes to move. What is the maximum number of laddus that she can take to her house?\nInput Format\n\nFirst line will contain TT, number of testcases. Then the testcases follow.\nEach test case consists of two lines. The first line contains two integers n and k. The second line contains k integers x1,x2,\xe2\x80\xa6xk, the initial distance of the laddus from the initial position of the cat.\n\nOutput Format\nFor each test case, output on a separate line an integer m (m\xe2\x89\xa50) - the maximum number of laddus that Lakshika can take home.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa410001\xe2\x89\xa4T\xe2\x89\xa41000\n2\xe2\x89\xa4M\xe2\x89\xa41092\xe2\x89\xa4M\xe2\x89\xa4109\n1\xe2\x89\xa4t\xe2\x89\xa41041\xe2\x89\xa4t\xe2\x89\xa4104\n2\xe2\x89\xa4n\xe2\x89\xa41092\xe2\x89\xa4n\xe2\x89\xa4109\n1\xe2\x89\xa4k\xe2\x89\xa44\xe2\x88\x971051\xe2\x89\xa4k\xe2\x89\xa44\xe2\x88\x97105\n1\xe2\x89\xa4xi<n1\xe2\x89\xa4xi<n\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n3\n10 6\n8 7 5 4 9 4\n2 8\n1 1 1 1 1 1 1 1\n12 11\n1 2 3 4 5 6 7 8 9 10 11\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n3\n1\n4\n\n\n\n\n\nAuthor:\n2\xe2\x98\x85saksham_1904\n\n\nTester:\n3\xe2\x98\x85amisha_garg\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/SAVL\n\n\nTags:\n\n               \n                 easy, greedy, saksham_1904\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\nN/A\n\n\nDate Added:\n26-10-2021\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"