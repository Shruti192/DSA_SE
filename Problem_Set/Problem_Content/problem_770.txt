b'\n\nThere are n trees on a road in Chef\'s garden. Each tree has one of the three colours out of red, green or blue. You are given information about the colours of the trees by a string s. if s[i] is \'R\', it means that ith tree is red. Similarly \'G\' denotes green and \'B\' denotes blue colored tree.\n\nChef likes to create a beautiful pattern out of the tree colours. A pattern is called beautiful if all the trees of the same colour are continuous. eg. "RRBGG" and "GGBBB" are beautiful patterns, but "RGRB" is not a beautiful pattern because trees of red color are not continuous.\n\n\nFor achieving beautiful pattern, chef is permitted to change the colours of the trees. For changing the colour of ith tree from any colour to any other colour, he needs to pay a cost of c[i] rupees. Find out the minimum amount of rupees the chef requires, to create a beautiful pattern out of the colours of the n trees.\n\nInput\n\nFirst line of the input contains a single integer T denoting number of test cases. \nDescription of T test cases follows.\nFirst line of each test case will contain a single integer n denoting number of trees on the road in chef\'s garden.\nSecond line will contain a single line containing string s as defined in the problem. \nThird line will contain n space separated integers denoting the array c, i.e. c[1], c[2], .., c[n].\n\nOutput\n\nFor each test case, print a single line containing a single integer denoting minimum amount of rupees needed to create a beautiful pattern. \n\nConstraints\n\n1 \xe2\x89\xa4 T, n \xe2\x89\xa4 105\n1 \xe2\x89\xa4 c[i] \xe2\x89\xa4 109\n Sum of n over all the test cases won\'t exceed 106 \n\nExample\nInput:\n3\n3\nRGB\n1 2 3\n3\nRRR\n1 2 3\n3\nRBR\n1 2 3\n\nOutput:\n0\n0\n1\nExplanation\nExample case 1. Pattern is already beautiful. There is no need to pay any cost.\nExample case 2. Pattern is already beautiful. There is no need to pay any cost.\nExample case 3. Change colour of the first tree to blue. Then the pattern will BBR, which is beautiful pattern. Cost required will be 1. There is no way to create a beautiful pattern by paying less than 1 rupee. Hence answer is 1.\n\n\n\nAuthor:\nadmin2\n\n\nTags:\n\n               \n                 admin2, dynamic-programming, hump2015, minimum, prefix-sum\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\nN/A\n\n\nDate Added:\n27-02-2015\n\n\nTime Limit:\n3 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nJAVA, C, PYP3\n\n\n\n\n\nSubmit\n\n'