b'\nRead problems statements in Mandarin Chinese and Russian\nGiven an array A1,A2,...,ANA1,A2,...,AN, count the number of subarrays of array AA which are non-decreasing.\nA subarray A[i,j]A[i,j], where 1\xe2\x89\xa4i\xe2\x89\xa4j\xe2\x89\xa4N1\xe2\x89\xa4i\xe2\x89\xa4j\xe2\x89\xa4N is a sequence of integers Ai,Ai+1,...,AjAi,Ai+1,...,Aj.\nA subarray A[i,j]A[i,j] is non-decreasing if Ai\xe2\x89\xa4Ai+1\xe2\x89\xa4Ai+2\xe2\x89\xa4...\xe2\x89\xa4AjAi\xe2\x89\xa4Ai+1\xe2\x89\xa4Ai+2\xe2\x89\xa4...\xe2\x89\xa4Aj. You have to count the total number of such subarrays.\nInput\n\nThe first line of input contains an integer TT denoting the number of test cases. The description of TT test cases follows.\nThe first line of each test case contains a single integer NN denoting the size of array.\nThe second line contains NN space-separated integers A1A1, A2A2, \xe2\x80\xa6, ANAN denoting the elements of the array.\n\nOutput\nFor each test case, output in a single line the required answer.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa451\xe2\x89\xa4T\xe2\x89\xa45\n1\xe2\x89\xa4N\xe2\x89\xa41051\xe2\x89\xa4N\xe2\x89\xa4105\n1\xe2\x89\xa4Ai\xe2\x89\xa41091\xe2\x89\xa4Ai\xe2\x89\xa4109\n\nSubtasks\n\nSubtask 1 (20 points) : 1\xe2\x89\xa4N\xe2\x89\xa41001\xe2\x89\xa4N\xe2\x89\xa4100\nSubtask 2 (30 points) : 1\xe2\x89\xa4N\xe2\x89\xa410001\xe2\x89\xa4N\xe2\x89\xa41000\nSubtask 3 (50 points) : Original constraints\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n2\n4\n1 4 2 3\n1\n5\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n6\n1\n\n\nExplanation\nExample case 1.\nAll valid subarrays are A[1,1],A[1,2],A[2,2],A[3,3],A[3,4],A[4,4]A[1,1],A[1,2],A[2,2],A[3,3],A[3,4],A[4,4].\nNote that singleton subarrays are identically non-decreasing.\nExample case 2.\nOnly single subarray A[1,1]A[1,1] is non-decreasing.\n\n\n\nAuthor:\n4\xe2\x98\x85darkshadows\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/SUBINC\n\n\nTags:\n\n               \n                 Combinatorics, Dynamic Programming\n                 \n                     \n                     Mathematics, Algorithms\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n1478\n\n\nDate Added:\n9-06-2015\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'