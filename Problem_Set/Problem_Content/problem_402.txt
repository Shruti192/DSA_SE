b"\n Read problems statements in Mandarin Chinese  and Russian.\nLet\xe2\x80\x99s remember the problem Mountain holidays (MOU1H). The story of Mountain holidays is the following. Some time ago, Chef discovered that more and more people have started climbing mountains every day. So he decided to build a restaurant in the Ukrainian resort Bukovel (Carpathian Mountains). But there are many places to choose, so he wants to choose the best one.\nBy your great helps, Chef could find to the best place to build a restaurant, now Chef becomes rich. Now he wants to build a restaurant in the next mountain. Similar to previous one, the next mountain is described by a sequence of N points. Here the points are numbered from 1 to N, and the height of point k is denoted by Hk. Every two adjacent points of the mountain are connected by a segment. \n\n\nFor example, the mountain described by N = 9, H = [0, 2, 1, 2, 1, 3, 0, 1, 0]  is like a following:\n\n\n       /\\\n  /\\/\\/  \\\n /        \\/\\\n\n\n In the mountain, all of the tourists will go from the point 1 to point N. \n\n\nFor comfort of the tourists, Chef has bought teleports too. Using a teleport, a tourist can be transferred from point i to point j, for all i < j. Of course, tourists can also walk from point i to point i+1 on foot. \n\n\nNow Chef  wants to calculate the attractiveness of the mountain, as the number of the different climbs. \nA climb is defined by the nonempty sequence (p1, p1+1), (p2, p2+1), ..., (ps, ps+1) of the moves  on foot , where pk+1 \xe2\x89\xa4 pk+1 for k = 1, 2, ..., s \xe2\x88\x92 1. \n\n\nTwo climbs, say (p1, p1+1), (p2, p2+1), ..., (ps, ps+1) and (q1, q1+1), (q2, q2+1), ..., (qt, qt+1) are different if and only if\n\ns \xe2\x89\xa0 t or\nThere exists at least one k such that 1 \xe2\x89\xa4 k < min(s, t) and Hpk+1 \xe2\x80\x93 Hpk \xe2\x89\xa0 Hqk+1 \xe2\x80\x93 Hqk.\n\n\nYou are given the array H, find the number of the different climbs that exist on the mountain. Since the answer can be very large, output it modulo 109+9 = 1000000009.\nInput\nThe first line of input contains T, denoting the number of test cases. Then T test cases follow.\nThe first line of each test case contains an integer N, denoting the number of points on the mountain. \nOn second line of each test case, there are N space-separated integers H1, H2, ..., HN, denoting the height of each point.\nOutput\nFor each test case, output an integer denoting the number of the different climbs modulo 109+9 = 1000000009.\nConstraints\n\n1 \xe2\x89\xa4 T \xe2\x89\xa4 100000, that is, 1 \xe2\x89\xa4 T \xe2\x89\xa4 105\n2 \xe2\x89\xa4 N \xe2\x89\xa4 1000000, that is, 2 \xe2\x89\xa4 N \xe2\x89\xa4 106\nSum of N over all test cases in one file will be at most 1000000 = 106\n-2000000 \xe2\x89\xa4 Hk \xe2\x89\xa4 2000000, that is, \xe2\x88\x922 \xc3\x97 106 \xe2\x89\xa4 Hk \xe2\x89\xa4 2 \xc3\x97 106\n\nSample\nInput\n3\n6\n1 2 3 4 5 6\n9\n0 2 1 2 1 3 0 1 0\n7\n0 5 -5 5 -5 4 -4\n\nOutput\n5\n199\n55\n\nExplanation\nIn the first test case, since height increases by one for each move on foot, there will be one unique climb for each length. So there are 5 climbs with length 1, 2, ..., 5. Here length means the number of moves by foot.\nWe can get  the following 5 distinct climbs. \n\n(1, 2)\n(1, 2), (2, 3)\n(1, 2), (2, 3), (3, 4)\n(1, 2), (2, 3), (3, 4), (4, 5)\n(1, 2), (2, 3), (3, 4), (4, 5), (5, 6)\n\n\nThe second test case is taken from the problem statement.\nWarning: The input and output can be large. Please don't use a slow input/output method.\n\n\n\nAuthor:\nvitalij_adm\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/MOU2H\n\n\nTags:\n\n               \n                 DP on sequences\n                 \n                     \n                     Algorithms, Dynamic Programming\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2254\n\n\nDate Added:\n30-03-2013\n\n\nTime Limit:\n0.5 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"