b"\nAnjali loves food and she loves to cook. With time, she has mastered the art of transforming a cooked dish into another one. A dish can be represented as a string, where the ingredients are denoted by upper case English alphabets, and the order of ingredients does matter. She has already cooked a dish AA which she wants to transform to another dish BB. There are three types operations which she can perform any number of times (including 00) and in any order on dish AA to make dish BB:\n\nDrop an ingredient free of cost.\nAdd an ingredient at the end with unit cost.\nSwap a pair of ingredients free of cost.\n\nCan you help her determine the minimum possible cost to make dish BB from her dish AA?\nInput:\n\nThe first line of the input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.\nThe first line of each test case contains the string AA.\nThe second line contains the string BB.\n\nOutput:\nFor each test case print a single line containing an integer denoting the minimum possible cost to cook dish BB from dish AA.\nConstraints:\n\n1\xe2\x89\xa4T\xe2\x89\xa4101\xe2\x89\xa4T\xe2\x89\xa410\n1\xe2\x89\xa4|A|,|B|\xe2\x89\xa41051\xe2\x89\xa4|A|,|B|\xe2\x89\xa4105\n(|A||A| denotes the length of string AA)\nBoth the strings contain only upper case English alphabets\n\nSubtasks:\n\n10 points: 1\xe2\x89\xa4|A|,|B|\xe2\x89\xa41031\xe2\x89\xa4|A|,|B|\xe2\x89\xa4103\n90 points: original constraints\n\nSample Input:\n1\nABC\nABCCD\n\nSample Output:\n2\n\nExplanation:\n\nExample Case 1: She can first add the ingredient 'C' at the end with unit cost, and then she can add the ingredient 'D' at the end with unit cost. Since the ordering of ingredients of AA matches with that of BB after these two operations, there is no need to perform any other operation. Hence, 22 is the minimum possible cost.\n\n\n\n\nAuthor:\n5\xe2\x98\x85ankushkhanna\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/DWW19C\n\n\nTags:\n\n               \n                 ankushkhanna, ankushkhanna, dwwu2019, easy, greedy, observation\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\nN/A\n\n\nDate Added:\n28-12-2019\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"