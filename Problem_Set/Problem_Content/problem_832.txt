b"\nThere are N people wanting to seat on a row of N seats. The persons and seats are numbered from 1 to N.\nThe N people are ordered according to who chooses the seats first. In other words, person 1 is the first to seat, followed by person 2, then person 3, etc.\nIn addition, the ith person has a preferred seat Si, a number from 1 to N, and a preferred direction Di, which is either left or right. This means that on the ith person's turn, he/she first checks seats Si if it is available. If it's available, then he/she sits there, otherwise he walks into the direction specified by Di and sits on the first seat available in that direction. It's possible that the ith person doesn't find an available seat at all; if that happens, that person fails to seat and simply leaves.\nYou know their preferred seats [S1, S2, ..., SN], but you don't know their preferred directions [D1, D2, ..., DN]. So the problem is: how many assignments of preferred directions are there such that all N people successfully seat?\nInput\nThe first line of input contains an integer T denoting the number of test cases. The description of T test cases follows.\nThe first line of each test case contains a single integer N.\nThe second line contains N integers separated by single spaces: S1, S2, ..., SN.\nOutput\nFor each test case, output a single line containing the answer. Since the answer can be very large, only output it modulo 109 + 7.\nConstraints\n\n1 \xe2\x89\xa4 T \xe2\x89\xa4 200\n1 \xe2\x89\xa4 N \xe2\x89\xa4 60\n1 \xe2\x89\xa4 Si \xe2\x89\xa4 N\n\nExample\nInput:\n1\n3\n2 2 3\nOutput:\n6\n\nExplanation\nThe following assignments of preferred directions yield a successful seating:\n\n[left, left, left] which yields the seating [2, 1, 3].\n[left, left, right] which yields the seating [2, 1, 3].\n[left, right, left] which yields the seating [3, 1, 2].\n[right, left, left] which yields the seating [2, 1, 3].\n[right, left, right] which yields the seating [2, 1, 3].\n[right, right, left] which yields the seating [3, 1, 2].\n\n\n\n\nAuthor:\nadmin3\n\n\nTags:\n\n               \n                 acm16, admin3, dynamic-programming, icpc2016, kgp16, vijju123\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\nN/A\n\n\nDate Added:\n15-12-2016\n\n\nTime Limit:\n2 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3\n\n\n\n\n\nSubmit\n\n"