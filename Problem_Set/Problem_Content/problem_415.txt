b'\n Read problems statements in Mandarin Chinese, Russian and Vietnamese as well.\nChef recently learned about the classic Longest Increasing Subsequence problem. However, Chef found out that while the length of the longest increasing subsequence is unique, the longest increasing subsequence itself is not necessarily unique; for example, in the array [1, 3, 2, 4], there are two longest increasing subsequences: [1, 3, 4] and [1, 2, 4].\nChef decided to investigate on this more, and now he has sufficient mastery in it that he was able to come up with a problem:\nGiven an integer K, output an integer N and a permutation of the array [1, 2, ..., N] such that there are exactly K longest increasing subsequences. Chef also requires that 1 \xe2\x89\xa4 N \xe2\x89\xa4 100, otherwise he found the problem is too easy.\nIn case there are multiple possible answers, any one will be accepted.\nInput\nThe first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.\nEach test case consists of a single line containing a single integer K.\nOutput\nFor each test case, output two lines. The first line contains a single integer, N. The second line contains N space separated integers denoting the permutation of [1,2,...,N].\nConstraints\n\n1 \xe2\x89\xa4 T \xe2\x89\xa4 2\xc3\x97104\n1 \xe2\x89\xa4 K \xe2\x89\xa4 105\n\nExample\nInput:\n2\n1\n2\n\nOutput:\n5\n1 2 3 4 5\n4\n1 3 2 4\n\nExplanation\nExample case 1. Here, K = 1. The array [1, 2, 3, 4, 5] indeed contains exactly one longest increasing subsequence: the whole sequence itself.\nExample case 2. Here, K = 2. As explained in the problem statement, the array [1, 3, 2, 4] contains exactly two longest increasing subsequences: [1, 3, 4] and [1, 2, 4].\n\n\n\nAuthor:\n7\xe2\x98\x85kevinsogo\n\n\nTester:\n\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/MAKELIS\n\n\nTags:\n\n               \n                 Dynamic Programming, Longest Increasing Subsequence, Constructive\n                 \n                     \n                     Algorithms, DP on sequences\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\nN/A\n\n\nDate Added:\n30-05-2016\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'