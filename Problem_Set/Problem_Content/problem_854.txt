b'\nThe chef has n arrays each array has an m number of elements.  For each array given, You have to find the maximum sum of a subsequence with the constraint that no two numbers in the sequence should be adjacent to each other in the array and store it in the new array which will be of the size n.\n Now, you have a  single new array of size n. From that find the minimum sum of a subsequence by using the maximum number of elements in an array with the constraint that no two numbers in the sequence should be adjacent to each other in the array and print it.\nInput:\n-the first line of input contains T test cases.\n\nFor each test case,\nthere are two integers n,mn,m. \nfor next n lines, each line contains m integers\n\nOutput:\nThe answer is a single line output printing a number.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa41021\xe2\x89\xa4T\xe2\x89\xa4102\n1\xe2\x89\xa4n\xe2\x89\xa441\xe2\x89\xa4n\xe2\x89\xa44\n1\xe2\x89\xa4m\xe2\x89\xa41051\xe2\x89\xa4m\xe2\x89\xa4105\n1\xe2\x89\xa4a[i]\xe2\x89\xa41091\xe2\x89\xa4a[i]\xe2\x89\xa4109\n\nSample Input:\n    1\n    3 4\n    1 2 4 3\n    1 1 3 1\n    3 4 2 1\n\nSample Output:\n4\n\nEXPLANATION:\nThis list is :\nfrom \n[1,2,4,3]    gives 5 as maximum sum(sum of subsequence [2,3]),\n[1,1,3,1]   gives 4 as maximum sum(sum of subsequence [1,3]),\n[3,4,2,1]   gives 5 as maximum sum(sum of subsequence [4,1]). \nAfter this, we get an array of size n with elements found above i.e[5,4,5].\nNow [5,4,5]  gives 4 as the minimum sum(sum of subsequence [4]).\nHence the answer is 4.\n\n\n\nAuthor:\n2\xe2\x98\x85dhussa_09\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/DYNMCPRG\n\n\nTags:\n\n               \n                 clag2020, dhussa_09, dynamic-programming, easy-medium, greedy\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\nN/A\n\n\nDate Added:\n14-05-2020\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'