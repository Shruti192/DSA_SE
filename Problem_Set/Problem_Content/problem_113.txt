b"\nRead problems statements in Mandarin chinese, Russian and Vietnamese as well.\nChef has a sequence A with length N and a line given by the equation y(x) = k \xc2\xb7 x + b. Let us say that an element Aj is reachable from another element Ai if the point (Ai, Aj) is lying above or on the line y(x), i.e. if Aj \xe2\x89\xa5  k \xc2\xb7 Ai + b.\nConsider an arbitrary subsequence of A; let's denote it by B. Subsequence B is called good if its elements can be reordered in such a way that for each valid i, Bi+1 is reachable from Bi.\nChef asked you to compute the maximum possible length of a good subsequence. Can you help him?\nInput\n\nThe first line of the input contains a single integer T denoting the number of test cases. The description of T test cases follows.\nThe first line of each test case contains three space-separated integers N, k and b.\nThe second line contains N space-separated integers A1, A2, ..., AN.\n\nOutput\nFor each test case, print a single line containing one integer \xe2\x80\x94 the length of the longest good subsequence of A.\nConstraints\n\n1 \xe2\x89\xa4 T \xe2\x89\xa4 5000\n1 \xe2\x89\xa4 N \xe2\x89\xa4 100000\n0 \xe2\x89\xa4 k, b \xe2\x89\xa4 109\n0 \xe2\x89\xa4 Ai \xe2\x89\xa4 109 for each valid i\n1 \xe2\x89\xa4 sum of N over all test cases \xe2\x89\xa4 200000\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n1\n5 4 1\n100 2 4 17 8\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n3\n\n\nExplanation\nExample case 1: We can choose the subsequence (100, 4, 17) and reorder it to get the sequence (4, 17, 100). In this sequence, 17 is reachable from 4 because 4 \xc2\xb7 4 + 1 = 17 ? 17 and 100 is reachable from 17 because 4 \xc2\xb7 17 + 1 = 69 ? 100. Hence, (100, 4, 17) is a good subsequence; there is no good subsequence of A with length 4 or more, so the answer is 3.\n\n\n\nAuthor:\n6\xe2\x98\x85mgch\n\n\nTester:\n6\xe2\x98\x85wwwwodddd\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/CARRAY\n\n\nTags:\n\n               \n                 Segment Trees, Dynamic Programming, Greedy, Sorting, Binary Search\n                 \n                     \n                     Advanced Data Structures, Advanced Tree Structures, Algorithms, Searching\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2005\n\n\nDate Added:\n3-02-2018\n\n\nTime Limit:\n0.5 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"