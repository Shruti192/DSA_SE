b"\nRead problem statements in Mandarin and Russian.\nRoger wants to start a cloud computing company. First, he went to some companies to promote his cloud computing system and NN of them (numbered 11 through NN) showed interest. Each of these NN clients has one task, which consists of a number of processes that needs to be executed every second. Let's denote the number of processes for the ii-th client by DiDi.\nRoger, happy to have a bunch of clients, went to buy a server for his system. Unfortunately, there are QQ different servers on sale (numbered 11 through QQ), but Roger can only afford one. For each valid ii, Roger knows that the ii-th server's performance is described by two integers CiCi and PiPi with the following meaning:\n\nLet's split a second into PiPi equal time segments.\nThe server has CiCi cores. During each time segment, each core may execute a process or do nothing.\nDuring each second, each process must be executed exactly once \xe2\x80\x95 by exactly one core during exactly one time segment.\nIf two processes belong to the same task, they may not be executed by different cores during the same time segment due to synchronisation issues.\nProcesses that belong to the same task do not have to be executed by the same core or in any particular order. They also do not have to be executed during contiguous time segments.\n\nSince tasks can be extreme sometimes, all the servers are equipped with a new technology named Exclusive Processing. Initially, we may choose one task which should run in exclusive processing mode (since it demands a lot of power). Then, instead of executing one process, each core may execute two processes belonging to this task during any time segment. Executing just one process belonging to this task during one time segment is also allowed. However, it is still not allowed for different cores to execute processes belonging to the same task during the same time segment.\nNow Roger needs your help. For each server, he wants to know the number of subsets of the NN clients that can be served by this server. Since these numbers can be very large, compute them modulo 987,654,319987,654,319.\nInput\n\nThe first line of the input contains two space-separated integers NN and QQ.\nThe second line contains NN space-separated integers D1,D2,\xe2\x80\xa6,DND1,D2,\xe2\x80\xa6,DN.\nQQ lines follow. For each ii (1\xe2\x89\xa4i\xe2\x89\xa4Q1\xe2\x89\xa4i\xe2\x89\xa4Q), the ii-th of these lines contains two space-separated integers CiCi and PiPi.\n\nOutput\nFor each server, print a single line containing one integer \xe2\x80\x95 the number of subsets it can serve modulo 987,654,319987,654,319.\nConstraints\n\n1\xe2\x89\xa4N\xe2\x89\xa46001\xe2\x89\xa4N\xe2\x89\xa4600\n1\xe2\x89\xa4Q\xe2\x89\xa4360,0001\xe2\x89\xa4Q\xe2\x89\xa4360,000\n1\xe2\x89\xa4Di\xe2\x89\xa46001\xe2\x89\xa4Di\xe2\x89\xa4600 for each valid ii\n1\xe2\x89\xa4Ci\xe2\x89\xa46001\xe2\x89\xa4Ci\xe2\x89\xa4600 for each valid ii\n1\xe2\x89\xa4Pi\xe2\x89\xa4360,0001\xe2\x89\xa4Pi\xe2\x89\xa4360,000 for each valid ii\n\nSubtasks\nSubtask #1 (50 points):\n\nN,Q\xe2\x89\xa450N,Q\xe2\x89\xa450\nDi\xe2\x89\xa450Di\xe2\x89\xa450 for each valid ii\nCi,Pi\xe2\x89\xa450Ci,Pi\xe2\x89\xa450 for each valid ii\n\nSubtask #2 (50 points): original constraints\n\n                        Sample Input 1\n                        \n\n\n\n\n\n6 5\n8 2 5 3 6 2\n1 6\n2 4\n2 3\n4 1\n4 2\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n19\n27\n16\n3\n8\n\n\n\n\n\nAuthor:\n7\xe2\x98\x85kmaaszraa\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/SRVR\n\n\nTags:\n\n               \n                 Dynamic Programming\n                 \n                     \n                     Algorithms\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2891\n\n\nDate Added:\n30-11-2019\n\n\nTime Limit:\n4 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"