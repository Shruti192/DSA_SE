b'\nRead problems statements in Hindi, Mandarin Chinese, Russian, Vietnamese and Bengali as well.\nYou are given a context free grammar GG and a string SS. Find the minimum Levenshtein distance between SS and any string WW accepted by GG.\nInput\n\nThe first line of the input contains two space-separated integers VV and RR denoting the number of non-terminals and the number of productions of GG respectively.\nThe following RR lines describe productions.\nEach line starts with an integer TT denoting the production type.\nIf T=0T=0, a space and three space-separated integers XX, YY and ZZ denoting a production X\xe2\x86\x92YZX\xe2\x86\x92YZ follow.\nIf T=1T=1, a space, an integer XX, another space and a character cc denoting a production X\xe2\x86\x92cX\xe2\x86\x92c follow.\nIf T=2T=2, a space and a single integer XX denoting a production X\xe2\x86\x92\xce\xb5X\xe2\x86\x92\xce\xb5 follows.\nThe next line contains a single integer STST denoting the starting symbol of GG.\nLast line contains the string SS as explained in statement.\n\nOutput\nPrint a single line containing one integer \xe2\x80\x94 the minimum distance. It is guaranteed that the minimum distance fits in a 64-bit signed integer.\nConstraints\n\n1\xe2\x89\xa4V\xe2\x89\xa4601\xe2\x89\xa4V\xe2\x89\xa460\n1\xe2\x89\xa4|S|\xe2\x89\xa4601\xe2\x89\xa4|S|\xe2\x89\xa460\n1\xe2\x89\xa4R\xe2\x89\xa42561\xe2\x89\xa4R\xe2\x89\xa4256 \n0\xe2\x89\xa4X,Y,Z\xe2\x89\xa4V\xe2\x88\x9210\xe2\x89\xa4X,Y,Z\xe2\x89\xa4V\xe2\x88\x921\ncc is an English letter or a decimal digit\nSS consist of english letters or decimal digit or both.\n\nExample Input\n5 7\n0 0 1 2\n0 0 3 4\n2 0\n1 1 a\n1 3 b\n0 4 0 3\n0 2 0 1\n0 \nababb\n\nExample Output\n2\n\nExplanation\nThe grammar recognizes all even-length palindromes over the alphabet {a,b}{a,b}. We can transform the given string into "abaaba" with one insertion and one substitution. \n\n\n\nAuthor:\n7\xe2\x98\x85bciobanu\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/GDIST\n\n\nTags:\n\n               \n                 Cyk Algorithm, Levenshtein Distance\n                 \n                     \n                     Mathematics, Formal Language, Context Free Grammar, Algorithms, Dynamic Programming, DP on sequences\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\nN/A\n\n\nDate Added:\n16-09-2018\n\n\nTime Limit:\n0.5 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'