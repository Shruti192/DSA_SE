b"\nLink's Brother Chain has set out for an adventure. He has come across a mysterious dungeon filled with various threats and only one way to go through: using the platforms. The dungeon contains a number of platforms numbered from 00 to NN. \nOut of these, some platforms are fake and will collapse into the underlying lava, if stepped on without making the platform safe. Chain has to go through every one of these platforms in order as there is no other way.\nTo make these platforms safe, Chain has 44 different types of spells (and an unlimited amount of each spell). The details of the spells are as follows:\nSpell 1: Cost: cost[0]cost[0] Effect: Makes platform numbered xx safe\nSpell 2: Cost: cost[1]cost[1] Effect: Makes the platforms numbered from xx to x+6x+6 safe\nSpell 3: Cost: cost[2]cost[2] Effect: Makes the platforms numbered from xx to x+13x+13 safe\nSpell 4: Cost: cost[3]cost[3] Effect: Makes the platforms numbered from xx to x+29x+29 safe\n(Here the ranges are inclusive and platform xx is the current platform. If a platform is already safe, it remains safe)\nChain can successfully cross the dungeon only when the last of these unsafe platforms is made safe to cross. Chain starts on platform 00 which is safe beforehand. He now wants to minimize the costs of spells that will help him cross the dungeon. He wants your help in minimizing the cost because the threats of the dungeons have got to him!\nInput:\n\nThe first line of the input will contain TT, the number of test cases. Then TT test cases follow.\nThe first line of each test case will contain two space-separated integers, MM and NN: the number of platforms which are unsafe and the total number of platforms respectively.\nThe second line will contain MM space-separated integers, denoting the number of unsafe platforms in increasing order.\nThe third line contains the 44 space-separated values of the costs of the spells.\n\nOutput:\n\nFor every test case, print on a separate line, an integer denoting the minimum cost for the given configuration.\n\nConstraints:\n\n1\xe2\x89\xa4T\xe2\x89\xa4101\xe2\x89\xa4T\xe2\x89\xa410\n1\xe2\x89\xa4N\xe2\x89\xa46\xe2\x88\x971051\xe2\x89\xa4N\xe2\x89\xa46\xe2\x88\x97105\n1\xe2\x89\xa4M\xe2\x89\xa42\xe2\x88\x971051\xe2\x89\xa4M\xe2\x89\xa42\xe2\x88\x97105\nM\xe2\x89\xa4NM\xe2\x89\xa4N\n1\xe2\x89\xa4cost[i]\xe2\x89\xa4500,0\xe2\x89\xa4i\xe2\x89\xa431\xe2\x89\xa4cost[i]\xe2\x89\xa4500,0\xe2\x89\xa4i\xe2\x89\xa43\n\nSample Input:\n2\n12 25\n1 2 4 5 7 9 12 14 18 21 23 24\n4 13 22 38\n14 35\n1 2 4 6 9 11 14 16 17 19 24 26 29 34\n4 13 22 38\n\nSample Output:\n35\n42\n\nExplanation:\nIn the 1st case: Chase can use the 3rd spell on platform 1 to make platforms 1-14 safe, and then use the 2nd spell on platform 18 to make platforms 18-24 safe. Total cost 22+13 = 35\nIn the 2nd case: Chase can use the 4th spell on platform 1 to make platforms 1-30 safe, and then use the 1st spell on platform 34 to make platform 34 safe. Total cost 38+4 = 42\n\n\n\nAuthor:\n5\xe2\x98\x85kishen1912000\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/CHAND\n\n\nTags:\n\n               \n                 cnvx2020, dynamic-programming, kishen1912000\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\nN/A\n\n\nDate Added:\n1-10-2020\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"