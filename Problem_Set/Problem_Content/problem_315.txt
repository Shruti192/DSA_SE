b"\nRead problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese.\nThere are NN guests (numbered 11 through NN) coming to Chef's wedding. Each guest is part of a family; for each valid ii, the ii-th guest is part of family FiFi. You need to help Chef find an optimal seating arrangement.\nChef may buy a number of tables, which are large enough for any number of guests, but the people sitting at each table must have consecutive numbers \xe2\x80\x95 for any two guests ii and jj (i<ji<j) sitting at the same table, guests i+1,i+2,\xe2\x80\xa6,j\xe2\x88\x921i+1,i+2,\xe2\x80\xa6,j\xe2\x88\x921 must also sit at that table. Chef would have liked to seat all guests at a single table; however, he noticed that two guests ii and jj are likely to get into an argument if Fi=FjFi=Fj and they are sitting at the same table.\nEach table costs KK rupees. Chef defines the inefficiency of a seating arrangement as the total cost of tables plus the number of guests who are likely to get into an argument with another guest. Tell Chef the minimum possible inefficiency which he can achieve.\nInput\n\nThe first line of the input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.\nThe first line of each test case contains two space-separated integers NN and KK.\nThe second line contains NN space-separated integers F1,F2,\xe2\x80\xa6,FNF1,F2,\xe2\x80\xa6,FN.\n\nOutput\nFor each test case, print a single line containing one integer \xe2\x80\x95 the smallest possible inefficiency.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa41001\xe2\x89\xa4T\xe2\x89\xa4100\n1\xe2\x89\xa4N\xe2\x89\xa41,0001\xe2\x89\xa4N\xe2\x89\xa41,000\n1\xe2\x89\xa4K\xe2\x89\xa41,0001\xe2\x89\xa4K\xe2\x89\xa41,000\n1\xe2\x89\xa4Fi\xe2\x89\xa41001\xe2\x89\xa4Fi\xe2\x89\xa4100 for each valid ii\nThe sum of NN across test cases is \xe2\x89\xa45,000\xe2\x89\xa45,000\n\nSubtasks\n\nSubtask #1 (20 points): K=1K=1\nSubtask #2 (80 points): original constraints\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n3\n5 1\n5 1 3 3 3\n5 14\n1 4 2 4 4\n5 2\n3 5 4 5 1\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n3\n17\n4\n\n\nExplanation\nExample case 1: The optimal solution is to use three tables with groups of guests [1,2,3][1,2,3], [4][4] and [5][5]. None of the tables have any guests that are likely to get into an argument, so the inefficiency is 3\xe2\x8b\x85K=33\xe2\x8b\x85K=3.\nExample case 2: The optimal solution is to seat all guests at one table. Then, guests 22, 44 and 55 are likely to get into an argument with each other, so the inefficiency is K+3=17K+3=17.\n\n\n\nAuthor:\n2\xe2\x98\x85aryanag_adm\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/CHEFWED\n\n\nTags:\n\n               \n                 aryanag_adm, aryanag_adm, aug20, daniel_1999, dynamic-programming, easy-medium, rishup_nitdgp\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n1841\n\n\nDate Added:\n4-08-2020\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"