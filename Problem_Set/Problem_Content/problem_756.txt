b"\nRead problems statements in Mandarin chinese, Russian and Vietnamese as well.\nIn the problem CHEFRUN, Chef and Kefa were looking for a secret recipe. Their adventure continues here!\nIt turned out that the recipe has three pieces. They already have the first piece of the recipe, but the other two pieces are located at the coast of lake Piecal opposite to them.\nThe lake can be represented as a rectangular grid with NN rows and MM columns. Some cells of the grid are filled with water, other cells contain big stones.\nChef and Kefa decided to cooperate. Each cook takes his boat and crosses the lake to get one of the remaining pieces of the full recipe. Chef starts in the lower left corner cell of the lake and the piece he needs is located in the lower right corner cell; Kefa starts in the upper left cell and the piece he needs is located in the upper right cell.\nIn order to avoid wasting time, the cooks have agreed that their paths must not intersect and neither of them can visit any cell twice. From each cell, a boat can move one cell up, down or right (if a cell in that direction exists); of course, the boats can't enter the cells with stones.\nYour task is to find the number of ways in which Chef and Kefa can obtain the full recipe (the number of pairs of their paths across the lake), modulo 109+7109+7.\nInput\n\nThe first line of the input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.\nThe first line of each test case contains two space-separated integers NN and MM.\nThe following NN lines describe the grid. Each of these lines contains a single string with length MM containing only characters '.' (representing water) or '#' (representing stones).\n\nOutput\nFor each test case, print a single line containing one integer \xe2\x80\x94 the number of possible ways to get the recipe modulo 109+7109+7.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa431\xe2\x89\xa4T\xe2\x89\xa43\n2\xe2\x89\xa4N,M\xe2\x89\xa43002\xe2\x89\xa4N,M\xe2\x89\xa4300\nall corner cells do not contain stones\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n1\n4 3\n...\n...\n.#.\n...\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n5\n\n\nExplanation\nExample case 1. The following five ways are possible (uppercase letters denote the path of Kefa's boat, lowercase letters denote the path of Chef's boat):\nABC\n...\n.#.\nabc\n\nA.E\nBCD\n.#.\nabc\n\nADE\nBC.\n.#.\nabc\n\nABE\n.CD\n.#.\nabc\n\nABC\ncde\nb#f\na.g\n\n\n\n\nAuthor:\n4\xe2\x98\x85hloya_ygrt\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/CHEFLAKE\n\n\nTags:\n\n               \n                 Dynamic Programming, Prefix Sum\n                 \n                     \n                     Algorithms, Simple Algos\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2807\n\n\nDate Added:\n15-05-2018\n\n\nTime Limit:\n2 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"