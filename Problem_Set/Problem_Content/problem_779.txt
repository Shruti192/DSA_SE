b'\nRead problem statements in Mandarin, Bengali, Russian, and Vietnamese as well.\nThe nation of Islandia can be represented as an N\xc3\x97NN\xc3\x97N grid. Let (i,j)(i,j) denote the square at the ii-th row from the top and the jj-th column from the left. A cell (i,j)(i,j) is labelled 11 if it is land and 00 if it is water. Any two cells of the grid which share a side, and are both land are said to belong to the same island. \nIslandia holds two contests a year, the first at (xa,ya)(xa,ya) and the second at (xb,yb)(xb,yb). Ashish will need to travel from cell (xa,ya)(xa,ya) to (xb,yb)(xb,yb). To do so, he can perform a sequence of zero or more moves. In each move if he is at (xi,yi)(xi,yi), he can perform one of two actions:\n\nType 1: Move from (xi,yi)(xi,yi) to some land cell (xj,yj)(xj,yj) that lies on a different island at a cost of |xi\xe2\x88\x92xj|+|yi\xe2\x88\x92yj||xi\xe2\x88\x92xj|+|yi\xe2\x88\x92yj|\nType 2: Move from (xi,yi)(xi,yi) to some land cell (xj,yj)(xj,yj) that lies on the same island at a cost of 00.\n\nLet the beauty of a sequence of moves be the number of moves of type 11 while traveling from (xa,ya)(xa,ya) to (xb,yb)(xb,yb). We define the simple cost as the minimum cost of a sequence with beauty\xe2\x89\xa41beauty\xe2\x89\xa41.\nAshish wants to figure out the maximum beauty possible to go from (xa,ya)(xa,ya) to (xb,yb)(xb,yb) without exceeding the simple cost. However, Ashish only knows (xa,ya)(xa,ya). Find the answer for every possible land cell (xb,yb)(xb,yb).\nNote that we DO NOT need to minimize the cost of the trip, only maximize the beauty without exceeding the simple cost.\nInput\n\nThe first line contains an integer TT, the number of test cases. Then TT test cases follow.\nThe first line of each test case contains an integer NN.\nThe following NN lines each contains a string S=s1s2\xe2\x80\xa6sNS=s1s2\xe2\x80\xa6sN. The string on the ii-th line represents the ii-th row of the grid, where sjsj is 11 if the cell (i,j)(i,j) is land, and 00 if it is water.\nThe last line of each test case contains two integers xaxa and yaya where (xa,ya)(xa,ya) represents the cell where the first contest will be held. It is guaranteed that this cell will be a land cell.\n\nOutput\nFor each test case, print NN lines, each containing the NN space-separated integers. The jj-th value of the ii-th line represents the maximum beauty possible on a journey from (xa,ya)(xa,ya) to (i,j)(i,j) satisfying the mentioned conditions, if the cell (i,j)(i,j) is land. If (i,j)(i,j) is a water cell or belongs to the same island as (xa,ya)(xa,ya), the value to be printed is 0.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa4201\xe2\x89\xa4T\xe2\x89\xa420\n1\xe2\x89\xa4N\xe2\x89\xa42001\xe2\x89\xa4N\xe2\x89\xa4200\n1\xe2\x89\xa4xa,ya\xe2\x89\xa4N1\xe2\x89\xa4xa,ya\xe2\x89\xa4N\nThe sum of N2N2 over all cases does not exceed 4\xe2\x8b\x851044\xe2\x8b\x85104\n\nSubtasks\nSubtask #1 (15 points):\n\nN\xe2\x89\xa450N\xe2\x89\xa450\nThe sum of N2N2 over all cases does not exceed 25002500\n\nSubtask #2 (35 points):\n\nN\xe2\x89\xa4100N\xe2\x89\xa4100\nThe sum of N2N2 over all cases does not exceed 104104\n\nSubtask #3 (50 points): Original constraints\nSample Input 1\n2\n2\n00\n01\n2 2\n5\n00001\n10010\n00001\n00000\n01010\n2 4\n\nSample Output 1\n0 0 \n0 0 \n0 0 0 0 1 \n1 0 0 0 0 \n0 0 0 0 1 \n0 0 0 0 0 \n0 2 0 1 0 \n\nSample Input 2\n2\n3\n011\n010\n001\n2 2\n9\n110000011\n001100001\n100100111\n011000010\n000110011\n000010100\n000011111\n111101001\n101110110\n3 1\n\nSample Output 2\n0 0 0 \n0 0 0 \n0 0 1 \n1 1 0 0 0 0 0 3 3 \n0 0 1 1 0 0 0 0 3 \n0 0 0 1 0 0 3 3 3 \n0 1 1 0 0 0 0 3 0 \n0 0 0 2 2 0 0 3 3 \n0 0 0 0 2 0 2 0 0 \n0 0 0 0 2 2 2 2 2 \n1 1 1 1 0 2 0 0 2 \n1 0 1 1 1 0 6 6 0 \n\nSample Input 3\n2\n7\n1011101\n0000000\n0000000\n0000000\n0000000\n0000000\n0000000\n1 1\n9\n111111101\n100000000\n100000000\n100000000\n100000000\n100000000\n100000000\n100000000\n111111101\n9 9\n\nSample Output 3\n0 0 1 1 1 0 2 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 \n1 1 1 1 1 1 1 0 4 \n1 0 0 0 0 0 0 0 0 \n1 0 0 0 0 0 0 0 0 \n1 0 0 0 0 0 0 0 0 \n1 0 0 0 0 0 0 0 0 \n1 0 0 0 0 0 0 0 0 \n1 0 0 0 0 0 0 0 0 \n1 0 0 0 0 0 0 0 0 \n1 1 1 1 1 1 1 0 0 \n\nExplanation\nSample 1, test case 2:\nThe simple cost from (2,4)(2,4) to (5,2)(5,2) is |2\xe2\x88\x925|+|4\xe2\x88\x922|=3+2=5|2\xe2\x88\x925|+|4\xe2\x88\x922|=3+2=5. We can achieve a beauty of 22 without exceeding the simple cost in the following manner:\n\nPerform a move of type 11 from (2,4)(2,4) to (5,4)(5,4) at a cost of 33.\nPerform a move of type 11 from (5,4)(5,4) to (5,2)(5,2) at a cost of 22.\n\nSample 3, test case 1:\nThe simple cost from (1,1)(1,1) to (1,7)(1,7) is |1\xe2\x88\x921|+|1\xe2\x88\x927|=0+6=6|1\xe2\x88\x921|+|1\xe2\x88\x927|=0+6=6. However we can achieve a beauty of 22 without exceeding the simple cost in the following manner:\n\nPerform a move of type 11 from (1,1)(1,1) to (1,3)(1,3) at a cost of 22.\nPerform a move of type 22 from (1,3)(1,3) to (1,5)(1,5) at a cost of 00.\nPerform a move of type 11 from (1,5)(1,5) to (1,7)(1,7) at a cost of 22.\n\nNote that the cost of some sequence with beauty >1>1 might be lower than the simple cost.\nSample 3, test case 2:\nIn the second case of third sample, the simple cost from (9,9)(9,9) to (1,9)(1,9) is |9\xe2\x88\x921|+|9\xe2\x88\x929|=8+0=8|9\xe2\x88\x921|+|9\xe2\x88\x929|=8+0=8. However we can achieve a beauty of 44 without exceeding the simple cost in the following manner:\n\nPerform a move of type 11 from (9,9)(9,9) to (9,7)(9,7) at a cost of 22.\nPerform a move of type 22 from (9,7)(9,7) to (1,7)(1,7) at a cost of 00.\nPerform a move of type 11 from (1,7)(1,7) to (1,9)(1,9) at a cost of 22.\nPerform a move of type 11 from (1,9)(1,9) to (1,7)(1,7) at a cost of 22.\nPerform a move of type 11 from (1,7)(1,7) to (1,9)(1,9) at a cost of 22.\n\nAlso note that in the same sample the answer for (1,7)(1,7) will be 11, not 33 as the simple cost from (9,9)(9,9) to (1,7)(1,7) is 22. This can be achieved by performing a move of type 11 from (9,9)(9,9) to (9,7)(9,7) at cost of 22 and then a move of type 22 from (9,7)(9,7) to (1,7)(1,7) at a cost of 00.\n\n\n\nAuthor:\n6\xe2\x98\x85explodingfrz\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/ISLNDHOP\n\n\nTags:\n\n               \n                 Graphs, Connected Components, Dynamic Programming, Multi source BFS\n                 \n                     \n                     Data Structures, Advanced Algorithms, Advanced Graph Algos, Algorithms, Graph Algos, Traversals, BFS\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n3266\n\n\nDate Added:\n22-06-2021\n\n\nTime Limit:\n1.5 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'