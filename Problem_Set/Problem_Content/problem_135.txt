b"\nRead problems statements in Russian, Vietnamese, Hindi, Mandarin chinese and Bengali as well.\nChef has an inventory, which can be represented as a row of NN cells (numbered 11 through NN). Each cell is either empty or contains a box. Chef wants to rearrange the boxes in such a way that they are all on the left side of the inventory (so if there are KK boxes, they should occupy the leftmost KK cells). He may perform two types of moves:\n\nchoose a cell ii (1\xe2\x89\xa4i\xe2\x89\xa4N\xe2\x88\x9221\xe2\x89\xa4i\xe2\x89\xa4N\xe2\x88\x922); if cells ii and i+2i+2 are empty and cell i+1i+1 contains a box, Chef stands in cell i+2i+2 and pushes the box from cell i+1i+1 to cell ii\nchoose a cell ii (1\xe2\x89\xa4i\xe2\x89\xa4N\xe2\x88\x9221\xe2\x89\xa4i\xe2\x89\xa4N\xe2\x88\x922); if cells i+1i+1 and i+2i+2 are empty and cell ii contains a box, Chef stands in cell i+1i+1 and pulls the box in cell ii to cell i+1i+1\n\nThe moves may be performed in any order, any number of times (possibly zero).\nFind the minimum number of moves required to get all boxes to the left side of the inventory or determine that it is impossible.\nInput\n\nThe first line of the input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.\nThe first line of each test case contains a single integer NN.\nThe second line contains a string with length NN describing the inventory. For each ii (1\xe2\x89\xa4i\xe2\x89\xa4N1\xe2\x89\xa4i\xe2\x89\xa4N), the ii-th character of this string is '#' if the ii-th cell contains a box or '.' if the ii-th cell is empty.\n\nOutput\nFor each test case, print a single line containing one integer \xe2\x80\x94 the minimum number of moves required, or \xe2\x88\x921\xe2\x88\x921 if it is impossible to move all boxes to the left.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa41001\xe2\x89\xa4T\xe2\x89\xa4100\n3\xe2\x89\xa4N\xe2\x89\xa41053\xe2\x89\xa4N\xe2\x89\xa4105\nthe sum of NN over all test cases does not exceed 106106\n\nExample Input\n3\n6\n##.#..\n7\n.#.#.#.\n5\n##.##\n\nExample Output\n1\n6\n-1\n\n\n\n\nAuthor:\n6\xe2\x98\x85kingofnumbers\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/INVENTRY\n\n\nTags:\n\n               \n                 Greedy, ad-hoc, Observation, Implementation\n                 \n                     \n                     Algorithms, Constructive\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\nN/A\n\n\nDate Added:\n3-11-2018\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"