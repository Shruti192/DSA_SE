b"\nYou are trying to create an array AA containing NN integers. However, your array-creating-machine has some restrictions. More formally, you are given a constant DD, and two arrays BB and CC, each with MM elements, then:\n\nAi\xe2\x89\xa4DAi\xe2\x89\xa4D for all 1\xe2\x89\xa4i\xe2\x89\xa4N1\xe2\x89\xa4i\xe2\x89\xa4N\nAi\xe2\x89\xa5Ai\xe2\x88\x921Ai\xe2\x89\xa5Ai\xe2\x88\x921 for all 1<i\xe2\x89\xa4N1<i\xe2\x89\xa4N\nACj\xe2\x8b\x85Bj\xe2\x89\xa4DACj\xe2\x8b\x85Bj\xe2\x89\xa4D for all 1\xe2\x89\xa4j\xe2\x89\xa4M1\xe2\x89\xa4j\xe2\x89\xa4M\n\nFind how many different arrays can you create. Since answer can be big, print it modulo \n998244353998244353.\nInput Format\n\nThe first line of the input contains a single integer TT - the number of test cases. The test cases then follow.\nThe first line of each test case contains 33 integers NN, MM, and DD - the length of the array AA you need to create, the length of BB and CC, the constant from the statement.\nThe ii-th line of the next MM lines of each test case contains two integers CiCi and BiBi.\n\nOutput Format\nFor each test case output a single integer - the number of different arrays you can create modulo 998244353998244353.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa41041\xe2\x89\xa4T\xe2\x89\xa4104\n1\xe2\x89\xa4N\xe2\x89\xa41071\xe2\x89\xa4N\xe2\x89\xa4107\n1\xe2\x89\xa4M,D\xe2\x89\xa41051\xe2\x89\xa4M,D\xe2\x89\xa4105\n1\xe2\x89\xa4Ci\xe2\x89\xa4N1\xe2\x89\xa4Ci\xe2\x89\xa4N\n1\xe2\x89\xa4Bi\xe2\x89\xa4D1\xe2\x89\xa4Bi\xe2\x89\xa4D\nIt's guaranteed that the sum of MM over all test cases doesn't exceed 105105, and sum of DD over all test cases doesn't exceed 105105\nIt's guaranteed that in each test case all CiCi are different\n\nSubtasks\n\nSubtask 11 (30 points): sum of DD over all test cases doesn't exceed 30003000.\nSubtask 22 (70 points): Original constraints.\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n5\n4 2 6\n3 3\n1 4\n5 3 6\n4 2\n3 3\n1 4\n4 1 4\n3 2\n14 3 100\n3 39\n7 3\n10 11\n100 1 1000\n50 100\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n16\n33\n13\n547870382\n141926475\n\n\nExplanation\n\nTest case 11: One array is {1,1,1,1}{1,1,1,1} and for each value of last element from 22 to 66, there are 33 possible combinations of first three values: {1,1,1}{1,1,1}, {1,1,2}{1,1,2}, {1,2,2}{1,2,2}. Therefore there are a total of 1+5\xe2\x8b\x853=161+5\xe2\x8b\x853=16 possible arrays.\n\n\n\n\nAuthor:\n7\xe2\x98\x85kristevalex\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/NOL_LESS\n\n\nTags:\n\n               \n                 Combinatorics, NTT, Dynamic Programming\n                 \n                     \n                     Mathematics, Transformations, Algorithms\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2984\n\n\nDate Added:\n23-12-2021\n\n\nTime Limit:\n3 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"