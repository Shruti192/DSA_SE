b"\n\xc2\xa0\nFluffy the squirrel has just learned about Run Length Encoding! Naturally, he has came up with the following problem, which is now presented to you in the qualifiers. \n\nYou're given a binary string, i.e. a sequence of bits where each bit is either 0 or 1, of length n. Define the number of runs of the binary string as the minimum number of parts you can partition the string into so that all the bits of one part are the same. For example, consider the binary string 10110001. The number of runs of this string is 5. This is because we can split the string into 5 parts : 1, 0, 11, 000, 1, such that the bits of each part is the same. Similarly, verify that the number of runs of 1010101, 11110000, 0010111 is 7, 2 and 4 respectively.\n\nFluffy has a binary string S of length n, but some of the bits are missing, and are replaced with a question mark. For each integer i that satisfies 1 \xe2\x89\xa4 i \xe2\x89\xa4 n, Fluffy wants to know the number of ways to replace the question marks with 1 or 0 so that the number of runs of S is equal to i.\n\xc2\xa0\nInput\nThe input contains a binary string S as described in the problem statement.\nOutput\nOutput n space-seperated integers, where n is the length of the string S. The i-th integer should denote the number of ways to replace the question marks with 0 or 1 so that the resulting string S has exactly i runs. Since the answer might be too large, print each value modulo 1000000007 (109 + 7).\nConstraints\n\n1 \xe2\x89\xa4 Length of S \xe2\x89\xa4 3000\n\nSubtasks\n\nSubtask 1 (37 points) : 1 \xe2\x89\xa4 Length of S \xe2\x89\xa4 20\nSubtask 2 (63 points) : 1 \xe2\x89\xa4 Length of S \xe2\x89\xa4 3000\n\nExample\nInput:\n1??0\n\nOutput:\n0 3 0 1\n\n\xc2\xa0\nExplanation\nExample case 1. There are 4 possible strings, 1000, 1010, 1100, 1110. These strings have 2, 4, 2, 2 runs respectively. So, the answer is 0, 3, 0, 1.\n\n\n\nAuthor:\n6\xe2\x98\x85zscoder\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/MCO16202\n\n\nTags:\n\n               \n                 dynamic-programming, easy, zscoder\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\nN/A\n\n\nDate Added:\n2-11-2016\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, CPP14, PYTH, PYP3\n\n\n\n\n\nSubmit\n\n"