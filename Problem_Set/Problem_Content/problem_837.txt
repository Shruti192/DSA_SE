b'\nYou are given an undirected tree of NN nodes. A positive weight WiWi is assigned to the node ii for all 1\xe2\x89\xa4i\xe2\x89\xa4N1\xe2\x89\xa4i\xe2\x89\xa4N.\nFor all 1\xe2\x89\xa4j\xe2\x89\xa4N\xe2\x88\x9211\xe2\x89\xa4j\xe2\x89\xa4N\xe2\x88\x921, the jj-th edge connects the nodes ujuj and vjvj, and has a restriction value of RjRj.\nAn array A1,A2,\xe2\x8b\xaf,ANA1,A2,\xe2\x8b\xaf,AN consisting of NN non-negative integers is called valid if:\n\nFor all 1\xe2\x89\xa4j\xe2\x89\xa4N\xe2\x88\x9211\xe2\x89\xa4j\xe2\x89\xa4N\xe2\x88\x921, the condition Auj+Avj\xe2\x89\xa4RjAuj+Avj\xe2\x89\xa4Rj holds.\n\nThe profit of a valid array AA is defined as profit(A)=\xe2\x88\x91i=1NAi\xe2\x8b\x85Wiprofit(A)=\xe2\x88\x91i=1NAi\xe2\x8b\x85Wi\nFind the maximum possible value of profit(A)profit(A) for some valid array AA.\nInput Format\n\nThe first line of input contains a single integer TT - the number of test cases. The description of TT test cases follow.\nThe first line of each test case contains a single integer NN - the number of nodes in the tree.\nThe second line of each test case contains NN integers W1,W2,\xe2\x8b\xaf,WNW1,W2,\xe2\x8b\xaf,WN denoting the weights assigned to every node.\nThe next N\xe2\x88\x921N\xe2\x88\x921 lines contain three space-separated integers each, with the jj-th line containing ujuj, vjvj, and RjRj.\n\nOutput Format\nFor each test case, output the maximum possible value of profit(A)profit(A).\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa41051\xe2\x89\xa4T\xe2\x89\xa4105\n3\xe2\x89\xa4N\xe2\x89\xa41053\xe2\x89\xa4N\xe2\x89\xa4105\n1\xe2\x89\xa4Wi\xe2\x89\xa41091\xe2\x89\xa4Wi\xe2\x89\xa4109\n1\xe2\x89\xa4uj,vj\xe2\x89\xa4N1\xe2\x89\xa4uj,vj\xe2\x89\xa4N and uj\xe2\x89\xa0vjuj\xe2\x89\xa0vj\n1\xe2\x89\xa4Rj\xe2\x89\xa41091\xe2\x89\xa4Rj\xe2\x89\xa4109\nIt is guaranteed that N\xe2\x8b\x85maxNi=1Wi\xe2\x8b\x85maxN\xe2\x88\x921j=1Rj\xe2\x89\xa41018.N\xe2\x8b\x85maxi=1NWi\xe2\x8b\x85maxj=1N\xe2\x88\x921Rj\xe2\x89\xa41018.\nIt is guaranteed that the input forms a valid tree for all test cases.\nThe sum of NN over all test cases do not exceed 105105\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n3\n3\n6 9 4\n1 2 2\n2 3 1\n6\n1 2 2 6 100 100\n1 2 9\n2 3 17\n2 4 3\n3 5 1\n3 6 4\n3\n120734269 1000000000 1\n1 2 300000000\n2 3 300000000\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n16\n527\n300000000000000000\n\n\nExplanation\nTest case-1: All valid arrays AA are:\n\nA=[0,0,0]A=[0,0,0]; profit(A)=0\xe2\x8b\x856+0\xe2\x8b\x859+0\xe2\x8b\x854=0profit(A)=0\xe2\x8b\x856+0\xe2\x8b\x859+0\xe2\x8b\x854=0\nA=[0,0,1]A=[0,0,1]; profit(A)=0\xe2\x8b\x856+0\xe2\x8b\x859+1\xe2\x8b\x854=4profit(A)=0\xe2\x8b\x856+0\xe2\x8b\x859+1\xe2\x8b\x854=4\nA=[0,1,0]A=[0,1,0]; profit(A)=0\xe2\x8b\x856+1\xe2\x8b\x859+0\xe2\x8b\x854=9profit(A)=0\xe2\x8b\x856+1\xe2\x8b\x859+0\xe2\x8b\x854=9\nA=[1,0,1]A=[1,0,1]; profit(A)=1\xe2\x8b\x856+0\xe2\x8b\x859+1\xe2\x8b\x854=10profit(A)=1\xe2\x8b\x856+0\xe2\x8b\x859+1\xe2\x8b\x854=10\nA=[1,1,0]A=[1,1,0]; profit(A)=1\xe2\x8b\x856+1\xe2\x8b\x859+0\xe2\x8b\x854=15profit(A)=1\xe2\x8b\x856+1\xe2\x8b\x859+0\xe2\x8b\x854=15\nA=[2,0,1]A=[2,0,1]; profit(A)=2\xe2\x8b\x856+0\xe2\x8b\x859+1\xe2\x8b\x854=16profit(A)=2\xe2\x8b\x856+0\xe2\x8b\x859+1\xe2\x8b\x854=16\n\nThe maximum profit among all valid arrays AA is 1616, which is the answer.\nTest case-2: The optimal AA is [9,0,0,3,1,4][9,0,0,3,1,4].\nTest case-3: The optimal AA is [0,300000000,0][0,300000000,0].\n\n\n\nAuthor:\n1\xe2\x98\x85arvindf232\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/TANGLINGTREE\n\n\nTags:\n\n               \n                 arvindf232, cook138, dynamic-programming, medium-hard, slope-trick, small-to-large\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n4076\n\n\nDate Added:\n20-02-2022\n\n\nTime Limit:\n4 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'