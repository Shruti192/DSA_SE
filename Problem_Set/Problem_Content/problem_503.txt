b"\nRead problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese as well.\nNikitas does not want to study for his exams, so he decided to become a disruptor and get a part-time job as a tax collector in Airland. Airland consists of NN houses (numbered 11 through NN) and MM one-way supply pathways that connect them. Each house has a budget; let's denote the budget of house ii by BiBi (in coins). The neighbourhood of a house is the set of houses which both can supply this house and can be supplied from this house. (directly or indirectly, including itself)    \nNikitas can choose to start his tax-collecting journey at any house. Then, he can move along supply pathways to visit more houses and collect taxes on the way. For each valid ii, when Nikitas visits house ii for the first time (including the house where he starts the journey), but hasn't visited any house in the neighbourhood of house ii before, then he must choose a positive integer cc and announce to each house in this neighbourhood that it should pay cc coins in taxes.\nWhenever a house with a budget bb is asked to pay cc coins, two things can happen. If c\xe2\x89\xa4bc\xe2\x89\xa4b, this house pays the tax. If c>bc>b, this house cannot afford to pay the tax, so it does not pay anything. Note that no house may be asked to pay taxes twice.\nWhen the houses that can afford to pay the announced tax pay it, Nikitas can continue his journey in the same way until he cannot collect any more money. He has to be careful, though \xe2\x80\x95 at the end, if there are more than KK houses that were asked to pay their tax, but did not pay because they could not afford it, the captain of Airland will take his katana and capture Nikitas, so he will end his tax-collecting journey without earning any money. Otherwise, Nikitas earns all the money he collected.\nNikitas wants to maximise the amount of money he will make. Luckily, you know all the information about the supply pathways in Airland, so you offer to help Nikitas calculate the maximum amount of money he can make without getting captured. Since this number may be large, compute it modulo 10000000211000000021 (109+21109+21).\nInput\n\nThe first line of the input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.\nThe first line of each test case contains three space-separated integers NN, MM and KK. \nThe second line contains NN space-separated integers B1,B2,\xe2\x80\xa6,BNB1,B2,\xe2\x80\xa6,BN.\nMM lines follow. Each of these lines contains two space-separated integers uu and vv denoting the starting and ending house of a supply pathway.\n\nOutput\nFor each test case, print a single line containing one integer \xe2\x80\x95 the maximum amount of money Nikitas can make without being captured, modulo 10000000211000000021 (109+21109+21).\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa451\xe2\x89\xa4T\xe2\x89\xa45\n3\xe2\x89\xa4N\xe2\x89\xa41053\xe2\x89\xa4N\xe2\x89\xa4105\n1\xe2\x89\xa4M\xe2\x89\xa42\xe2\x8b\x851051\xe2\x89\xa4M\xe2\x89\xa42\xe2\x8b\x85105\n1\xe2\x89\xa4Bi\xe2\x89\xa41091\xe2\x89\xa4Bi\xe2\x89\xa4109 for each valid ii\n0\xe2\x89\xa4K\xe2\x89\xa42000\xe2\x89\xa4K\xe2\x89\xa4200\nthe sum of NN over all test cases does not exceed 105105\nthe sum of MM over all test cases does not exceed 2\xe2\x8b\x851052\xe2\x8b\x85105\n\nSubtasks\nSubtask #1 (10 points):\n\nK=0K=0\n3\xe2\x89\xa4N\xe2\x89\xa41,0003\xe2\x89\xa4N\xe2\x89\xa41,000\n1\xe2\x89\xa4M\xe2\x89\xa45\xe2\x8b\x851041\xe2\x89\xa4M\xe2\x89\xa45\xe2\x8b\x85104\nthe sum of MM over all test cases does not exceed 5\xe2\x8b\x851045\xe2\x8b\x85104\n\nSubtask #2 (10 points):\n\nK=1K=1\n3\xe2\x89\xa4N\xe2\x89\xa41,0003\xe2\x89\xa4N\xe2\x89\xa41,000\n1\xe2\x89\xa4M\xe2\x89\xa45\xe2\x8b\x851041\xe2\x89\xa4M\xe2\x89\xa45\xe2\x8b\x85104\nthe sum of MM over all test cases does not exceed 5\xe2\x8b\x851045\xe2\x8b\x85104\n\nSubtask #3 (20 points):\n\n3\xe2\x89\xa4N\xe2\x89\xa41,0003\xe2\x89\xa4N\xe2\x89\xa41,000\n1\xe2\x89\xa4M\xe2\x89\xa45\xe2\x8b\x851041\xe2\x89\xa4M\xe2\x89\xa45\xe2\x8b\x85104\n0\xe2\x89\xa4K\xe2\x89\xa41000\xe2\x89\xa4K\xe2\x89\xa4100\nthe sum of MM over all test cases does not exceed 5\xe2\x8b\x851045\xe2\x8b\x85104\n\nSubtask #4 (60 points): original constraints\n\n                        Sample Input 1\n                        \n\n\n\n\n\n1\n4 4 1\n2 8 15 9\n1 3\n2 1\n4 3\n3 2\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n25\n\n\nExplanation\nExample case 1: Nikitas can start at house 44, and since it is not supplied from any other house, he can get 99 coins from it. Then, he can move to house 33 and he has to ask each house in the neighbourhood of house 33 (houses 11, 22 and 33, since house 22 supplies house 11 directly and house 33 indirectly through house 11, while house 33 supplies house 22 directly) to pay. \nSince K=1K=1, Nikitas will be okay if house 11 does not pay, so he can ask for 88 coins from each house. He gets 8\xe2\x8b\x852=168\xe2\x8b\x852=16 coins in total from houses 22 and 33. At the end, Nikitas earns 9+16=259+16=25 coins.\n\n\n\nAuthor:\n4\xe2\x98\x85stelkasouridis\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/MAXTAX\n\n\nTags:\n\n               \n                 DP Approach, Strongly Connected Components, Topological Sorting\n                 \n                     \n                     Algorithms, Dynamic Programming, Graph Algos, DAG Algos\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2349\n\n\nDate Added:\n29-01-2019\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"