b"\nRead problems statements in Mandarin chinese, Russian and Vietnamese as well.\nChef has started learning to solve dynamic programming problems recently. He has practiced on a lot of problems already, so he wants to try his hands on the hardest problems in this domain.\nChef only likes the interesting part of solving dynamic programming problems \xe2\x80\x94 specifically, he just likes to divide a problem into beautiful subproblems which consist of solving recurrences; he finds actually solving these recurrences quite boring. Since you are Chef's assistant, your job is solving this boring part for Chef.\nLet's define a recurrent sequence {dp(k)}\xe2\x88\x9ek=1{dp(k)}k=1\xe2\x88\x9e with parametres AA, BB and KK as follows:\n\ndp(1)=Kdp(1)=K\nfor n>1n>1, dp(n)=A\xe2\x8b\x85dp(n\xe2\x88\x921)+B\xe2\x8b\x85\xe2\x88\x91i=1n\xe2\x88\x921dp(i)\xe2\x8b\x85dp(n\xe2\x88\x92i)dp(n)=A\xe2\x8b\x85dp(n\xe2\x88\x921)+B\xe2\x8b\x85\xe2\x88\x91i=1n\xe2\x88\x921dp(i)\xe2\x8b\x85dp(n\xe2\x88\x92i)\n\nChef would like you to find dp(N)dp(N). Since this number can be very large, compute it modulo 109+7109+7.\nInput\nThe first and only line of the input contains four space-separated integers NN, KK, AA and BB.\nOutput\nPrint a single line containing one integer \xe2\x80\x94 the value of dp(N)dp(N) modulo 109+7109+7.\nConstraints\n\n1\xe2\x89\xa4N\xe2\x89\xa41071\xe2\x89\xa4N\xe2\x89\xa4107\n1\xe2\x89\xa4B,K\xe2\x89\xa4109+71\xe2\x89\xa4B,K\xe2\x89\xa4109+7\n0\xe2\x89\xa4A\xe2\x89\xa4109+70\xe2\x89\xa4A\xe2\x89\xa4109+7\n\nSubtasks\nSubtask #1 (5 points): N\xe2\x89\xa45,000N\xe2\x89\xa45,000\nSubtask #2 (10 points): N\xe2\x89\xa4105N\xe2\x89\xa4105\nSubtask #3 (10 points):\n\nN\xe2\x89\xa4106N\xe2\x89\xa4106\nA=0A=0\n\nSubtask #4 (25 points): original constraints\nExample Input\n\n4 1 2 1\n\nExample Output\n\n57\n\nExplanation\nThe first four terms of this sequence are:\n\ndp(1)=1dp(1)=1\ndp(2)=2\xe2\x8b\x85dp(1)+dp(1)\xe2\x8b\x85dp(1)=3dp(2)=2\xe2\x8b\x85dp(1)+dp(1)\xe2\x8b\x85dp(1)=3\ndp(3)=2\xe2\x8b\x85dp(2)+dp(1)\xe2\x8b\x85dp(2)+dp(2)\xe2\x8b\x85dp(1)=12dp(3)=2\xe2\x8b\x85dp(2)+dp(1)\xe2\x8b\x85dp(2)+dp(2)\xe2\x8b\x85dp(1)=12\ndp(4)=2\xe2\x8b\x85dp(3)+dp(1)\xe2\x8b\x85dp(3)+dp(2)\xe2\x8b\x85dp(2)+dp(3)\xe2\x8b\x85dp(1)=57dp(4)=2\xe2\x8b\x85dp(3)+dp(1)\xe2\x8b\x85dp(3)+dp(2)\xe2\x8b\x85dp(2)+dp(3)\xe2\x8b\x85dp(1)=57\n\n\n\n\nAuthor:\n7\xe2\x98\x85usaxena95\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/JADUGAR\n\n\nTags:\n\n               \n                 Pre processing, Fermat's Little Theorem, Modulo Multiplicative Inverse, Generating Functions\n                 \n                     \n                     Advanced Algorithms, Mathematics, Modular Arithmetic, Sequences and Progression\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2260\n\n\nDate Added:\n22-03-2018\n\n\nTime Limit:\n1.5 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"