b"\nAlice and Bob play a game on an array of NN integers. They alternate moves, with Alice making the first move.\nThe rules are as follows:\n\nOn their first move, a player can pick any element in the array, add its value to their score, and then remove it from the array.\nOn a move that is not their first move, the player should pick an element with the opposite parity of the element chosen on their previous move, add its value to their score, and then remove it from the array.\nIf a player cannot make a move, either because the array is empty or it doesn't contain an element of the parity they need, the player skips their turn.\nThe game ends when both players are unable to move.\n\nNote that the parity of an element chosen by a player depends only on the parity of their own previously chosen element \xe2\x80\x94 it does not depend on what their opponent last chose.\nDetermine the optimal score of Alice if both players play optimally, each attempting to maximize their own score. If there are multiple ways to obtain maximum score for themselves, the players will adopt a strategy that will maximize the score of their opponent whilst obtaining their maximum score themselves. \nNote that it is not necessary to use all the elements in the array.\nAlso note that when a player skips a turn, the parity that he needs in the next move remains same as that of the current move.\nInput Format\n\nThe first line of input will contain a single integer TT, denoting the number of test cases. Then the test cases follow.\nEach test case consists of two lines of input.\nThe first line of each test case contains one integer NN \xe2\x80\x94 the size of the array AA\nThe second line of each test case contains NN space-separated integers, denoting the array elements.\n\nOutput Format\nFor each test case, output on a new line the optimal score achieved by Alice.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa42\xe2\x8b\x851041\xe2\x89\xa4T\xe2\x89\xa42\xe2\x8b\x85104\n2\xe2\x89\xa4N\xe2\x89\xa41052\xe2\x89\xa4N\xe2\x89\xa4105\n1\xe2\x89\xa4Ai\xe2\x89\xa41061\xe2\x89\xa4Ai\xe2\x89\xa4106\nSum of NN across all test cases won't exceed 2\xe2\x8b\x851052\xe2\x8b\x85105\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n3\n4\n1 2 3 4\n3\n45 10 53\n6\n7 5 2 2 6 2\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n5\n55\n15\n\n\nExplanation\nTest case 11: Under optimal play, Alice's maximum score is 55. One sequence of moves leading to this score is:\n\nOn her first move, Alice picks 44.\nOn his first move, Bob picks 33.\nOn her second move, Alice must choose an odd number, since she previously picked an even number. So, Alice's only choice is to pick 11.\nOn his second move, Bob picks 22, since he must choose an even number and it is the only one left.\n\nAlice's score is thus 4+1=54+1=5. Note that this is not the only optimal strategy \xe2\x80\x94 however, any other strategy where both players play optimally will still lead to Alice having a score of 55.\nTest case 22: Alice's strategy is as follows:\n\nOn her first move, Alice picks 1010.\nOn his first move, Bob picks 5353.\nFinally, Alice picks 4545, ending up with a score of 10+45=5510+45=55.\n\nNote that if Alice picks either 5353 or 4545 on her first move, Bob will pick 1010 on his move. This leaves Alice unable to make a move, so she skips her turn and Bob picks the remaining number, leaving Alice with a score strictly smaller than 5555.\nTest case 33: Alice picks 6,7,6,7, and 22 for a score of 1515, while Bob picks 2,5,2,5, and 22 for a score of 99. Note that Bob can also achieve a score of 99 by picking 77 and 22 and then skipping his third move, but he won't do this because it would lead to Alice only reaching a score of 1313 \xe2\x80\x94 as mentioned earlier, a player attempts to maximize their own score, and then maximize their opponent's score. \n\n\n\nAuthor:\n6\xe2\x98\x85munch_01\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/VALVEX\n\n\nTags:\n\n               \n                 logicalthinking, math, munch_01, start36\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2429\n\n\nDate Added:\n7-02-2022\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"