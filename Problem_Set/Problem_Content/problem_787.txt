b'\nRead problem statements in Bengali, Mandarin Chinese, Russian, and Vietnamese as well.\nChef Ada constructed a simple undirected graph GG with NN vertices (numbered 11 through NN) as follows:\n\nStart with a complete graph with KK vertices and K\xe2\x8b\x85(K\xe2\x88\x921)/2K\xe2\x8b\x85(K\xe2\x88\x921)/2 edges.\nThen, add N\xe2\x88\x92KN\xe2\x88\x92K vertices one by one. After adding each vetex, find some clique of K\xe2\x88\x921K\xe2\x88\x921 vertices in the graph and connect the new vertex to all the vertices of that clique.\n\nConsider NN boolean variables X1,X2,\xe2\x80\xa6,XNX1,X2,\xe2\x80\xa6,XN and their negations \xc2\xacX1,\xc2\xacX2,\xe2\x80\xa6,\xc2\xacXN\xc2\xacX1,\xc2\xacX2,\xe2\x80\xa6,\xc2\xacXN, corresponding to vertices of the graph. You are given the initial values of all variables.\nA CNF boolean expression is defined as a conjunction of clauses, where each clause is a disjunction of two or more elements of the set of variables and their negations.\nUsing the graph GG, Ada wrote a CNF boolean expression BB with MM clauses, where each clause corresponds to a clique in the graph with some (maybe none) of the variables (corresponding to vertices) negated. More formally, for each ii from 11 to MM:\n\nAda chose some clique in the graph, consisting of LiLi vertices Z1,Z2,\xe2\x80\xa6,ZLiZ1,Z2,\xe2\x80\xa6,ZLi\nthen for each valid jj, Ada chose a variable Pi,jPi,j as either XZjXZj or \xc2\xacXZj\xc2\xacXZj\nthe ii-th clause in the expression BB had LiLi terms: Pi,1\xe2\x88\xa8Pi,2\xe2\x88\xa8\xe2\x80\xa6\xe2\x88\xa8Pi,LiPi,1\xe2\x88\xa8Pi,2\xe2\x88\xa8\xe2\x80\xa6\xe2\x88\xa8Pi,Li\n\nAda wants the expression to evaluate to "true". In order to achieve that, she may change the values of variables; for each valid ii, the cost of changing the value of XiXi (from "true" to "false" or vice versa) is CiCi. Find the minimum total cost needed to make the expression BB evaluate to "true" or determine that it is impossible.\nInput\n\nThe first line of the input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.\nThe first line of each test case contains three space-separated integers NN, MM and KK.\nThe second line contains a single binary string SS with length NN describing the initial values of the variables. For each valid ii, the ii-th character of SS is \'1\' if XiXi is true or \'0\' if XiXi is false.\nThe third line contains NN space-separated integers C1,C2,\xe2\x80\xa6,CNC1,C2,\xe2\x80\xa6,CN.\nMM lines follow. For each valid ii, the ii-th of these lines contains an integer LiLi followed by a space and LiLi space-separated integers representing the variables Pi,1,\xe2\x80\xa6,Pi,LiPi,1,\xe2\x80\xa6,Pi,Li. For each valid ii, the variable XiXi is represented by the integer ii and its negation is represented by \xe2\x88\x92i\xe2\x88\x92i.\n\nOutput\nFor each test case, print a single line containing one integer \xe2\x80\x95 the minimum cost needed to make the boolean expression evaluate to "true", or \xe2\x88\x921\xe2\x88\x921 if it is impossible.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa4101\xe2\x89\xa4T\xe2\x89\xa410\n1\xe2\x89\xa4N,M\xe2\x89\xa41441\xe2\x89\xa4N,M\xe2\x89\xa4144\n3\xe2\x89\xa4K\xe2\x89\xa493\xe2\x89\xa4K\xe2\x89\xa49\neach character of SS is either \'0\' or \'1\'\n1\xe2\x89\xa4Ci\xe2\x89\xa42561\xe2\x89\xa4Ci\xe2\x89\xa4256 for each valid ii\n1\xe2\x89\xa4Li\xe2\x89\xa4N1\xe2\x89\xa4Li\xe2\x89\xa4N for each valid ii\n1\xe2\x89\xa4|Pi,j|\xe2\x89\xa4N1\xe2\x89\xa4|Pi,j|\xe2\x89\xa4N for each valid i,ji,j\n\nSubtasks\nSubtask #1 (25 points, time limit 1 second): K=3K=3\nSubtask #2 (75 points, time limit 6 seconds): original constraints\n\n                        Sample Input 1\n                        \n\n\n\n\n\n1\n5 3 3\n00001\n1 4 2 3 7\n3 1 -2 4\n3 2 3 -5\n3 1 -3 2\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n3\n\n\nExplanation\nExample case 1: The following figure depicts the graph used to generate the expression.\n\nThe boolean expression is B=(X1\xe2\x88\xa8\xc2\xacX2\xe2\x88\xa8X4)\xe2\x88\xa7(X2\xe2\x88\xa8X3\xe2\x88\xa8\xc2\xacX5)\xe2\x88\xa7(X1\xe2\x88\xa8\xc2\xacX3\xe2\x88\xa8X2)B=(X1\xe2\x88\xa8\xc2\xacX2\xe2\x88\xa8X4)\xe2\x88\xa7(X2\xe2\x88\xa8X3\xe2\x88\xa8\xc2\xacX5)\xe2\x88\xa7(X1\xe2\x88\xa8\xc2\xacX3\xe2\x88\xa8X2).\nOne optimal solution is to change the values of X1X1 and X3X3.\n\n\n\nAuthor:\n7\xe2\x98\x85alei\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/CCNF\n\n\nTags:\n\n               \n                 Graphs, Trees, 2 SAT, Dynamic Programming, DFS\n                 \n                     \n                     Data Structures, Advanced Algorithms, Algorithms, Graph Algos, Traversals\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n3160\n\n\nDate Added:\n2-03-2021\n\n\nTime Limit:\n1 - 6 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'