b"\nYou have a tree of NN vertices rooted at vertex 11, where NN is even. The ii-th vertex has a binary value AiAi written on it (i.e, each AiAi is either 00 or 11).\nA tree is said to be balanced if and only if the number of zeros written on its vertices equals the number of ones written on its vertices.\nYou can select some disjoint subtrees and flip the values on them (i.e, make all 0's into 1's and all 1's into 0's). Formally, you can pick any subset (possibly empty) of vertices {v1,v2,\xe2\x80\xa6,vk}{v1,v2,\xe2\x80\xa6,vk} such that vivi is not an ancestor of vjvj for i\xe2\x89\xa0ji\xe2\x89\xa0j, and flip the value of AxAx for every vertex xx that is contained in the subtree of some vivi.\nFind a way of performing this operation that makes the entire tree balanced. It can be proved that the solution always exists.\nIf there are multiple possible solutions, you may print any of them. In particular, you do not need to minimize the number of subtrees that are flipped.\nInput Format\n\nThe first line of input contains a single integer TT, the number of test cases. The description of test cases follows.\nThe first line of each test case contains an integer NN \xe2\x80\x94 the size of the tree.\nThe second line contains NN space-separated integers A1,A2,\xe2\x80\xa6,ANA1,A2,\xe2\x80\xa6,AN \xe2\x80\x94 the values on the vertices.\nThen, N\xe2\x88\x921N\xe2\x88\x921 lines follow. The ii-th line contains two space-separated integers uiui and vivi \xe2\x80\x94 the vertices connected by the ii-th edge.\n\nOutput Format\n\nFor each test case, first print a single integer mm \xe2\x80\x94 the number of operations you performed.\nThen, on the second line, print mm space-separated integers \xe2\x80\x94 the roots of the subtrees you decided to flip.\nIf there are multiple solutions, you can print any of them.\n\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa430001\xe2\x89\xa4T\xe2\x89\xa43000\nThe sum of NN across all test cases doesn't exceed  3\xe2\x8b\x851053\xe2\x8b\x85105\nNN is even\n0\xe2\x89\xa4Ai\xe2\x89\xa410\xe2\x89\xa4Ai\xe2\x89\xa41\n\nSubtasks\n\nSubtask 1 (10 points):\nThe ii-th edge connects vertices ii and i+1i+1.\nSubtask 2 (25 points):\nSum of NN across all test cases doesn't exceed 500500.\nSubtask 3 (30 points):\nAi=1Ai=1 for 1\xe2\x89\xa4i\xe2\x89\xa4N1\xe2\x89\xa4i\xe2\x89\xa4N.\nSubtask 4 (35 points):\nNo further constraints.\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n2\n4\n0 1 0 0\n1 2\n1 3\n3 4\n4\n1 1 1 1\n1 2\n1 3\n1 4\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n1\n4 \n2\n3 4 \n\n\nExplanation\nTest case 11: The values A1,A2,A3,A4A1,A2,A3,A4 become [0,1,0,1][0,1,0,1] after the flip. The tree is \nbalanced since there are two 0's and two 1's.\nTest case 22: The values A1,A2,A3,A4A1,A2,A3,A4 become [0,0,1,1][0,0,1,1] after the flips.\n\n\n\nAuthor:\ndannyboy1204\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/B01T\n\n\nTags:\n\n               \n                 Trees, Greedy\n                 \n                     \n                     Data Structures, Graphs, Algorithms\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2526\n\n\nDate Added:\n12-05-2022\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"