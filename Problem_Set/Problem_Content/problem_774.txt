b'\nToday is the day of the CCDSAP exam. Chef is responsible for monitoring the exam. The hall in which the exam will be held contains NN seats (numbered 11 through NN) arranged in a row. Initially, each seat is either empty or occupied by a participant in the exam. You are given a binary string SS with length NN; for each valid ii, the ii-th character of SS is \'1\' if the ii-th seat is occupied or \'0\' if this seat is empty.\nChef wants to make sure that no two participants are sitting next to each other, in order to prevent cheating. To do this, Chef may perform a number of operations (possibly zero). In each operation, he can ask a participant to move from his seat to an adjacent seat, either to its left or right, if such a seat exists and is empty.\nFind the minimum number of operations required to make sure that no two participants are sitting next to each other (in adjacent seats), or determine that it is impossible.\nInput\n\nThe first line of the input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.\nThe first line of each test case contains a single integer NN.\nThe second line contains a single string SS with length NN.\n\nOutput\nFor each test case, print a single line containing one integer \xe2\x80\x95 the minimum number of operations, or the string "impossible" if Chef cannot achieve his goal.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa410,0001\xe2\x89\xa4T\xe2\x89\xa410,000\n1\xe2\x89\xa4N\xe2\x89\xa42\xe2\x88\x971051\xe2\x89\xa4N\xe2\x89\xa42\xe2\x88\x97105\nthe sum of NN over all test cases does not exceed 2\xe2\x88\x971052\xe2\x88\x97105\nthe exam has at least one participant\n\nSubtasks\nSubtask #1 (50 points): the sum of NN over all test cases does not exceed 5,0005,000\nSubtask #2 (50 points): original constraints\n\n                        Sample Input 1\n                        \n\n\n\n\n\n4\n3\n011\n5\n10111\n1\n1\n6\n000111\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n1\nimpossible\n0\n3\n\n\n\n\n\nAuthor:\n6\xe2\x98\x85kingofnumbers\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/CCDSAP\n\n\nTags:\n\n               \n                 DP Approach, ad-hoc\n                 \n                     \n                     Algorithms, Dynamic Programming, Constructive\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n3112\n\n\nDate Added:\n23-01-2020\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'