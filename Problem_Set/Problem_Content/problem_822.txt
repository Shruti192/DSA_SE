b"\nThe problem statement in this and the 'Easy' version is exactly the same. The only difference is in the constraints.\nsibasish_14 is going to retire from problemsetting for IIIT-Bh's Competitive  Coding Club(C3)(C3) after Fastest Code First 2.0. So, now it's upto pritishn to choose a replacement for him. The viable options are niket_301 and cryptobrat.   \nHowever, cryptobrat is busy making projects for his CV/Resume and niket_301 is busy playing Skyrim. So both of them are hesitant to do problemsetting voluntarily.\nSo, pritishn has decided to do the following to choose the next problem setter:\n\nTake a N\xc3\x97NN\xc3\x97N matrix (rows numbered from 1 to N top to bottom and columns numbered from 1 to N left to right). \nEach cell of the matrix has one of the three characters 'D', 'L' and 'R'.\nNow he will put a robot on any of the cells  (randomly chosen) in the first row and the robot will move according to the character written on the cell it's standing on.\nFor each cell (i,j)(i,j) :\nif the character is 'D' , the robot will move to cell (i+1,j)(i+1,j) from this cell.\nif the character is 'L' , the robot will move to cell (i,j\xe2\x88\x921)(i,j\xe2\x88\x921) from this cell.\nif the character is 'R' , the robot will move to cell (i,j+1)(i,j+1) from this cell.  \nThe robot will not move out of the matrix. If a cell has a character that tells robot to move out of the cell , then the robot will stop there.\nIt's guaranteed that there's no cell (i,j)(i,j) such that this cell has 'R' and cell (i,j+1)(i,j+1) has 'L' .\n\nLet the cell that the robot stops at be (i,j)(i,j) . If i+ji+j is an even number, then niket_301 will be chosen otherwise cryptobrat will be chosen.\nYou are given the matrix , print out the number of cells in the first row that will lead to choosing niket_301.\n\nInput:\n\nFirst line will contain TT, number of testcases. Then the testcases follow. \nThe first line of each test case contains an integer NN .\nThe next NN lines each has a string of length NN.\nThe jthjth character of the ithith string represents the character in the cell (i,j)(i,j)\n\n\nOutput:\nFor each testcase, output in a single line the number of cells in the row 1 that will lead to choosing niket_301.\n\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa410001\xe2\x89\xa4T\xe2\x89\xa41000\n1\xe2\x89\xa4N\xe2\x89\xa410001\xe2\x89\xa4N\xe2\x89\xa41000\nSum of N over all test cases doesn't exceed 1000.\n\n\nSample Input:\n1\n5\nRRRDD\nRDDLD\nRDDDR\nDDLRD\nRDLLR\n\nSample Output:\n1\n\nEXPLANATION:\nStarting from cell (1,1),(1,2),(1,3),(1,4)(1,1),(1,2),(1,3),(1,4) we end up at cell (5,2)(5,2) , so all these cells will lead to choosing cryptobrat.\nStarting with cell (1,5)(1,5) we end up at cell (3,5)(3,5), so only this cell will lead to choosing niket_301.\n\n\n\nAuthor:\n5\xe2\x98\x85pritishn\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/FCF2P2\n\n\nTags:\n\n               \n                 depth-first-search, dynamic-programming, easy, fcf22020, pritishn, pritishn\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\nN/A\n\n\nDate Added:\n27-07-2020\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"