b"\nYou are given NN and there exists an array of NN items, which only the Chef knows. The i-th item of the array will have a weight (WiWi) and a profit (PiPi) value associated with it.\nYou are allowed to ask the chef the value of dp[i][j]dp[i][j], for a given i,ji,j where dp[i][j]dp[i][j] denotes the maximum amount of profit you can earn if you pick the best subset of items from the first ii items of the array such that the sum of the weights of the picked items doesn't exceed jj.\nYour aim is to determine the weight and profit of each item, i.e recover the WW and PP array.\nYou are allowed to query at most 15001500 times.\nInteraction\n\nThe first line of the input contains a single integer NN, denoting the number of items in the array.\nYou need to print to the standard output, for the operations you wish to perform. There are two types of operations:\nIn the first type, you are asking the judge the value of dp[i][j]dp[i][j]. You need to print a single line with 11 ii jj, where the judge will return a single value by printing the integer in the standard input. It will be the value of dp[i][j]dp[i][j].\nIn the second type, you are telling the judge the answer. For each test case, you should perform this operation exactly once at the end. This operation is not taken into account when counting the number of queries done.You need to print 33 lines:\nThe first line starts with 22, denoting the type of query.\nThe second line consists of NN integers denoting the WW weights array in the format W1W1 W2W2 W3W3 \xe2\x80\xa6\xe2\x80\xa6 WNWN.\nThe third line consists of NN integers denoting the PP profits array in the format P1P1 P2P2 P3P3 \xe2\x80\xa6\xe2\x80\xa6 PNPN.\n\nNote\nDon't forget to flush the standard output after printing each line. It can be done using fflush(stdout) in C/C++, System.out.flush() in Java and sys.stdout.flush() in Python.\nIf you exceed 15001500 queries OR If in the first type of query, ii and jj don't satisfy the inequalities 1\xe2\x89\xa4i\xe2\x89\xa4N1\xe2\x89\xa4i\xe2\x89\xa4N and 1\xe2\x89\xa4j\xe2\x89\xa41041\xe2\x89\xa4j\xe2\x89\xa4104 OR The WW and PP in the second type of query don't satisfy the inequality 1\xe2\x89\xa4Wi\xe2\x89\xa41001\xe2\x89\xa4Wi\xe2\x89\xa4100 and 1\xe2\x89\xa4Pi\xe2\x89\xa41061\xe2\x89\xa4Pi\xe2\x89\xa4106, for all i\xe2\x88\x88[1,N]i\xe2\x88\x88[1,N] then your program will get the verdict Wrong Answer.\nAlso note that there is a hidden WW and PP array and the solution is going to be matched exactly against it, i.e there is a unique solution for each test case.\nConstraints\n\n2\xe2\x89\xa4N\xe2\x89\xa41022\xe2\x89\xa4N\xe2\x89\xa4102\nFor each query of first type: 1\xe2\x89\xa4i\xe2\x89\xa4N1\xe2\x89\xa4i\xe2\x89\xa4N and 1\xe2\x89\xa4j\xe2\x89\xa41041\xe2\x89\xa4j\xe2\x89\xa4104\nFor the query of second type: 1\xe2\x89\xa4Wi\xe2\x89\xa41001\xe2\x89\xa4Wi\xe2\x89\xa4100 and 1\xe2\x89\xa4Pi\xe2\x89\xa41061\xe2\x89\xa4Pi\xe2\x89\xa4106, for all i\xe2\x88\x88[1,N]i\xe2\x88\x88[1,N] \n\nExample\nJudge                                          You\n2\n                                                    1 1 2\n0\n                                                    1 1 3\n2\n                                                    1 2 9\n3\n                                                    1 2 10\n5\n                                                    2\n                                                    3 7\n                                                    2 3\n\nExplanation\nWe get that W=[3,7]W=[3,7] and P=[2,3]P=[2,3].\n\n\n\nAuthor:\n6\xe2\x98\x85sidhant007\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/INVSACK\n\n\nTags:\n\n               \n                 Interactive Problems, Bottom-up, Binary Search\n                 \n                     \n                     Special, Algorithms, Dynamic Programming, DP Approach, Searching\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\nN/A\n\n\nDate Added:\n6-12-2019\n\n\nTime Limit:\n2 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"