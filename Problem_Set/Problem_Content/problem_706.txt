b'\nRead problem statements in Bengali, Mandarin Chinese, Russian, and Vietnamese as well.\nChef has been recently studying strings and probabilities and he came up with a problem for you.\nConsider an alphabet with NN characters (denoted by c1,c2,\xe2\x80\xa6,cNc1,c2,\xe2\x80\xa6,cN). For each valid ii, the character cici has a power aiai; the power of a string that contains only characters from this alphabet is the sum of their powers (if a character occurs multiple times, its power also occurs in the sum multiple times). For example, the power of a string c1c2c3c1c2c3 is a1+a2+a3a1+a2+a3 and the power of a string c1c2c1c1c2c1 is 2\xe2\x8b\x85a1+a22\xe2\x8b\x85a1+a2.\nAlso, for each valid ii, you are given two parameters pipi and BiBi, where pipi is a non-negative integer and Bi\xe2\x88\x88{0,1}Bi\xe2\x88\x88{0,1}. For an integer KK, we can construct a random string SS with length KK in the following way:\n\nDefine R=\xe2\x88\x91i=1NpiR=\xe2\x88\x91i=1Npi.\nFirst, each of the KK characters of SS is chosen independently. For each valid ii and jj, the ii-th character of SS is cjcj with probability pj/Rpj/R.\nThen, for each valid ii, we compute the number of occurrences of cici in SS and if the parity of this number of occurrences (i.e. its remainder modulo 22) is different from BiBi, we discard the string SS and try to construct a new random string SS from the beginning.\nOtherwise (if the parities of occurrences of all characters match the sequence BB), we have constructed the random string SS.\nAll parameters are chosen in such a way that there is at least one string we can generate without discarding it. In particular, R>0R>0.\n\nWhat is the expected value of the power of the constructed string SS? You need to answer QQ queries. In each query, you are given a different value of KK and you should find the expected power.\nFor each query, it can be proved that the expected power can be represented as a fraction PQPQ, where PP and QQ are non-negative integers and QQ is coprime with 998,244,353998,244,353. You need to compute P\xe2\x8b\x85Q\xe2\x88\x921P\xe2\x8b\x85Q\xe2\x88\x921 modulo 998,244,353998,244,353, where Q\xe2\x88\x921Q\xe2\x88\x921 denotes the multiplicative inverse of QQ modulo 998,244,353998,244,353.\nInput\n\nThe first line of the input contains a single integer NN.\nNN lines follow. For each valid ii, the ii-th of these lines contains three space-separated integers aiai, pipi and BiBi.\nThe next line contains a single integer QQ.\nQQ lines follow. Each of these lines contains a single integer KK describing a query.\n\nOutput\nFor each query, print a single line containing one integer P\xe2\x8b\x85Q\xe2\x88\x921P\xe2\x8b\x85Q\xe2\x88\x921 modulo 998,244,353998,244,353.\nConstraints\n\n1\xe2\x89\xa4N\xe2\x89\xa42,0001\xe2\x89\xa4N\xe2\x89\xa42,000\n1\xe2\x89\xa4ai\xe2\x89\xa44\xe2\x8b\x851081\xe2\x89\xa4ai\xe2\x89\xa44\xe2\x8b\x85108 for each valid ii\n0\xe2\x89\xa4pi\xe2\x89\xa42,0000\xe2\x89\xa4pi\xe2\x89\xa42,000 for each valid ii\n1\xe2\x89\xa4R\xe2\x89\xa42,0001\xe2\x89\xa4R\xe2\x89\xa42,000\nBi\xe2\x88\x88{0,1}Bi\xe2\x88\x88{0,1} for each valid ii\n1\xe2\x89\xa4Q\xe2\x89\xa42\xe2\x8b\x851041\xe2\x89\xa4Q\xe2\x89\xa42\xe2\x8b\x85104\n1\xe2\x89\xa4K\xe2\x89\xa44\xe2\x8b\x851081\xe2\x89\xa4K\xe2\x89\xa44\xe2\x8b\x85108\n\nSubtasks\nSubtask #1 (2 points, time limit 1 second): N,K\xe2\x89\xa415N,K\xe2\x89\xa415\nSubtask #2 (8 points, time limit 1.5 seconds):\n\nK\xe2\x89\xa42,000K\xe2\x89\xa42,000\nQ\xe2\x89\xa4104Q\xe2\x89\xa4104\n\nSubtask #3 (10 points, time limit 1.5 seconds): N,R\xe2\x89\xa4400N,R\xe2\x89\xa4400\nSubtask #4 (80 points, time limit 2.5 seconds): original constraints\n\n                        Sample Input 1\n                        \n\n\n\n\n\n2\n1 1 0\n2 2 1\n2\n1\n3\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n2\n855638022\n\n\nExplanation\nIn the first query, we can only generate the one-character string c2c2. Therefore, the expected power is 22.\nIn the second query, we can generate the following strings:\n\nc1c1c2c1c1c2 with power 44 and probability 2/142/14\nc1c2c1c1c2c1 with power 44 and probability 2/142/14\nc2c1c1c2c1c1 with power 44 and probability 2/142/14\nc2c2c2c2c2c2 with power 66 and probability 8/148/14\n\nThe expected power is therefore 2\xe2\x8b\x854+2\xe2\x8b\x854+2\xe2\x8b\x854+8\xe2\x8b\x8562+2+2+8=367=855,638,0222\xe2\x8b\x854+2\xe2\x8b\x854+2\xe2\x8b\x854+8\xe2\x8b\x8562+2+2+8=367=855,638,022.\n\n\n\nAuthor:\n6\xe2\x98\x85samarth2017\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/STRPOW\n\n\nTags:\n\n               \n                 Expected Value, Generating Functions, Dynamic Programming\n                 \n                     \n                     Mathematics, Probability, Sequences and Progression, Algorithms\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n3035\n\n\nDate Added:\n24-03-2021\n\n\nTime Limit:\n1 - 2.5 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'