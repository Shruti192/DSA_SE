b"\n\nYou are a transporter standing in a production plant where you see a series of boxes coming over a conveyor belt. Transporting system works on heavy load shipment, so they have a scale of 10 kgs. Hence, the total weight being transported is rounded off to nearest multiple of 10. This determines your profit/loss in the following way.\nFor example, suppose the total weight to be shipped is 25 kgs, then it scales up to 30 kgs and hence you make a profit on 5 kgs extra shown. But in the similar way, if total weight to be shipped is 23 kgs, it scales down to 20 kgs and you makes a loss.\nA transporter uses a package to store and ship contiguous boxes coming on a conveyor belt and due to budget constraints you are allowed to use at max K different packages. Contiguous boxes coming over the belt are clubbed in a package and then the trasporter weighs the package and asks for shipment fee applicable. Help yourself in finding, what's the maximum weight which you can show. For better understanding, see the sample test case.\n\n\nInput\nFirst line will contain T, the number of test cases. Then T test cases follow.\nFirst line of each test case contains two integers N and K, the number of boxes coming over and the maximum number of boxes allowed respectively.\nNext line contains N space-separated integers W[i], the weight of respective boxes.\n\nOutput\nFor each test case print the maximum weight which can be shown.\nConstraints\n\n1 <= T <= 10\n1 <= N <=  3000 \n1 <= K <= 10\n1 <= W[i] <= 100000\n\nExample\nInput:\n2\n3 2\n2 5 8\n2 2\n7 7\n\nOutput:\n20\n20\n\nExplanation for T.C. 1 - You can club 1st and 2nd box in one package and show its weight to be 10 (from 7) and 3rd in another package to show its weight 10(from 8).\n\n\n\n\n\nAuthor:\n6\xe2\x98\x85himkha_100\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/NPLQ19A\n\n\nTags:\n\n               \n                 dynamic-programming, himkha_100, maths, nplq2019\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\nN/A\n\n\nDate Added:\n17-10-2019\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"