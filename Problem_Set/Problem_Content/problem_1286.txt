b'\nBeeds Arranging game is described by a string of length nn consisting of characters "." (empty space)  and  "*" (beed). In one move you can shift beed to one unit left or one unit right, only if the corresponding place existsexists andand isis emptyempty. The game ends up as soon as the beeds are lined up, that is, there should not exist any empty cells between any beeds.\nJaskaran is finding this game a bit challenging and needs your help. For a game, determine the minimum number of moves you need to make complete that game. \nInput\nThe first line contains a single integer t(1\xe2\x89\xa4t\xe2\x89\xa4104)t(1\xe2\x89\xa4t\xe2\x89\xa4104). Then tt test cases follow. \nThe first line of each test case contains one integer nn (1\xe2\x89\xa4si\xe2\x89\xa4106)(1\xe2\x89\xa4si\xe2\x89\xa4106)\nThe second line of each test case contains a string of length nn, consisting of the characters "." (empty space) and "*" (beed) \xe2\x80\x94 the description of the game.\nIt is guaranteed that the sum of nn  over all the test cases does not exceed106106.\n\nOutput\nFor each test case output the minimum number of moves you need to make to complete the game.\n\nConstraints\n1\xe2\x89\xa4t\xe2\x89\xa41041\xe2\x89\xa4t\xe2\x89\xa4104\n1\xe2\x89\xa4ni\xe2\x89\xa41061\xe2\x89\xa4ni\xe2\x89\xa4106\n\nSubtasks\nSubtask #1 (100 points):\nOriginal Constraints\n\nSample Input:\n \n5\n6\n**.*..\n5\n*****\n3\n.*.\n3\n...\n10\n*.*...*.**\n\n\nSample Output:\n \n1\n0\n0\n0\n9\n\n\nExplanation:\n For the first game we may move the beed at 4th4th position one unit left. Hence the answer will be 1.\n\n\n\nAuthor:\npec_chapter\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/BDARNG\n\n\nTags:\n\n               \n                 math, observation, pec_chapter, strings\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\nN/A\n\n\nDate Added:\n7-05-2021\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'