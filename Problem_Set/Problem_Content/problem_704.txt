b"\n\xc2\xa0\nFluffy the squirrel just got an array as his birthday present! There are n integers in the array, a1, a2, ..., an. Fluffy doesn't like to see larger number in front of smaller numbers. Thus, he wants to choose some of the integers from the array, and destroy them. \n\nNow, for each segment of the array that contains no destroyed elements, Fluffy wants the numbers to be non-decreasing, i.e. each element is at most equal to the one following it. For example, [3, 4, 4, 5] is non-decreasing but [4, 6, 5] isn't. He needs your help to find out how many ways are there to choose the set of integers to destroy (which may be empty or the entire set) such that all segments containing no destroyed elements are non-decreasing. Since the answer might be too large, he is just interested in the remainder of the answer when divided by 1000000007. (109 + 7)\n\xc2\xa0\nInput\nThe first line of the input contains a single integer n, the number of integers of the array. The next line contains n space-seperated integers, a1, a2, ..., an, denoting the elements of the array.\nOutput\nOutput a single integer, the number of ways to destroy a set of integers such that all segments without a destroyed element are non-decreasing.\nConstraints\n\n1 \xe2\x89\xa4 n \xe2\x89\xa4 100000\n1 \xe2\x89\xa4 ai \xe2\x89\xa4 109\n\nSubtasks\n\nSubtask 1 (37 points) : 1 \xe2\x89\xa4 n \xe2\x89\xa4 20\nSubtask 2 (63 points) : Original Constraints\n\n\xc2\xa0\nExample\nInput:\n3\n4 6 3\n\nOutput:\n6\n\n\xc2\xa0\nExplanation\nExample case 1. There are 6 sets of integers that can be removed, and they are {3}, {6}, {3, 4}, {3, 6}, {4, 6}, {3, 4, 6}. Note that {6} can be removed because Fluffy will have two segments [4] and [3], which are both non-decreasing. Note that {} (the empty set, which means we remove none of the integers) can't be removed because [4, 6, 3] is not non-decreasing (6 > 3)\n\n\n\nAuthor:\n6\xe2\x98\x85zscoder\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/MCO16102\n\n\nTags:\n\n               \n                 dynamic-programming, simple, zscoder\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\nN/A\n\n\nDate Added:\n18-10-2016\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, CPP14, PYTH, PYP3\n\n\n\n\n\nSubmit\n\n"