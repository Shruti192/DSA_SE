b"\nKrishna loves visiting coffee shop in search of finding a date for himself. It's been years now since he started visiting the coffee shop, but no luck till now. But that doesn't mean he'll stop trying. He visits the coffee shop on a regular basis, at every KK units of time. This means that his visits in the coffee shop happen at time K,2K,3K,\xe2\x80\xa6K,2K,3K,\xe2\x80\xa6 respectively. The main problem is that he doesn't know anything about the girls visiting the coffee shop, maybe that's why he's been so lonely all these years.\nA total of NN girls visit the coffee shop on a regular basis, and for each valid ii, the ithith girl visits the coffee shop at every AiAi units of time. Out of the NN girls, only one girl needs to be selected. Now, pitying upon his situation, you've decided to tell him the minimum amount of time that he'll have to wait to meet a girl in the coffee shop, just to keep his hope alive. Waiting time is the total time elapsed. For example, if there is a girl who visits the coffee shop every 33 units of time, and Krishna visits at every 22 units of time, then Krishna can meet the girl at his 12th12th visit (it would be the girl's 8th8th visit). In this case the wait time is 2424 units. You need to find a suitable girl and minimize the wait time.\nCan you do that for him?\nNote: Assume that time is discrete, and if Krishna is in the coffee shop at time KK (his first visit), then he's not there at time K+1K+1 (when K\xe2\x89\xa01K\xe2\x89\xa01). This is also true for each of the NN girls. Also, everyone starts at the same time, assume it to be 00.\nInput:\n\nThe first line of the input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.\nThe first line of each test case contains two space separated integers NN and KK.\nThe second line contains NN space separated integers A1,A2,\xe2\x80\xa6,ANA1,A2,\xe2\x80\xa6,AN.\n\nOutput:\nFor each test case print a single line containing an integer denoting the minimum amount of time Krishna has to wait.\nIf this value exceeds 10181018, print \xe2\x88\x921\xe2\x88\x921 instead, because that's the expected value of one's lifetime, and he can't wait for his whole life.\nConstraints:\n\n1\xe2\x89\xa4T\xe2\x89\xa41051\xe2\x89\xa4T\xe2\x89\xa4105\n1\xe2\x89\xa4N\xe2\x89\xa41051\xe2\x89\xa4N\xe2\x89\xa4105\n1\xe2\x89\xa4K\xe2\x89\xa410181\xe2\x89\xa4K\xe2\x89\xa41018\n1\xe2\x89\xa4Ai\xe2\x89\xa410181\xe2\x89\xa4Ai\xe2\x89\xa41018, for each valid ii\nSum of NN over all test cases doesn't exceed 106106\n\nSubtasks:\n\n10 points:\n1\xe2\x89\xa4N\xe2\x89\xa4101\xe2\x89\xa4N\xe2\x89\xa410\n1\xe2\x89\xa4K\xe2\x89\xa41001\xe2\x89\xa4K\xe2\x89\xa4100\n1\xe2\x89\xa4Ai\xe2\x89\xa41001\xe2\x89\xa4Ai\xe2\x89\xa4100, for each valid ii\nSum of NN over all test cases doesn't exceed 100100\n30 points:\n1\xe2\x89\xa4N\xe2\x89\xa41031\xe2\x89\xa4N\xe2\x89\xa4103\n1\xe2\x89\xa4K\xe2\x89\xa41091\xe2\x89\xa4K\xe2\x89\xa4109\n1\xe2\x89\xa4Ai\xe2\x89\xa41091\xe2\x89\xa4Ai\xe2\x89\xa4109, for each valid ii\nSum of NN over all test cases doesn't exceed 104104\n60 points: original constraints\n\nSample Input:\n2\n3 3\n1 2 4\n5 4\n17 12 46 8 31\n\nSample Output:\n3\n8\n\nExplanation:\n\nExample Case 1: He can meet the first girl at his first visit (it would be the girl's 3rd3rd visit). So, 33 is the minimum wait time.\nExample Case 2: He can meet the fourth girl at his second visit (it would be the girl's 1st1st visit). So, 88 is the minimum wait time.\n\n\n\n\nAuthor:\n5\xe2\x98\x85ankushkhanna\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/DWW19B\n\n\nTags:\n\n               \n                 ankushkhanna, ankushkhanna, dwwu2019, easy, greatest-common-divisor, least-common-multiple, math, observation\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\nN/A\n\n\nDate Added:\n28-12-2019\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"