b'\nTinder is a dating app that is trying out a new way of making people interact face to face. It allows its users to opt in to this new way of dating and maintains a list of the gender of the users who are willing to participate in the order they opt in. Assume we have males and females represented by MM and FF respectively.\nNow, to make the interaction as effective as possible, they want to divide the people into as small groups as possible keeping the number of males and females equal in every group. Also, they must keep the groups contiguous as they are in the list. So they can not pick people from random places in the list and put them in a group, instead, they should create divisions in the list to make the group. Note that each person should be part of at-least 11 and only 11 group.\nYour job, as their software engineer, is to find out what is the maximum number of such groups formed. It is guaranteed that one such grouping will always exist.\n\nInput:\n\nThe first line contains an integer TT which is the number of test cases.\nThe first line of each test case has an integer NN denoting the number of people that opted in.\nThe second line has a string of length NN which contains the list of people.\n\n\nOutput:\nFor each testcase, output a single integer in new line denoting the number of maximum groups formed.\n\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa41001\xe2\x89\xa4T\xe2\x89\xa4100\n1\xe2\x89\xa4N\xe2\x89\xa41051\xe2\x89\xa4N\xe2\x89\xa4105\nN%2=0N%2=0\nNumber of MM is equal to number of FF\n\n\nSubtasks\nSubtask #1 (100 points): Original constraints\n\nSample Input:\n2\n6\nMFMFMF\n8\nMMFFMFFM\n\n\nSample Output:\n3\n3\n\n\nEXPLANATION:\n\nFirst case: MF, MF, MF.\nSecond case: MMFF, MF, FM \n\n\n\n\nAuthor:\npec_chapter\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/TINDER\n\n\nTags:\n\n               \n                 cakewalk, greedy, observation, pec_chapter\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\nN/A\n\n\nDate Added:\n10-03-2021\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'